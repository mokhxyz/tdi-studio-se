package com.sforce.soap.partner.fault;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ApiFault extends com.sforce.ws.SoapFaultException implements com.sforce.ws.bind.XMLizable , IApiFault{

    /**
     * Constructor
     */
    public ApiFault() {}

    /**
     * element : exceptionCode of type {urn:fault.partner.soap.sforce.com}ExceptionCode
     * java type: com.sforce.soap.partner.fault.ExceptionCode
     */
    private static final com.sforce.ws.bind.TypeInfo exceptionCode__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:fault.partner.soap.sforce.com","exceptionCode","urn:fault.partner.soap.sforce.com","ExceptionCode",1,1,true);

    private boolean exceptionCode__is_set = false;

    private com.sforce.soap.partner.fault.ExceptionCode exceptionCode;

    @Override
    public com.sforce.soap.partner.fault.ExceptionCode getExceptionCode() {
      return exceptionCode;
    }

    @Override
    public void setExceptionCode(com.sforce.soap.partner.fault.ExceptionCode exceptionCode) {
      this.exceptionCode = exceptionCode;
      exceptionCode__is_set = true;
    }

    protected void setExceptionCode(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, exceptionCode__typeInfo)) {
        setExceptionCode((com.sforce.soap.partner.fault.ExceptionCode)__typeMapper.readObject(__in, exceptionCode__typeInfo, com.sforce.soap.partner.fault.ExceptionCode.class));
      }
    }

    /**
     * element : exceptionMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo exceptionMessage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:fault.partner.soap.sforce.com","exceptionMessage","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean exceptionMessage__is_set = false;

    private java.lang.String exceptionMessage;

    @Override
    public java.lang.String getExceptionMessage() {
      return exceptionMessage;
    }

    @Override
    public void setExceptionMessage(java.lang.String exceptionMessage) {
      this.exceptionMessage = exceptionMessage;
      exceptionMessage__is_set = true;
    }

    protected void setExceptionMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, exceptionMessage__typeInfo)) {
        setExceptionMessage(__typeMapper.readString(__in, exceptionMessage__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, exceptionCode__typeInfo, exceptionCode, exceptionCode__is_set);
       __typeMapper.writeString(__out, exceptionMessage__typeInfo, exceptionMessage, exceptionMessage__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setExceptionCode(__in, __typeMapper);
        setExceptionMessage(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ApiFault ");
      sb.append(" exceptionCode='").append(com.sforce.ws.util.Verbose.toString(exceptionCode)).append("'\n");
      sb.append(" exceptionMessage='").append(com.sforce.ws.util.Verbose.toString(exceptionMessage)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
