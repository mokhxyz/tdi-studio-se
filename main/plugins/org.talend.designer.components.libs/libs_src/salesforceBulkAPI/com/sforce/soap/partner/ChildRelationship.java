package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ChildRelationship implements com.sforce.ws.bind.XMLizable , IChildRelationship{

    /**
     * Constructor
     */
    public ChildRelationship() {}

    /**
     * element : cascadeDelete of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo cascadeDelete__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","cascadeDelete","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean cascadeDelete__is_set = false;

    private boolean cascadeDelete;

    @Override
    public boolean getCascadeDelete() {
      return cascadeDelete;
    }

    @Override
    public boolean isCascadeDelete() {
      return cascadeDelete;
    }

    @Override
    public void setCascadeDelete(boolean cascadeDelete) {
      this.cascadeDelete = cascadeDelete;
      cascadeDelete__is_set = true;
    }

    protected void setCascadeDelete(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, cascadeDelete__typeInfo)) {
        setCascadeDelete(__typeMapper.readBoolean(__in, cascadeDelete__typeInfo, boolean.class));
      }
    }

    /**
     * element : childSObject of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo childSObject__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","childSObject","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean childSObject__is_set = false;

    private java.lang.String childSObject;

    @Override
    public java.lang.String getChildSObject() {
      return childSObject;
    }

    @Override
    public void setChildSObject(java.lang.String childSObject) {
      this.childSObject = childSObject;
      childSObject__is_set = true;
    }

    protected void setChildSObject(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, childSObject__typeInfo)) {
        setChildSObject(__typeMapper.readString(__in, childSObject__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : deprecatedAndHidden of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo deprecatedAndHidden__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","deprecatedAndHidden","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean deprecatedAndHidden__is_set = false;

    private boolean deprecatedAndHidden;

    @Override
    public boolean getDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    @Override
    public boolean isDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    @Override
    public void setDeprecatedAndHidden(boolean deprecatedAndHidden) {
      this.deprecatedAndHidden = deprecatedAndHidden;
      deprecatedAndHidden__is_set = true;
    }

    protected void setDeprecatedAndHidden(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, deprecatedAndHidden__typeInfo)) {
        setDeprecatedAndHidden(__typeMapper.readBoolean(__in, deprecatedAndHidden__typeInfo, boolean.class));
      }
    }

    /**
     * element : field of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo field__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","field","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean field__is_set = false;

    private java.lang.String field;

    @Override
    public java.lang.String getField() {
      return field;
    }

    @Override
    public void setField(java.lang.String field) {
      this.field = field;
      field__is_set = true;
    }

    protected void setField(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, field__typeInfo)) {
        setField(__typeMapper.readString(__in, field__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : junctionIdListName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo junctionIdListName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","junctionIdListName","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean junctionIdListName__is_set = false;

    private java.lang.String junctionIdListName;

    @Override
    public java.lang.String getJunctionIdListName() {
      return junctionIdListName;
    }

    @Override
    public void setJunctionIdListName(java.lang.String junctionIdListName) {
      this.junctionIdListName = junctionIdListName;
      junctionIdListName__is_set = true;
    }

    protected void setJunctionIdListName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, junctionIdListName__typeInfo)) {
        setJunctionIdListName(__typeMapper.readString(__in, junctionIdListName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : junctionReferenceTo of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo junctionReferenceTo__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","junctionReferenceTo","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean junctionReferenceTo__is_set = false;

    private java.lang.String[] junctionReferenceTo = new java.lang.String[0];

    @Override
    public java.lang.String[] getJunctionReferenceTo() {
      return junctionReferenceTo;
    }

    @Override
    public void setJunctionReferenceTo(java.lang.String[] junctionReferenceTo) {
      this.junctionReferenceTo = castArray(java.lang.String.class, junctionReferenceTo);
      junctionReferenceTo__is_set = true;
    }

    protected void setJunctionReferenceTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, junctionReferenceTo__typeInfo)) {
        setJunctionReferenceTo((java.lang.String[])__typeMapper.readObject(__in, junctionReferenceTo__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : relationshipName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo relationshipName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","relationshipName","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean relationshipName__is_set = false;

    private java.lang.String relationshipName;

    @Override
    public java.lang.String getRelationshipName() {
      return relationshipName;
    }

    @Override
    public void setRelationshipName(java.lang.String relationshipName) {
      this.relationshipName = relationshipName;
      relationshipName__is_set = true;
    }

    protected void setRelationshipName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, relationshipName__typeInfo)) {
        setRelationshipName(__typeMapper.readString(__in, relationshipName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : restrictedDelete of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo restrictedDelete__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","restrictedDelete","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean restrictedDelete__is_set = false;

    private boolean restrictedDelete;

    @Override
    public boolean getRestrictedDelete() {
      return restrictedDelete;
    }

    @Override
    public boolean isRestrictedDelete() {
      return restrictedDelete;
    }

    @Override
    public void setRestrictedDelete(boolean restrictedDelete) {
      this.restrictedDelete = restrictedDelete;
      restrictedDelete__is_set = true;
    }

    protected void setRestrictedDelete(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, restrictedDelete__typeInfo)) {
        setRestrictedDelete(__typeMapper.readBoolean(__in, restrictedDelete__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, cascadeDelete__typeInfo, cascadeDelete, cascadeDelete__is_set);
       __typeMapper.writeString(__out, childSObject__typeInfo, childSObject, childSObject__is_set);
       __typeMapper.writeBoolean(__out, deprecatedAndHidden__typeInfo, deprecatedAndHidden, deprecatedAndHidden__is_set);
       __typeMapper.writeString(__out, field__typeInfo, field, field__is_set);
       __typeMapper.writeString(__out, junctionIdListName__typeInfo, junctionIdListName, junctionIdListName__is_set);
       __typeMapper.writeObject(__out, junctionReferenceTo__typeInfo, junctionReferenceTo, junctionReferenceTo__is_set);
       __typeMapper.writeString(__out, relationshipName__typeInfo, relationshipName, relationshipName__is_set);
       __typeMapper.writeBoolean(__out, restrictedDelete__typeInfo, restrictedDelete, restrictedDelete__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setCascadeDelete(__in, __typeMapper);
        setChildSObject(__in, __typeMapper);
        setDeprecatedAndHidden(__in, __typeMapper);
        setField(__in, __typeMapper);
        setJunctionIdListName(__in, __typeMapper);
        setJunctionReferenceTo(__in, __typeMapper);
        setRelationshipName(__in, __typeMapper);
        setRestrictedDelete(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ChildRelationship ");
      sb.append(" cascadeDelete='").append(com.sforce.ws.util.Verbose.toString(cascadeDelete)).append("'\n");
      sb.append(" childSObject='").append(com.sforce.ws.util.Verbose.toString(childSObject)).append("'\n");
      sb.append(" deprecatedAndHidden='").append(com.sforce.ws.util.Verbose.toString(deprecatedAndHidden)).append("'\n");
      sb.append(" field='").append(com.sforce.ws.util.Verbose.toString(field)).append("'\n");
      sb.append(" junctionIdListName='").append(com.sforce.ws.util.Verbose.toString(junctionIdListName)).append("'\n");
      sb.append(" junctionReferenceTo='").append(com.sforce.ws.util.Verbose.toString(junctionReferenceTo)).append("'\n");
      sb.append(" relationshipName='").append(com.sforce.ws.util.Verbose.toString(relationshipName)).append("'\n");
      sb.append(" restrictedDelete='").append(com.sforce.ws.util.Verbose.toString(restrictedDelete)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
