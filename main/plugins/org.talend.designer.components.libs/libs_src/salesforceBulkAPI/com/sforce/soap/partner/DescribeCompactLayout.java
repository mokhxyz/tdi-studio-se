package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeCompactLayout implements com.sforce.ws.bind.XMLizable , IDescribeCompactLayout{

    /**
     * Constructor
     */
    public DescribeCompactLayout() {}

    /**
     * element : actions of type {urn:partner.soap.sforce.com}DescribeLayoutButton
     * java type: com.sforce.soap.partner.DescribeLayoutButton[]
     */
    private static final com.sforce.ws.bind.TypeInfo actions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","actions","urn:partner.soap.sforce.com","DescribeLayoutButton",0,-1,true);

    private boolean actions__is_set = false;

    private com.sforce.soap.partner.DescribeLayoutButton[] actions = new com.sforce.soap.partner.DescribeLayoutButton[0];

    @Override
    public com.sforce.soap.partner.DescribeLayoutButton[] getActions() {
      return actions;
    }

    @Override
    public void setActions(com.sforce.soap.partner.IDescribeLayoutButton[] actions) {
      this.actions = castArray(com.sforce.soap.partner.DescribeLayoutButton.class, actions);
      actions__is_set = true;
    }

    protected void setActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, actions__typeInfo)) {
        setActions((com.sforce.soap.partner.DescribeLayoutButton[])__typeMapper.readObject(__in, actions__typeInfo, com.sforce.soap.partner.DescribeLayoutButton[].class));
      }
    }

    /**
     * element : fieldItems of type {urn:partner.soap.sforce.com}DescribeLayoutItem
     * java type: com.sforce.soap.partner.DescribeLayoutItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo fieldItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","fieldItems","urn:partner.soap.sforce.com","DescribeLayoutItem",0,-1,true);

    private boolean fieldItems__is_set = false;

    private com.sforce.soap.partner.DescribeLayoutItem[] fieldItems = new com.sforce.soap.partner.DescribeLayoutItem[0];

    @Override
    public com.sforce.soap.partner.DescribeLayoutItem[] getFieldItems() {
      return fieldItems;
    }

    @Override
    public void setFieldItems(com.sforce.soap.partner.IDescribeLayoutItem[] fieldItems) {
      this.fieldItems = castArray(com.sforce.soap.partner.DescribeLayoutItem.class, fieldItems);
      fieldItems__is_set = true;
    }

    protected void setFieldItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fieldItems__typeInfo)) {
        setFieldItems((com.sforce.soap.partner.DescribeLayoutItem[])__typeMapper.readObject(__in, fieldItems__typeInfo, com.sforce.soap.partner.DescribeLayoutItem[].class));
      }
    }

    /**
     * element : id of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo id__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","id","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean id__is_set = false;

    private java.lang.String id;

    @Override
    public java.lang.String getId() {
      return id;
    }

    @Override
    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, id__typeInfo)) {
        setId(__typeMapper.readString(__in, id__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : imageItems of type {urn:partner.soap.sforce.com}DescribeLayoutItem
     * java type: com.sforce.soap.partner.DescribeLayoutItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo imageItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","imageItems","urn:partner.soap.sforce.com","DescribeLayoutItem",0,-1,true);

    private boolean imageItems__is_set = false;

    private com.sforce.soap.partner.DescribeLayoutItem[] imageItems = new com.sforce.soap.partner.DescribeLayoutItem[0];

    @Override
    public com.sforce.soap.partner.DescribeLayoutItem[] getImageItems() {
      return imageItems;
    }

    @Override
    public void setImageItems(com.sforce.soap.partner.IDescribeLayoutItem[] imageItems) {
      this.imageItems = castArray(com.sforce.soap.partner.DescribeLayoutItem.class, imageItems);
      imageItems__is_set = true;
    }

    protected void setImageItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, imageItems__typeInfo)) {
        setImageItems((com.sforce.soap.partner.DescribeLayoutItem[])__typeMapper.readObject(__in, imageItems__typeInfo, com.sforce.soap.partner.DescribeLayoutItem[].class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    @Override
    public java.lang.String getName() {
      return name;
    }

    @Override
    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : objectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo objectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","objectType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean objectType__is_set = false;

    private java.lang.String objectType;

    @Override
    public java.lang.String getObjectType() {
      return objectType;
    }

    @Override
    public void setObjectType(java.lang.String objectType) {
      this.objectType = objectType;
      objectType__is_set = true;
    }

    protected void setObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, objectType__typeInfo)) {
        setObjectType(__typeMapper.readString(__in, objectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, actions__typeInfo, actions, actions__is_set);
       __typeMapper.writeObject(__out, fieldItems__typeInfo, fieldItems, fieldItems__is_set);
       __typeMapper.writeString(__out, id__typeInfo, id, id__is_set);
       __typeMapper.writeObject(__out, imageItems__typeInfo, imageItems, imageItems__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeString(__out, objectType__typeInfo, objectType, objectType__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActions(__in, __typeMapper);
        setFieldItems(__in, __typeMapper);
        setId(__in, __typeMapper);
        setImageItems(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setName(__in, __typeMapper);
        setObjectType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeCompactLayout ");
      sb.append(" actions='").append(com.sforce.ws.util.Verbose.toString(actions)).append("'\n");
      sb.append(" fieldItems='").append(com.sforce.ws.util.Verbose.toString(fieldItems)).append("'\n");
      sb.append(" id='").append(com.sforce.ws.util.Verbose.toString(id)).append("'\n");
      sb.append(" imageItems='").append(com.sforce.ws.util.Verbose.toString(imageItems)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" objectType='").append(com.sforce.ws.util.Verbose.toString(objectType)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
