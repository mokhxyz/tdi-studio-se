package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DuplicateResult implements com.sforce.ws.bind.XMLizable , IDuplicateResult{

    /**
     * Constructor
     */
    public DuplicateResult() {}

    /**
     * element : allowSave of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowSave__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","allowSave","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean allowSave__is_set = false;

    private boolean allowSave;

    @Override
    public boolean getAllowSave() {
      return allowSave;
    }

    @Override
    public boolean isAllowSave() {
      return allowSave;
    }

    @Override
    public void setAllowSave(boolean allowSave) {
      this.allowSave = allowSave;
      allowSave__is_set = true;
    }

    protected void setAllowSave(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, allowSave__typeInfo)) {
        setAllowSave(__typeMapper.readBoolean(__in, allowSave__typeInfo, boolean.class));
      }
    }

    /**
     * element : duplicateRule of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo duplicateRule__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","duplicateRule","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean duplicateRule__is_set = false;

    private java.lang.String duplicateRule;

    @Override
    public java.lang.String getDuplicateRule() {
      return duplicateRule;
    }

    @Override
    public void setDuplicateRule(java.lang.String duplicateRule) {
      this.duplicateRule = duplicateRule;
      duplicateRule__is_set = true;
    }

    protected void setDuplicateRule(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, duplicateRule__typeInfo)) {
        setDuplicateRule(__typeMapper.readString(__in, duplicateRule__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : duplicateRuleEntityType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo duplicateRuleEntityType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","duplicateRuleEntityType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean duplicateRuleEntityType__is_set = false;

    private java.lang.String duplicateRuleEntityType;

    @Override
    public java.lang.String getDuplicateRuleEntityType() {
      return duplicateRuleEntityType;
    }

    @Override
    public void setDuplicateRuleEntityType(java.lang.String duplicateRuleEntityType) {
      this.duplicateRuleEntityType = duplicateRuleEntityType;
      duplicateRuleEntityType__is_set = true;
    }

    protected void setDuplicateRuleEntityType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, duplicateRuleEntityType__typeInfo)) {
        setDuplicateRuleEntityType(__typeMapper.readString(__in, duplicateRuleEntityType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : errorMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo errorMessage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","errorMessage","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean errorMessage__is_set = false;

    private java.lang.String errorMessage;

    @Override
    public java.lang.String getErrorMessage() {
      return errorMessage;
    }

    @Override
    public void setErrorMessage(java.lang.String errorMessage) {
      this.errorMessage = errorMessage;
      errorMessage__is_set = true;
    }

    protected void setErrorMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, errorMessage__typeInfo)) {
        setErrorMessage(__typeMapper.readString(__in, errorMessage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : matchResults of type {urn:partner.soap.sforce.com}MatchResult
     * java type: com.sforce.soap.partner.MatchResult[]
     */
    private static final com.sforce.ws.bind.TypeInfo matchResults__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","matchResults","urn:partner.soap.sforce.com","MatchResult",0,-1,true);

    private boolean matchResults__is_set = false;

    private com.sforce.soap.partner.MatchResult[] matchResults = new com.sforce.soap.partner.MatchResult[0];

    @Override
    public com.sforce.soap.partner.MatchResult[] getMatchResults() {
      return matchResults;
    }

    @Override
    public void setMatchResults(com.sforce.soap.partner.IMatchResult[] matchResults) {
      this.matchResults = castArray(com.sforce.soap.partner.MatchResult.class, matchResults);
      matchResults__is_set = true;
    }

    protected void setMatchResults(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, matchResults__typeInfo)) {
        setMatchResults((com.sforce.soap.partner.MatchResult[])__typeMapper.readObject(__in, matchResults__typeInfo, com.sforce.soap.partner.MatchResult[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, allowSave__typeInfo, allowSave, allowSave__is_set);
       __typeMapper.writeString(__out, duplicateRule__typeInfo, duplicateRule, duplicateRule__is_set);
       __typeMapper.writeString(__out, duplicateRuleEntityType__typeInfo, duplicateRuleEntityType, duplicateRuleEntityType__is_set);
       __typeMapper.writeString(__out, errorMessage__typeInfo, errorMessage, errorMessage__is_set);
       __typeMapper.writeObject(__out, matchResults__typeInfo, matchResults, matchResults__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAllowSave(__in, __typeMapper);
        setDuplicateRule(__in, __typeMapper);
        setDuplicateRuleEntityType(__in, __typeMapper);
        setErrorMessage(__in, __typeMapper);
        setMatchResults(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DuplicateResult ");
      sb.append(" allowSave='").append(com.sforce.ws.util.Verbose.toString(allowSave)).append("'\n");
      sb.append(" duplicateRule='").append(com.sforce.ws.util.Verbose.toString(duplicateRule)).append("'\n");
      sb.append(" duplicateRuleEntityType='").append(com.sforce.ws.util.Verbose.toString(duplicateRuleEntityType)).append("'\n");
      sb.append(" errorMessage='").append(com.sforce.ws.util.Verbose.toString(errorMessage)).append("'\n");
      sb.append(" matchResults='").append(com.sforce.ws.util.Verbose.toString(matchResults)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
