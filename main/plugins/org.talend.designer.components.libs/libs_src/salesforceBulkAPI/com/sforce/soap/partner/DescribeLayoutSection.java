package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeLayoutSection implements com.sforce.ws.bind.XMLizable , IDescribeLayoutSection{

    /**
     * Constructor
     */
    public DescribeLayoutSection() {}

    /**
     * element : columns of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo columns__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean columns__is_set = false;

    private int columns;

    @Override
    public int getColumns() {
      return columns;
    }

    @Override
    public void setColumns(int columns) {
      this.columns = columns;
      columns__is_set = true;
    }

    protected void setColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, columns__typeInfo)) {
        setColumns((int)__typeMapper.readInt(__in, columns__typeInfo, int.class));
      }
    }

    /**
     * element : heading of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo heading__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","heading","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean heading__is_set = false;

    private java.lang.String heading;

    @Override
    public java.lang.String getHeading() {
      return heading;
    }

    @Override
    public void setHeading(java.lang.String heading) {
      this.heading = heading;
      heading__is_set = true;
    }

    protected void setHeading(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, heading__typeInfo)) {
        setHeading(__typeMapper.readString(__in, heading__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : layoutRows of type {urn:partner.soap.sforce.com}DescribeLayoutRow
     * java type: com.sforce.soap.partner.DescribeLayoutRow[]
     */
    private static final com.sforce.ws.bind.TypeInfo layoutRows__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","layoutRows","urn:partner.soap.sforce.com","DescribeLayoutRow",1,-1,true);

    private boolean layoutRows__is_set = false;

    private com.sforce.soap.partner.DescribeLayoutRow[] layoutRows = new com.sforce.soap.partner.DescribeLayoutRow[0];

    @Override
    public com.sforce.soap.partner.DescribeLayoutRow[] getLayoutRows() {
      return layoutRows;
    }

    @Override
    public void setLayoutRows(com.sforce.soap.partner.IDescribeLayoutRow[] layoutRows) {
      this.layoutRows = castArray(com.sforce.soap.partner.DescribeLayoutRow.class, layoutRows);
      layoutRows__is_set = true;
    }

    protected void setLayoutRows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, layoutRows__typeInfo)) {
        setLayoutRows((com.sforce.soap.partner.DescribeLayoutRow[])__typeMapper.readObject(__in, layoutRows__typeInfo, com.sforce.soap.partner.DescribeLayoutRow[].class));
      }
    }

    /**
     * element : rows of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo rows__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","rows","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean rows__is_set = false;

    private int rows;

    @Override
    public int getRows() {
      return rows;
    }

    @Override
    public void setRows(int rows) {
      this.rows = rows;
      rows__is_set = true;
    }

    protected void setRows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, rows__typeInfo)) {
        setRows((int)__typeMapper.readInt(__in, rows__typeInfo, int.class));
      }
    }

    /**
     * element : tabOrder of type {urn:partner.soap.sforce.com}TabOrderType
     * java type: com.sforce.soap.partner.TabOrderType
     */
    private static final com.sforce.ws.bind.TypeInfo tabOrder__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","tabOrder","urn:partner.soap.sforce.com","TabOrderType",1,1,true);

    private boolean tabOrder__is_set = false;

    private com.sforce.soap.partner.TabOrderType tabOrder;

    @Override
    public com.sforce.soap.partner.TabOrderType getTabOrder() {
      return tabOrder;
    }

    @Override
    public void setTabOrder(com.sforce.soap.partner.TabOrderType tabOrder) {
      this.tabOrder = tabOrder;
      tabOrder__is_set = true;
    }

    protected void setTabOrder(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, tabOrder__typeInfo)) {
        setTabOrder((com.sforce.soap.partner.TabOrderType)__typeMapper.readObject(__in, tabOrder__typeInfo, com.sforce.soap.partner.TabOrderType.class));
      }
    }

    /**
     * element : useCollapsibleSection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo useCollapsibleSection__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","useCollapsibleSection","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean useCollapsibleSection__is_set = false;

    private boolean useCollapsibleSection;

    @Override
    public boolean getUseCollapsibleSection() {
      return useCollapsibleSection;
    }

    @Override
    public boolean isUseCollapsibleSection() {
      return useCollapsibleSection;
    }

    @Override
    public void setUseCollapsibleSection(boolean useCollapsibleSection) {
      this.useCollapsibleSection = useCollapsibleSection;
      useCollapsibleSection__is_set = true;
    }

    protected void setUseCollapsibleSection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, useCollapsibleSection__typeInfo)) {
        setUseCollapsibleSection(__typeMapper.readBoolean(__in, useCollapsibleSection__typeInfo, boolean.class));
      }
    }

    /**
     * element : useHeading of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo useHeading__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","useHeading","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean useHeading__is_set = false;

    private boolean useHeading;

    @Override
    public boolean getUseHeading() {
      return useHeading;
    }

    @Override
    public boolean isUseHeading() {
      return useHeading;
    }

    @Override
    public void setUseHeading(boolean useHeading) {
      this.useHeading = useHeading;
      useHeading__is_set = true;
    }

    protected void setUseHeading(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, useHeading__typeInfo)) {
        setUseHeading(__typeMapper.readBoolean(__in, useHeading__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeInt(__out, columns__typeInfo, columns, columns__is_set);
       __typeMapper.writeString(__out, heading__typeInfo, heading, heading__is_set);
       __typeMapper.writeObject(__out, layoutRows__typeInfo, layoutRows, layoutRows__is_set);
       __typeMapper.writeInt(__out, rows__typeInfo, rows, rows__is_set);
       __typeMapper.writeObject(__out, tabOrder__typeInfo, tabOrder, tabOrder__is_set);
       __typeMapper.writeBoolean(__out, useCollapsibleSection__typeInfo, useCollapsibleSection, useCollapsibleSection__is_set);
       __typeMapper.writeBoolean(__out, useHeading__typeInfo, useHeading, useHeading__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setColumns(__in, __typeMapper);
        setHeading(__in, __typeMapper);
        setLayoutRows(__in, __typeMapper);
        setRows(__in, __typeMapper);
        setTabOrder(__in, __typeMapper);
        setUseCollapsibleSection(__in, __typeMapper);
        setUseHeading(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeLayoutSection ");
      sb.append(" columns='").append(com.sforce.ws.util.Verbose.toString(columns)).append("'\n");
      sb.append(" heading='").append(com.sforce.ws.util.Verbose.toString(heading)).append("'\n");
      sb.append(" layoutRows='").append(com.sforce.ws.util.Verbose.toString(layoutRows)).append("'\n");
      sb.append(" rows='").append(com.sforce.ws.util.Verbose.toString(rows)).append("'\n");
      sb.append(" tabOrder='").append(com.sforce.ws.util.Verbose.toString(tabOrder)).append("'\n");
      sb.append(" useCollapsibleSection='").append(com.sforce.ws.util.Verbose.toString(useCollapsibleSection)).append("'\n");
      sb.append(" useHeading='").append(com.sforce.ws.util.Verbose.toString(useHeading)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
