package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeSearchLayoutResult implements com.sforce.ws.bind.XMLizable , IDescribeSearchLayoutResult{

    /**
     * Constructor
     */
    public DescribeSearchLayoutResult() {}

    /**
     * element : errorMsg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo errorMsg__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","errorMsg","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean errorMsg__is_set = false;

    private java.lang.String errorMsg;

    @Override
    public java.lang.String getErrorMsg() {
      return errorMsg;
    }

    @Override
    public void setErrorMsg(java.lang.String errorMsg) {
      this.errorMsg = errorMsg;
      errorMsg__is_set = true;
    }

    protected void setErrorMsg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, errorMsg__typeInfo)) {
        setErrorMsg(__typeMapper.readString(__in, errorMsg__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : limitRows of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private static final com.sforce.ws.bind.TypeInfo limitRows__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","limitRows","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean limitRows__is_set = false;

    private java.lang.Integer limitRows;

    @Override
    public java.lang.Integer getLimitRows() {
      return limitRows;
    }

    @Override
    public void setLimitRows(java.lang.Integer limitRows) {
      this.limitRows = limitRows;
      limitRows__is_set = true;
    }

    protected void setLimitRows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, limitRows__typeInfo)) {
        setLimitRows((java.lang.Integer)__typeMapper.readObject(__in, limitRows__typeInfo, java.lang.Integer.class));
      }
    }

    /**
     * element : objectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo objectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","objectType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean objectType__is_set = false;

    private java.lang.String objectType;

    @Override
    public java.lang.String getObjectType() {
      return objectType;
    }

    @Override
    public void setObjectType(java.lang.String objectType) {
      this.objectType = objectType;
      objectType__is_set = true;
    }

    protected void setObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, objectType__typeInfo)) {
        setObjectType(__typeMapper.readString(__in, objectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : searchColumns of type {urn:partner.soap.sforce.com}DescribeColumn
     * java type: com.sforce.soap.partner.DescribeColumn[]
     */
    private static final com.sforce.ws.bind.TypeInfo searchColumns__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","searchColumns","urn:partner.soap.sforce.com","DescribeColumn",0,-1,true);

    private boolean searchColumns__is_set = false;

    private com.sforce.soap.partner.DescribeColumn[] searchColumns = new com.sforce.soap.partner.DescribeColumn[0];

    @Override
    public com.sforce.soap.partner.DescribeColumn[] getSearchColumns() {
      return searchColumns;
    }

    @Override
    public void setSearchColumns(com.sforce.soap.partner.IDescribeColumn[] searchColumns) {
      this.searchColumns = castArray(com.sforce.soap.partner.DescribeColumn.class, searchColumns);
      searchColumns__is_set = true;
    }

    protected void setSearchColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, searchColumns__typeInfo)) {
        setSearchColumns((com.sforce.soap.partner.DescribeColumn[])__typeMapper.readObject(__in, searchColumns__typeInfo, com.sforce.soap.partner.DescribeColumn[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, errorMsg__typeInfo, errorMsg, errorMsg__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, limitRows__typeInfo, limitRows, limitRows__is_set);
       __typeMapper.writeString(__out, objectType__typeInfo, objectType, objectType__is_set);
       __typeMapper.writeObject(__out, searchColumns__typeInfo, searchColumns, searchColumns__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setErrorMsg(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setLimitRows(__in, __typeMapper);
        setObjectType(__in, __typeMapper);
        setSearchColumns(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeSearchLayoutResult ");
      sb.append(" errorMsg='").append(com.sforce.ws.util.Verbose.toString(errorMsg)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" limitRows='").append(com.sforce.ws.util.Verbose.toString(limitRows)).append("'\n");
      sb.append(" objectType='").append(com.sforce.ws.util.Verbose.toString(objectType)).append("'\n");
      sb.append(" searchColumns='").append(com.sforce.ws.util.Verbose.toString(searchColumns)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
