package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeLayout_element implements com.sforce.ws.bind.XMLizable , IDescribeLayout_element{

    /**
     * Constructor
     */
    public DescribeLayout_element() {}

    /**
     * element : sObjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo sObjectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","sObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean sObjectType__is_set = false;

    private java.lang.String sObjectType;

    @Override
    public java.lang.String getSObjectType() {
      return sObjectType;
    }

    @Override
    public void setSObjectType(java.lang.String sObjectType) {
      this.sObjectType = sObjectType;
      sObjectType__is_set = true;
    }

    protected void setSObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, sObjectType__typeInfo)) {
        setSObjectType(__typeMapper.readString(__in, sObjectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : layoutName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo layoutName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","layoutName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean layoutName__is_set = false;

    private java.lang.String layoutName;

    @Override
    public java.lang.String getLayoutName() {
      return layoutName;
    }

    @Override
    public void setLayoutName(java.lang.String layoutName) {
      this.layoutName = layoutName;
      layoutName__is_set = true;
    }

    protected void setLayoutName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, layoutName__typeInfo)) {
        setLayoutName(__typeMapper.readString(__in, layoutName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : recordTypeIds of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo recordTypeIds__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","recordTypeIds","urn:partner.soap.sforce.com","ID",0,-1,true);

    private boolean recordTypeIds__is_set = false;

    private java.lang.String[] recordTypeIds = new java.lang.String[0];

    @Override
    public java.lang.String[] getRecordTypeIds() {
      return recordTypeIds;
    }

    @Override
    public void setRecordTypeIds(java.lang.String[] recordTypeIds) {
      this.recordTypeIds = castArray(java.lang.String.class, recordTypeIds);
      recordTypeIds__is_set = true;
    }

    protected void setRecordTypeIds(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, recordTypeIds__typeInfo)) {
        setRecordTypeIds((java.lang.String[])__typeMapper.readObject(__in, recordTypeIds__typeInfo, java.lang.String[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, sObjectType__typeInfo, sObjectType, sObjectType__is_set);
       __typeMapper.writeString(__out, layoutName__typeInfo, layoutName, layoutName__is_set);
       __typeMapper.writeObject(__out, recordTypeIds__typeInfo, recordTypeIds, recordTypeIds__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setSObjectType(__in, __typeMapper);
        setLayoutName(__in, __typeMapper);
        setRecordTypeIds(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeLayout_element ");
      sb.append(" sObjectType='").append(com.sforce.ws.util.Verbose.toString(sObjectType)).append("'\n");
      sb.append(" layoutName='").append(com.sforce.ws.util.Verbose.toString(layoutName)).append("'\n");
      sb.append(" recordTypeIds='").append(com.sforce.ws.util.Verbose.toString(recordTypeIds)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
