package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeSObjectResult implements com.sforce.ws.bind.XMLizable , IDescribeSObjectResult{

    /**
     * Constructor
     */
    public DescribeSObjectResult() {}

    /**
     * element : actionOverrides of type {urn:partner.soap.sforce.com}ActionOverride
     * java type: com.sforce.soap.partner.ActionOverride[]
     */
    private static final com.sforce.ws.bind.TypeInfo actionOverrides__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","actionOverrides","urn:partner.soap.sforce.com","ActionOverride",0,-1,true);

    private boolean actionOverrides__is_set = false;

    private com.sforce.soap.partner.ActionOverride[] actionOverrides = new com.sforce.soap.partner.ActionOverride[0];

    @Override
    public com.sforce.soap.partner.ActionOverride[] getActionOverrides() {
      return actionOverrides;
    }

    @Override
    public void setActionOverrides(com.sforce.soap.partner.IActionOverride[] actionOverrides) {
      this.actionOverrides = castArray(com.sforce.soap.partner.ActionOverride.class, actionOverrides);
      actionOverrides__is_set = true;
    }

    protected void setActionOverrides(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, actionOverrides__typeInfo)) {
        setActionOverrides((com.sforce.soap.partner.ActionOverride[])__typeMapper.readObject(__in, actionOverrides__typeInfo, com.sforce.soap.partner.ActionOverride[].class));
      }
    }

    /**
     * element : activateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo activateable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","activateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean activateable__is_set = false;

    private boolean activateable;

    @Override
    public boolean getActivateable() {
      return activateable;
    }

    @Override
    public boolean isActivateable() {
      return activateable;
    }

    @Override
    public void setActivateable(boolean activateable) {
      this.activateable = activateable;
      activateable__is_set = true;
    }

    protected void setActivateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, activateable__typeInfo)) {
        setActivateable(__typeMapper.readBoolean(__in, activateable__typeInfo, boolean.class));
      }
    }

    /**
     * element : childRelationships of type {urn:partner.soap.sforce.com}ChildRelationship
     * java type: com.sforce.soap.partner.ChildRelationship[]
     */
    private static final com.sforce.ws.bind.TypeInfo childRelationships__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","childRelationships","urn:partner.soap.sforce.com","ChildRelationship",0,-1,true);

    private boolean childRelationships__is_set = false;

    private com.sforce.soap.partner.ChildRelationship[] childRelationships = new com.sforce.soap.partner.ChildRelationship[0];

    @Override
    public com.sforce.soap.partner.ChildRelationship[] getChildRelationships() {
      return childRelationships;
    }

    @Override
    public void setChildRelationships(com.sforce.soap.partner.IChildRelationship[] childRelationships) {
      this.childRelationships = castArray(com.sforce.soap.partner.ChildRelationship.class, childRelationships);
      childRelationships__is_set = true;
    }

    protected void setChildRelationships(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, childRelationships__typeInfo)) {
        setChildRelationships((com.sforce.soap.partner.ChildRelationship[])__typeMapper.readObject(__in, childRelationships__typeInfo, com.sforce.soap.partner.ChildRelationship[].class));
      }
    }

    /**
     * element : compactLayoutable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo compactLayoutable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","compactLayoutable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean compactLayoutable__is_set = false;

    private boolean compactLayoutable;

    @Override
    public boolean getCompactLayoutable() {
      return compactLayoutable;
    }

    @Override
    public boolean isCompactLayoutable() {
      return compactLayoutable;
    }

    @Override
    public void setCompactLayoutable(boolean compactLayoutable) {
      this.compactLayoutable = compactLayoutable;
      compactLayoutable__is_set = true;
    }

    protected void setCompactLayoutable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, compactLayoutable__typeInfo)) {
        setCompactLayoutable(__typeMapper.readBoolean(__in, compactLayoutable__typeInfo, boolean.class));
      }
    }

    /**
     * element : createable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo createable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","createable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean createable__is_set = false;

    private boolean createable;

    @Override
    public boolean getCreateable() {
      return createable;
    }

    @Override
    public boolean isCreateable() {
      return createable;
    }

    @Override
    public void setCreateable(boolean createable) {
      this.createable = createable;
      createable__is_set = true;
    }

    protected void setCreateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, createable__typeInfo)) {
        setCreateable(__typeMapper.readBoolean(__in, createable__typeInfo, boolean.class));
      }
    }

    /**
     * element : custom of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo custom__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean custom__is_set = false;

    private boolean custom;

    @Override
    public boolean getCustom() {
      return custom;
    }

    @Override
    public boolean isCustom() {
      return custom;
    }

    @Override
    public void setCustom(boolean custom) {
      this.custom = custom;
      custom__is_set = true;
    }

    protected void setCustom(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, custom__typeInfo)) {
        setCustom(__typeMapper.readBoolean(__in, custom__typeInfo, boolean.class));
      }
    }

    /**
     * element : customSetting of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo customSetting__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","customSetting","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean customSetting__is_set = false;

    private boolean customSetting;

    @Override
    public boolean getCustomSetting() {
      return customSetting;
    }

    @Override
    public boolean isCustomSetting() {
      return customSetting;
    }

    @Override
    public void setCustomSetting(boolean customSetting) {
      this.customSetting = customSetting;
      customSetting__is_set = true;
    }

    protected void setCustomSetting(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, customSetting__typeInfo)) {
        setCustomSetting(__typeMapper.readBoolean(__in, customSetting__typeInfo, boolean.class));
      }
    }

    /**
     * element : deletable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo deletable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","deletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean deletable__is_set = false;

    private boolean deletable;

    @Override
    public boolean getDeletable() {
      return deletable;
    }

    @Override
    public boolean isDeletable() {
      return deletable;
    }

    @Override
    public void setDeletable(boolean deletable) {
      this.deletable = deletable;
      deletable__is_set = true;
    }

    protected void setDeletable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, deletable__typeInfo)) {
        setDeletable(__typeMapper.readBoolean(__in, deletable__typeInfo, boolean.class));
      }
    }

    /**
     * element : deprecatedAndHidden of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo deprecatedAndHidden__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","deprecatedAndHidden","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean deprecatedAndHidden__is_set = false;

    private boolean deprecatedAndHidden;

    @Override
    public boolean getDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    @Override
    public boolean isDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    @Override
    public void setDeprecatedAndHidden(boolean deprecatedAndHidden) {
      this.deprecatedAndHidden = deprecatedAndHidden;
      deprecatedAndHidden__is_set = true;
    }

    protected void setDeprecatedAndHidden(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, deprecatedAndHidden__typeInfo)) {
        setDeprecatedAndHidden(__typeMapper.readBoolean(__in, deprecatedAndHidden__typeInfo, boolean.class));
      }
    }

    /**
     * element : feedEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo feedEnabled__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","feedEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean feedEnabled__is_set = false;

    private boolean feedEnabled;

    @Override
    public boolean getFeedEnabled() {
      return feedEnabled;
    }

    @Override
    public boolean isFeedEnabled() {
      return feedEnabled;
    }

    @Override
    public void setFeedEnabled(boolean feedEnabled) {
      this.feedEnabled = feedEnabled;
      feedEnabled__is_set = true;
    }

    protected void setFeedEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, feedEnabled__typeInfo)) {
        setFeedEnabled(__typeMapper.readBoolean(__in, feedEnabled__typeInfo, boolean.class));
      }
    }

    /**
     * element : fields of type {urn:partner.soap.sforce.com}Field
     * java type: com.sforce.soap.partner.Field[]
     */
    private static final com.sforce.ws.bind.TypeInfo fields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","fields","urn:partner.soap.sforce.com","Field",0,-1,true);

    private boolean fields__is_set = false;

    private com.sforce.soap.partner.Field[] fields = new com.sforce.soap.partner.Field[0];

    @Override
    public com.sforce.soap.partner.Field[] getFields() {
      return fields;
    }

    @Override
    public void setFields(com.sforce.soap.partner.IField[] fields) {
      this.fields = castArray(com.sforce.soap.partner.Field.class, fields);
      fields__is_set = true;
    }

    protected void setFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fields__typeInfo)) {
        setFields((com.sforce.soap.partner.Field[])__typeMapper.readObject(__in, fields__typeInfo, com.sforce.soap.partner.Field[].class));
      }
    }

    /**
     * element : keyPrefix of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo keyPrefix__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","keyPrefix","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean keyPrefix__is_set = false;

    private java.lang.String keyPrefix;

    @Override
    public java.lang.String getKeyPrefix() {
      return keyPrefix;
    }

    @Override
    public void setKeyPrefix(java.lang.String keyPrefix) {
      this.keyPrefix = keyPrefix;
      keyPrefix__is_set = true;
    }

    protected void setKeyPrefix(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, keyPrefix__typeInfo)) {
        setKeyPrefix(__typeMapper.readString(__in, keyPrefix__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : labelPlural of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo labelPlural__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","labelPlural","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean labelPlural__is_set = false;

    private java.lang.String labelPlural;

    @Override
    public java.lang.String getLabelPlural() {
      return labelPlural;
    }

    @Override
    public void setLabelPlural(java.lang.String labelPlural) {
      this.labelPlural = labelPlural;
      labelPlural__is_set = true;
    }

    protected void setLabelPlural(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, labelPlural__typeInfo)) {
        setLabelPlural(__typeMapper.readString(__in, labelPlural__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : layoutable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo layoutable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","layoutable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean layoutable__is_set = false;

    private boolean layoutable;

    @Override
    public boolean getLayoutable() {
      return layoutable;
    }

    @Override
    public boolean isLayoutable() {
      return layoutable;
    }

    @Override
    public void setLayoutable(boolean layoutable) {
      this.layoutable = layoutable;
      layoutable__is_set = true;
    }

    protected void setLayoutable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, layoutable__typeInfo)) {
        setLayoutable(__typeMapper.readBoolean(__in, layoutable__typeInfo, boolean.class));
      }
    }

    /**
     * element : mergeable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo mergeable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","mergeable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean mergeable__is_set = false;

    private boolean mergeable;

    @Override
    public boolean getMergeable() {
      return mergeable;
    }

    @Override
    public boolean isMergeable() {
      return mergeable;
    }

    @Override
    public void setMergeable(boolean mergeable) {
      this.mergeable = mergeable;
      mergeable__is_set = true;
    }

    protected void setMergeable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, mergeable__typeInfo)) {
        setMergeable(__typeMapper.readBoolean(__in, mergeable__typeInfo, boolean.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    @Override
    public java.lang.String getName() {
      return name;
    }

    @Override
    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : namedLayoutInfos of type {urn:partner.soap.sforce.com}NamedLayoutInfo
     * java type: com.sforce.soap.partner.NamedLayoutInfo[]
     */
    private static final com.sforce.ws.bind.TypeInfo namedLayoutInfos__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","namedLayoutInfos","urn:partner.soap.sforce.com","NamedLayoutInfo",0,-1,true);

    private boolean namedLayoutInfos__is_set = false;

    private com.sforce.soap.partner.NamedLayoutInfo[] namedLayoutInfos = new com.sforce.soap.partner.NamedLayoutInfo[0];

    @Override
    public com.sforce.soap.partner.NamedLayoutInfo[] getNamedLayoutInfos() {
      return namedLayoutInfos;
    }

    @Override
    public void setNamedLayoutInfos(com.sforce.soap.partner.INamedLayoutInfo[] namedLayoutInfos) {
      this.namedLayoutInfos = castArray(com.sforce.soap.partner.NamedLayoutInfo.class, namedLayoutInfos);
      namedLayoutInfos__is_set = true;
    }

    protected void setNamedLayoutInfos(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, namedLayoutInfos__typeInfo)) {
        setNamedLayoutInfos((com.sforce.soap.partner.NamedLayoutInfo[])__typeMapper.readObject(__in, namedLayoutInfos__typeInfo, com.sforce.soap.partner.NamedLayoutInfo[].class));
      }
    }

    /**
     * element : queryable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo queryable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","queryable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean queryable__is_set = false;

    private boolean queryable;

    @Override
    public boolean getQueryable() {
      return queryable;
    }

    @Override
    public boolean isQueryable() {
      return queryable;
    }

    @Override
    public void setQueryable(boolean queryable) {
      this.queryable = queryable;
      queryable__is_set = true;
    }

    protected void setQueryable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, queryable__typeInfo)) {
        setQueryable(__typeMapper.readBoolean(__in, queryable__typeInfo, boolean.class));
      }
    }

    /**
     * element : recordTypeInfos of type {urn:partner.soap.sforce.com}RecordTypeInfo
     * java type: com.sforce.soap.partner.RecordTypeInfo[]
     */
    private static final com.sforce.ws.bind.TypeInfo recordTypeInfos__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","recordTypeInfos","urn:partner.soap.sforce.com","RecordTypeInfo",0,-1,true);

    private boolean recordTypeInfos__is_set = false;

    private com.sforce.soap.partner.RecordTypeInfo[] recordTypeInfos = new com.sforce.soap.partner.RecordTypeInfo[0];

    @Override
    public com.sforce.soap.partner.RecordTypeInfo[] getRecordTypeInfos() {
      return recordTypeInfos;
    }

    @Override
    public void setRecordTypeInfos(com.sforce.soap.partner.IRecordTypeInfo[] recordTypeInfos) {
      this.recordTypeInfos = castArray(com.sforce.soap.partner.RecordTypeInfo.class, recordTypeInfos);
      recordTypeInfos__is_set = true;
    }

    protected void setRecordTypeInfos(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, recordTypeInfos__typeInfo)) {
        setRecordTypeInfos((com.sforce.soap.partner.RecordTypeInfo[])__typeMapper.readObject(__in, recordTypeInfos__typeInfo, com.sforce.soap.partner.RecordTypeInfo[].class));
      }
    }

    /**
     * element : replicateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo replicateable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","replicateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean replicateable__is_set = false;

    private boolean replicateable;

    @Override
    public boolean getReplicateable() {
      return replicateable;
    }

    @Override
    public boolean isReplicateable() {
      return replicateable;
    }

    @Override
    public void setReplicateable(boolean replicateable) {
      this.replicateable = replicateable;
      replicateable__is_set = true;
    }

    protected void setReplicateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, replicateable__typeInfo)) {
        setReplicateable(__typeMapper.readBoolean(__in, replicateable__typeInfo, boolean.class));
      }
    }

    /**
     * element : retrieveable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo retrieveable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","retrieveable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean retrieveable__is_set = false;

    private boolean retrieveable;

    @Override
    public boolean getRetrieveable() {
      return retrieveable;
    }

    @Override
    public boolean isRetrieveable() {
      return retrieveable;
    }

    @Override
    public void setRetrieveable(boolean retrieveable) {
      this.retrieveable = retrieveable;
      retrieveable__is_set = true;
    }

    protected void setRetrieveable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, retrieveable__typeInfo)) {
        setRetrieveable(__typeMapper.readBoolean(__in, retrieveable__typeInfo, boolean.class));
      }
    }

    /**
     * element : searchLayoutable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo searchLayoutable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","searchLayoutable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean searchLayoutable__is_set = false;

    private boolean searchLayoutable;

    @Override
    public boolean getSearchLayoutable() {
      return searchLayoutable;
    }

    @Override
    public boolean isSearchLayoutable() {
      return searchLayoutable;
    }

    @Override
    public void setSearchLayoutable(boolean searchLayoutable) {
      this.searchLayoutable = searchLayoutable;
      searchLayoutable__is_set = true;
    }

    protected void setSearchLayoutable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, searchLayoutable__typeInfo)) {
        setSearchLayoutable(__typeMapper.readBoolean(__in, searchLayoutable__typeInfo, boolean.class));
      }
    }

    /**
     * element : searchable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo searchable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","searchable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean searchable__is_set = false;

    private boolean searchable;

    @Override
    public boolean getSearchable() {
      return searchable;
    }

    @Override
    public boolean isSearchable() {
      return searchable;
    }

    @Override
    public void setSearchable(boolean searchable) {
      this.searchable = searchable;
      searchable__is_set = true;
    }

    protected void setSearchable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, searchable__typeInfo)) {
        setSearchable(__typeMapper.readBoolean(__in, searchable__typeInfo, boolean.class));
      }
    }

    /**
     * element : triggerable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo triggerable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","triggerable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean triggerable__is_set = false;

    private boolean triggerable;

    @Override
    public boolean getTriggerable() {
      return triggerable;
    }

    @Override
    public boolean isTriggerable() {
      return triggerable;
    }

    @Override
    public void setTriggerable(boolean triggerable) {
      this.triggerable = triggerable;
      triggerable__is_set = true;
    }

    protected void setTriggerable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, triggerable__typeInfo)) {
        setTriggerable(__typeMapper.readBoolean(__in, triggerable__typeInfo, boolean.class));
      }
    }

    /**
     * element : undeletable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo undeletable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","undeletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean undeletable__is_set = false;

    private boolean undeletable;

    @Override
    public boolean getUndeletable() {
      return undeletable;
    }

    @Override
    public boolean isUndeletable() {
      return undeletable;
    }

    @Override
    public void setUndeletable(boolean undeletable) {
      this.undeletable = undeletable;
      undeletable__is_set = true;
    }

    protected void setUndeletable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, undeletable__typeInfo)) {
        setUndeletable(__typeMapper.readBoolean(__in, undeletable__typeInfo, boolean.class));
      }
    }

    /**
     * element : updateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo updateable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","updateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean updateable__is_set = false;

    private boolean updateable;

    @Override
    public boolean getUpdateable() {
      return updateable;
    }

    @Override
    public boolean isUpdateable() {
      return updateable;
    }

    @Override
    public void setUpdateable(boolean updateable) {
      this.updateable = updateable;
      updateable__is_set = true;
    }

    protected void setUpdateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, updateable__typeInfo)) {
        setUpdateable(__typeMapper.readBoolean(__in, updateable__typeInfo, boolean.class));
      }
    }

    /**
     * element : urlDetail of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo urlDetail__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","urlDetail","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean urlDetail__is_set = false;

    private java.lang.String urlDetail;

    @Override
    public java.lang.String getUrlDetail() {
      return urlDetail;
    }

    @Override
    public void setUrlDetail(java.lang.String urlDetail) {
      this.urlDetail = urlDetail;
      urlDetail__is_set = true;
    }

    protected void setUrlDetail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, urlDetail__typeInfo)) {
        setUrlDetail(__typeMapper.readString(__in, urlDetail__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : urlEdit of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo urlEdit__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","urlEdit","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean urlEdit__is_set = false;

    private java.lang.String urlEdit;

    @Override
    public java.lang.String getUrlEdit() {
      return urlEdit;
    }

    @Override
    public void setUrlEdit(java.lang.String urlEdit) {
      this.urlEdit = urlEdit;
      urlEdit__is_set = true;
    }

    protected void setUrlEdit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, urlEdit__typeInfo)) {
        setUrlEdit(__typeMapper.readString(__in, urlEdit__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : urlNew of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo urlNew__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","urlNew","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean urlNew__is_set = false;

    private java.lang.String urlNew;

    @Override
    public java.lang.String getUrlNew() {
      return urlNew;
    }

    @Override
    public void setUrlNew(java.lang.String urlNew) {
      this.urlNew = urlNew;
      urlNew__is_set = true;
    }

    protected void setUrlNew(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, urlNew__typeInfo)) {
        setUrlNew(__typeMapper.readString(__in, urlNew__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, actionOverrides__typeInfo, actionOverrides, actionOverrides__is_set);
       __typeMapper.writeBoolean(__out, activateable__typeInfo, activateable, activateable__is_set);
       __typeMapper.writeObject(__out, childRelationships__typeInfo, childRelationships, childRelationships__is_set);
       __typeMapper.writeBoolean(__out, compactLayoutable__typeInfo, compactLayoutable, compactLayoutable__is_set);
       __typeMapper.writeBoolean(__out, createable__typeInfo, createable, createable__is_set);
       __typeMapper.writeBoolean(__out, custom__typeInfo, custom, custom__is_set);
       __typeMapper.writeBoolean(__out, customSetting__typeInfo, customSetting, customSetting__is_set);
       __typeMapper.writeBoolean(__out, deletable__typeInfo, deletable, deletable__is_set);
       __typeMapper.writeBoolean(__out, deprecatedAndHidden__typeInfo, deprecatedAndHidden, deprecatedAndHidden__is_set);
       __typeMapper.writeBoolean(__out, feedEnabled__typeInfo, feedEnabled, feedEnabled__is_set);
       __typeMapper.writeObject(__out, fields__typeInfo, fields, fields__is_set);
       __typeMapper.writeString(__out, keyPrefix__typeInfo, keyPrefix, keyPrefix__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeString(__out, labelPlural__typeInfo, labelPlural, labelPlural__is_set);
       __typeMapper.writeBoolean(__out, layoutable__typeInfo, layoutable, layoutable__is_set);
       __typeMapper.writeBoolean(__out, mergeable__typeInfo, mergeable, mergeable__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeObject(__out, namedLayoutInfos__typeInfo, namedLayoutInfos, namedLayoutInfos__is_set);
       __typeMapper.writeBoolean(__out, queryable__typeInfo, queryable, queryable__is_set);
       __typeMapper.writeObject(__out, recordTypeInfos__typeInfo, recordTypeInfos, recordTypeInfos__is_set);
       __typeMapper.writeBoolean(__out, replicateable__typeInfo, replicateable, replicateable__is_set);
       __typeMapper.writeBoolean(__out, retrieveable__typeInfo, retrieveable, retrieveable__is_set);
       __typeMapper.writeBoolean(__out, searchLayoutable__typeInfo, searchLayoutable, searchLayoutable__is_set);
       __typeMapper.writeBoolean(__out, searchable__typeInfo, searchable, searchable__is_set);
       __typeMapper.writeBoolean(__out, triggerable__typeInfo, triggerable, triggerable__is_set);
       __typeMapper.writeBoolean(__out, undeletable__typeInfo, undeletable, undeletable__is_set);
       __typeMapper.writeBoolean(__out, updateable__typeInfo, updateable, updateable__is_set);
       __typeMapper.writeString(__out, urlDetail__typeInfo, urlDetail, urlDetail__is_set);
       __typeMapper.writeString(__out, urlEdit__typeInfo, urlEdit, urlEdit__is_set);
       __typeMapper.writeString(__out, urlNew__typeInfo, urlNew, urlNew__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActionOverrides(__in, __typeMapper);
        setActivateable(__in, __typeMapper);
        setChildRelationships(__in, __typeMapper);
        setCompactLayoutable(__in, __typeMapper);
        setCreateable(__in, __typeMapper);
        setCustom(__in, __typeMapper);
        setCustomSetting(__in, __typeMapper);
        setDeletable(__in, __typeMapper);
        setDeprecatedAndHidden(__in, __typeMapper);
        setFeedEnabled(__in, __typeMapper);
        setFields(__in, __typeMapper);
        setKeyPrefix(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setLabelPlural(__in, __typeMapper);
        setLayoutable(__in, __typeMapper);
        setMergeable(__in, __typeMapper);
        setName(__in, __typeMapper);
        setNamedLayoutInfos(__in, __typeMapper);
        setQueryable(__in, __typeMapper);
        setRecordTypeInfos(__in, __typeMapper);
        setReplicateable(__in, __typeMapper);
        setRetrieveable(__in, __typeMapper);
        setSearchLayoutable(__in, __typeMapper);
        setSearchable(__in, __typeMapper);
        setTriggerable(__in, __typeMapper);
        setUndeletable(__in, __typeMapper);
        setUpdateable(__in, __typeMapper);
        setUrlDetail(__in, __typeMapper);
        setUrlEdit(__in, __typeMapper);
        setUrlNew(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeSObjectResult ");
      sb.append(" actionOverrides='").append(com.sforce.ws.util.Verbose.toString(actionOverrides)).append("'\n");
      sb.append(" activateable='").append(com.sforce.ws.util.Verbose.toString(activateable)).append("'\n");
      sb.append(" childRelationships='").append(com.sforce.ws.util.Verbose.toString(childRelationships)).append("'\n");
      sb.append(" compactLayoutable='").append(com.sforce.ws.util.Verbose.toString(compactLayoutable)).append("'\n");
      sb.append(" createable='").append(com.sforce.ws.util.Verbose.toString(createable)).append("'\n");
      sb.append(" custom='").append(com.sforce.ws.util.Verbose.toString(custom)).append("'\n");
      sb.append(" customSetting='").append(com.sforce.ws.util.Verbose.toString(customSetting)).append("'\n");
      sb.append(" deletable='").append(com.sforce.ws.util.Verbose.toString(deletable)).append("'\n");
      sb.append(" deprecatedAndHidden='").append(com.sforce.ws.util.Verbose.toString(deprecatedAndHidden)).append("'\n");
      sb.append(" feedEnabled='").append(com.sforce.ws.util.Verbose.toString(feedEnabled)).append("'\n");
      sb.append(" fields='").append(com.sforce.ws.util.Verbose.toString(fields)).append("'\n");
      sb.append(" keyPrefix='").append(com.sforce.ws.util.Verbose.toString(keyPrefix)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" labelPlural='").append(com.sforce.ws.util.Verbose.toString(labelPlural)).append("'\n");
      sb.append(" layoutable='").append(com.sforce.ws.util.Verbose.toString(layoutable)).append("'\n");
      sb.append(" mergeable='").append(com.sforce.ws.util.Verbose.toString(mergeable)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" namedLayoutInfos='").append(com.sforce.ws.util.Verbose.toString(namedLayoutInfos)).append("'\n");
      sb.append(" queryable='").append(com.sforce.ws.util.Verbose.toString(queryable)).append("'\n");
      sb.append(" recordTypeInfos='").append(com.sforce.ws.util.Verbose.toString(recordTypeInfos)).append("'\n");
      sb.append(" replicateable='").append(com.sforce.ws.util.Verbose.toString(replicateable)).append("'\n");
      sb.append(" retrieveable='").append(com.sforce.ws.util.Verbose.toString(retrieveable)).append("'\n");
      sb.append(" searchLayoutable='").append(com.sforce.ws.util.Verbose.toString(searchLayoutable)).append("'\n");
      sb.append(" searchable='").append(com.sforce.ws.util.Verbose.toString(searchable)).append("'\n");
      sb.append(" triggerable='").append(com.sforce.ws.util.Verbose.toString(triggerable)).append("'\n");
      sb.append(" undeletable='").append(com.sforce.ws.util.Verbose.toString(undeletable)).append("'\n");
      sb.append(" updateable='").append(com.sforce.ws.util.Verbose.toString(updateable)).append("'\n");
      sb.append(" urlDetail='").append(com.sforce.ws.util.Verbose.toString(urlDetail)).append("'\n");
      sb.append(" urlEdit='").append(com.sforce.ws.util.Verbose.toString(urlEdit)).append("'\n");
      sb.append(" urlNew='").append(com.sforce.ws.util.Verbose.toString(urlNew)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
