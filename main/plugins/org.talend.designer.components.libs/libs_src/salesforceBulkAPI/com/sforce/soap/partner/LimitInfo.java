package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LimitInfo implements com.sforce.ws.bind.XMLizable , ILimitInfo{

    /**
     * Constructor
     */
    public LimitInfo() {}

    /**
     * element : current of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo current__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","current","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean current__is_set = false;

    private int current;

    @Override
    public int getCurrent() {
      return current;
    }

    @Override
    public void setCurrent(int current) {
      this.current = current;
      current__is_set = true;
    }

    protected void setCurrent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, current__typeInfo)) {
        setCurrent((int)__typeMapper.readInt(__in, current__typeInfo, int.class));
      }
    }

    /**
     * element : limit of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo limit__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","limit","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean limit__is_set = false;

    private int limit;

    @Override
    public int getLimit() {
      return limit;
    }

    @Override
    public void setLimit(int limit) {
      this.limit = limit;
      limit__is_set = true;
    }

    protected void setLimit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, limit__typeInfo)) {
        setLimit((int)__typeMapper.readInt(__in, limit__typeInfo, int.class));
      }
    }

    /**
     * element : type of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean type__is_set = false;

    private java.lang.String type;

    @Override
    public java.lang.String getType() {
      return type;
    }

    @Override
    public void setType(java.lang.String type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, type__typeInfo)) {
        setType(__typeMapper.readString(__in, type__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeInt(__out, current__typeInfo, current, current__is_set);
       __typeMapper.writeInt(__out, limit__typeInfo, limit, limit__is_set);
       __typeMapper.writeString(__out, type__typeInfo, type, type__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setCurrent(__in, __typeMapper);
        setLimit(__in, __typeMapper);
        setType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LimitInfo ");
      sb.append(" current='").append(com.sforce.ws.util.Verbose.toString(current)).append("'\n");
      sb.append(" limit='").append(com.sforce.ws.util.Verbose.toString(limit)).append("'\n");
      sb.append(" type='").append(com.sforce.ws.util.Verbose.toString(type)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
