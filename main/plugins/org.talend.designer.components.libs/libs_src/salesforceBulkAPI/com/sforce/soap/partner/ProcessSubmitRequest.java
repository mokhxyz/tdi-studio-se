package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ProcessSubmitRequest extends com.sforce.soap.partner.ProcessRequest implements IProcessSubmitRequest{

    /**
     * Constructor
     */
    public ProcessSubmitRequest() {}

    /**
     * element : objectId of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo objectId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","objectId","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean objectId__is_set = false;

    private java.lang.String objectId;

    @Override
    public java.lang.String getObjectId() {
      return objectId;
    }

    @Override
    public void setObjectId(java.lang.String objectId) {
      this.objectId = objectId;
      objectId__is_set = true;
    }

    protected void setObjectId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, objectId__typeInfo)) {
        setObjectId(__typeMapper.readString(__in, objectId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : submitterId of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo submitterId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","submitterId","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean submitterId__is_set = false;

    private java.lang.String submitterId;

    @Override
    public java.lang.String getSubmitterId() {
      return submitterId;
    }

    @Override
    public void setSubmitterId(java.lang.String submitterId) {
      this.submitterId = submitterId;
      submitterId__is_set = true;
    }

    protected void setSubmitterId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, submitterId__typeInfo)) {
        setSubmitterId(__typeMapper.readString(__in, submitterId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : processDefinitionNameOrId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo processDefinitionNameOrId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","processDefinitionNameOrId","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean processDefinitionNameOrId__is_set = false;

    private java.lang.String processDefinitionNameOrId;

    @Override
    public java.lang.String getProcessDefinitionNameOrId() {
      return processDefinitionNameOrId;
    }

    @Override
    public void setProcessDefinitionNameOrId(java.lang.String processDefinitionNameOrId) {
      this.processDefinitionNameOrId = processDefinitionNameOrId;
      processDefinitionNameOrId__is_set = true;
    }

    protected void setProcessDefinitionNameOrId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, processDefinitionNameOrId__typeInfo)) {
        setProcessDefinitionNameOrId(__typeMapper.readString(__in, processDefinitionNameOrId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : skipEntryCriteria of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private static final com.sforce.ws.bind.TypeInfo skipEntryCriteria__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","skipEntryCriteria","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean skipEntryCriteria__is_set = false;

    private java.lang.Boolean skipEntryCriteria;

    @Override
    public java.lang.Boolean getSkipEntryCriteria() {
      return skipEntryCriteria;
    }

    @Override
    public void setSkipEntryCriteria(java.lang.Boolean skipEntryCriteria) {
      this.skipEntryCriteria = skipEntryCriteria;
      skipEntryCriteria__is_set = true;
    }

    protected void setSkipEntryCriteria(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, skipEntryCriteria__typeInfo)) {
        setSkipEntryCriteria((java.lang.Boolean)__typeMapper.readObject(__in, skipEntryCriteria__typeInfo, java.lang.Boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:partner.soap.sforce.com", "ProcessSubmitRequest");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, objectId__typeInfo, objectId, objectId__is_set);
       __typeMapper.writeString(__out, submitterId__typeInfo, submitterId, submitterId__is_set);
       __typeMapper.writeString(__out, processDefinitionNameOrId__typeInfo, processDefinitionNameOrId, processDefinitionNameOrId__is_set);
       __typeMapper.writeObject(__out, skipEntryCriteria__typeInfo, skipEntryCriteria, skipEntryCriteria__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setObjectId(__in, __typeMapper);
        setSubmitterId(__in, __typeMapper);
        setProcessDefinitionNameOrId(__in, __typeMapper);
        setSkipEntryCriteria(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ProcessSubmitRequest ");
      sb.append(super.toString());sb.append(" objectId='").append(com.sforce.ws.util.Verbose.toString(objectId)).append("'\n");
      sb.append(" submitterId='").append(com.sforce.ws.util.Verbose.toString(submitterId)).append("'\n");
      sb.append(" processDefinitionNameOrId='").append(com.sforce.ws.util.Verbose.toString(processDefinitionNameOrId)).append("'\n");
      sb.append(" skipEntryCriteria='").append(com.sforce.ws.util.Verbose.toString(skipEntryCriteria)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
