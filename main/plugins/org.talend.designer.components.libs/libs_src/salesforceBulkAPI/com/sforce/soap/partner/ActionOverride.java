package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ActionOverride implements com.sforce.ws.bind.XMLizable , IActionOverride{

    /**
     * Constructor
     */
    public ActionOverride() {}

    /**
     * element : isAvailableInTouch of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isAvailableInTouch__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","isAvailableInTouch","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean isAvailableInTouch__is_set = false;

    private boolean isAvailableInTouch;

    @Override
    public boolean getIsAvailableInTouch() {
      return isAvailableInTouch;
    }

    @Override
    public boolean isIsAvailableInTouch() {
      return isAvailableInTouch;
    }

    @Override
    public void setIsAvailableInTouch(boolean isAvailableInTouch) {
      this.isAvailableInTouch = isAvailableInTouch;
      isAvailableInTouch__is_set = true;
    }

    protected void setIsAvailableInTouch(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, isAvailableInTouch__typeInfo)) {
        setIsAvailableInTouch(__typeMapper.readBoolean(__in, isAvailableInTouch__typeInfo, boolean.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    @Override
    public java.lang.String getName() {
      return name;
    }

    @Override
    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pageId of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pageId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","pageId","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean pageId__is_set = false;

    private java.lang.String pageId;

    @Override
    public java.lang.String getPageId() {
      return pageId;
    }

    @Override
    public void setPageId(java.lang.String pageId) {
      this.pageId = pageId;
      pageId__is_set = true;
    }

    protected void setPageId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, pageId__typeInfo)) {
        setPageId(__typeMapper.readString(__in, pageId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : url of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo url__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","url","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean url__is_set = false;

    private java.lang.String url;

    @Override
    public java.lang.String getUrl() {
      return url;
    }

    @Override
    public void setUrl(java.lang.String url) {
      this.url = url;
      url__is_set = true;
    }

    protected void setUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, url__typeInfo)) {
        setUrl(__typeMapper.readString(__in, url__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, isAvailableInTouch__typeInfo, isAvailableInTouch, isAvailableInTouch__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeString(__out, pageId__typeInfo, pageId, pageId__is_set);
       __typeMapper.writeString(__out, url__typeInfo, url, url__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setIsAvailableInTouch(__in, __typeMapper);
        setName(__in, __typeMapper);
        setPageId(__in, __typeMapper);
        setUrl(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ActionOverride ");
      sb.append(" isAvailableInTouch='").append(com.sforce.ws.util.Verbose.toString(isAvailableInTouch)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" pageId='").append(com.sforce.ws.util.Verbose.toString(pageId)).append("'\n");
      sb.append(" url='").append(com.sforce.ws.util.Verbose.toString(url)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
