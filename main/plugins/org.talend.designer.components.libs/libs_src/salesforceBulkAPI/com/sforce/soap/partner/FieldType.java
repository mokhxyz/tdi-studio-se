package com.sforce.soap.partner;

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

/**
 * Generated by SimpleTypeCodeGenerator.java. Please do not edit.
 */
public enum FieldType {


  
	/**
	 * Enumeration  : string
	 */
	string("string"),

  
	/**
	 * Enumeration  : picklist
	 */
	picklist("picklist"),

  
	/**
	 * Enumeration  : multipicklist
	 */
	multipicklist("multipicklist"),

  
	/**
	 * Enumeration  : combobox
	 */
	combobox("combobox"),

  
	/**
	 * Enumeration  : reference
	 */
	reference("reference"),

  
	/**
	 * Enumeration  : base64
	 */
	base64("base64"),

  
	/**
	 * Enumeration  : _boolean
	 */
	_boolean("boolean"),

  
	/**
	 * Enumeration  : currency
	 */
	currency("currency"),

  
	/**
	 * Enumeration  : textarea
	 */
	textarea("textarea"),

  
	/**
	 * Enumeration  : _int
	 */
	_int("int"),

  
	/**
	 * Enumeration  : _double
	 */
	_double("double"),

  
	/**
	 * Enumeration  : percent
	 */
	percent("percent"),

  
	/**
	 * Enumeration  : phone
	 */
	phone("phone"),

  
	/**
	 * Enumeration  : id
	 */
	id("id"),

  
	/**
	 * Enumeration  : date
	 */
	date("date"),

  
	/**
	 * Enumeration  : datetime
	 */
	datetime("datetime"),

  
	/**
	 * Enumeration  : time
	 */
	time("time"),

  
	/**
	 * Enumeration  : url
	 */
	url("url"),

  
	/**
	 * Enumeration  : email
	 */
	email("email"),

  
	/**
	 * Enumeration  : encryptedstring
	 */
	encryptedstring("encryptedstring"),

  
	/**
	 * Enumeration  : datacategorygroupreference
	 */
	datacategorygroupreference("datacategorygroupreference"),

  
	/**
	 * Enumeration  : location
	 */
	location("location"),

  
	/**
	 * Enumeration  : address
	 */
	address("address"),

  
	/**
	 * Enumeration  : anyType
	 */
	anyType("anyType"),

  
	/**
	 * Enumeration  : complexvalue
	 */
	complexvalue("complexvalue"),

;

	public static Map<String, String> valuesToEnums;

	static {
   		valuesToEnums = new HashMap<String, String>();
   		for (FieldType e : EnumSet.allOf(FieldType.class)) {
   			valuesToEnums.put(e.toString(), e.name());
   		}
   	}

   	private String value;

   	private FieldType(String value) {
   		this.value = value;
   	}

   	@Override
   	public String toString() {
   		return value;
   	}
}
