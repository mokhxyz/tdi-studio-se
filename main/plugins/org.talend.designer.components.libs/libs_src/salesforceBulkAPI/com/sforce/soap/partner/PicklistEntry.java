package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class PicklistEntry implements com.sforce.ws.bind.XMLizable , IPicklistEntry{

    /**
     * Constructor
     */
    public PicklistEntry() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    @Override
    public boolean getActive() {
      return active;
    }

    @Override
    public boolean isActive() {
      return active;
    }

    @Override
    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : defaultValue of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo defaultValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","defaultValue","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean defaultValue__is_set = false;

    private boolean defaultValue;

    @Override
    public boolean getDefaultValue() {
      return defaultValue;
    }

    @Override
    public boolean isDefaultValue() {
      return defaultValue;
    }

    @Override
    public void setDefaultValue(boolean defaultValue) {
      this.defaultValue = defaultValue;
      defaultValue__is_set = true;
    }

    protected void setDefaultValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, defaultValue__typeInfo)) {
        setDefaultValue(__typeMapper.readBoolean(__in, defaultValue__typeInfo, boolean.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : validFor of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo validFor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","validFor","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean validFor__is_set = false;

    private byte[] validFor;

    @Override
    public byte[] getValidFor() {
      return validFor;
    }

    @Override
    public void setValidFor(byte[] validFor) {
      this.validFor = validFor;
      validFor__is_set = true;
    }

    protected void setValidFor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, validFor__typeInfo)) {
        setValidFor((byte[])__typeMapper.readObject(__in, validFor__typeInfo, byte[].class));
      }
    }

    /**
     * element : value of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo value__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean value__is_set = false;

    private java.lang.String value;

    @Override
    public java.lang.String getValue() {
      return value;
    }

    @Override
    public void setValue(java.lang.String value) {
      this.value = value;
      value__is_set = true;
    }

    protected void setValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, value__typeInfo)) {
        setValue(__typeMapper.readString(__in, value__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeBoolean(__out, defaultValue__typeInfo, defaultValue, defaultValue__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, validFor__typeInfo, validFor, validFor__is_set);
       __typeMapper.writeString(__out, value__typeInfo, value, value__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActive(__in, __typeMapper);
        setDefaultValue(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setValidFor(__in, __typeMapper);
        setValue(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[PicklistEntry ");
      sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" defaultValue='").append(com.sforce.ws.util.Verbose.toString(defaultValue)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" validFor='").append(com.sforce.ws.util.Verbose.toString(validFor)).append("'\n");
      sb.append(" value='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
