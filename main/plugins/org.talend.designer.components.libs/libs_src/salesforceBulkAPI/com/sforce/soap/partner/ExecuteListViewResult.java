package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ExecuteListViewResult implements com.sforce.ws.bind.XMLizable , IExecuteListViewResult{

    /**
     * Constructor
     */
    public ExecuteListViewResult() {}

    /**
     * element : columns of type {urn:partner.soap.sforce.com}ListViewColumn
     * java type: com.sforce.soap.partner.ListViewColumn[]
     */
    private static final com.sforce.ws.bind.TypeInfo columns__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","columns","urn:partner.soap.sforce.com","ListViewColumn",1,-1,true);

    private boolean columns__is_set = false;

    private com.sforce.soap.partner.ListViewColumn[] columns = new com.sforce.soap.partner.ListViewColumn[0];

    @Override
    public com.sforce.soap.partner.ListViewColumn[] getColumns() {
      return columns;
    }

    @Override
    public void setColumns(com.sforce.soap.partner.IListViewColumn[] columns) {
      this.columns = castArray(com.sforce.soap.partner.ListViewColumn.class, columns);
      columns__is_set = true;
    }

    protected void setColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, columns__typeInfo)) {
        setColumns((com.sforce.soap.partner.ListViewColumn[])__typeMapper.readObject(__in, columns__typeInfo, com.sforce.soap.partner.ListViewColumn[].class));
      }
    }

    /**
     * element : developerName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo developerName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean developerName__is_set = false;

    private java.lang.String developerName;

    @Override
    public java.lang.String getDeveloperName() {
      return developerName;
    }

    @Override
    public void setDeveloperName(java.lang.String developerName) {
      this.developerName = developerName;
      developerName__is_set = true;
    }

    protected void setDeveloperName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, developerName__typeInfo)) {
        setDeveloperName(__typeMapper.readString(__in, developerName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : done of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo done__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","done","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean done__is_set = false;

    private boolean done;

    @Override
    public boolean getDone() {
      return done;
    }

    @Override
    public boolean isDone() {
      return done;
    }

    @Override
    public void setDone(boolean done) {
      this.done = done;
      done__is_set = true;
    }

    protected void setDone(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, done__typeInfo)) {
        setDone(__typeMapper.readBoolean(__in, done__typeInfo, boolean.class));
      }
    }

    /**
     * element : id of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo id__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","id","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean id__is_set = false;

    private java.lang.String id;

    @Override
    public java.lang.String getId() {
      return id;
    }

    @Override
    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, id__typeInfo)) {
        setId(__typeMapper.readString(__in, id__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : records of type {urn:partner.soap.sforce.com}ListViewRecord
     * java type: com.sforce.soap.partner.ListViewRecord[]
     */
    private static final com.sforce.ws.bind.TypeInfo records__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","records","urn:partner.soap.sforce.com","ListViewRecord",1,-1,true);

    private boolean records__is_set = false;

    private com.sforce.soap.partner.ListViewRecord[] records = new com.sforce.soap.partner.ListViewRecord[0];

    @Override
    public com.sforce.soap.partner.ListViewRecord[] getRecords() {
      return records;
    }

    @Override
    public void setRecords(com.sforce.soap.partner.IListViewRecord[] records) {
      this.records = castArray(com.sforce.soap.partner.ListViewRecord.class, records);
      records__is_set = true;
    }

    protected void setRecords(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, records__typeInfo)) {
        setRecords((com.sforce.soap.partner.ListViewRecord[])__typeMapper.readObject(__in, records__typeInfo, com.sforce.soap.partner.ListViewRecord[].class));
      }
    }

    /**
     * element : size of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo size__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","size","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean size__is_set = false;

    private int size;

    @Override
    public int getSize() {
      return size;
    }

    @Override
    public void setSize(int size) {
      this.size = size;
      size__is_set = true;
    }

    protected void setSize(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, size__typeInfo)) {
        setSize((int)__typeMapper.readInt(__in, size__typeInfo, int.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, columns__typeInfo, columns, columns__is_set);
       __typeMapper.writeString(__out, developerName__typeInfo, developerName, developerName__is_set);
       __typeMapper.writeBoolean(__out, done__typeInfo, done, done__is_set);
       __typeMapper.writeString(__out, id__typeInfo, id, id__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, records__typeInfo, records, records__is_set);
       __typeMapper.writeInt(__out, size__typeInfo, size, size__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setColumns(__in, __typeMapper);
        setDeveloperName(__in, __typeMapper);
        setDone(__in, __typeMapper);
        setId(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setRecords(__in, __typeMapper);
        setSize(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ExecuteListViewResult ");
      sb.append(" columns='").append(com.sforce.ws.util.Verbose.toString(columns)).append("'\n");
      sb.append(" developerName='").append(com.sforce.ws.util.Verbose.toString(developerName)).append("'\n");
      sb.append(" done='").append(com.sforce.ws.util.Verbose.toString(done)).append("'\n");
      sb.append(" id='").append(com.sforce.ws.util.Verbose.toString(id)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" records='").append(com.sforce.ws.util.Verbose.toString(records)).append("'\n");
      sb.append(" size='").append(com.sforce.ws.util.Verbose.toString(size)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
