package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class GetDeletedResult implements com.sforce.ws.bind.XMLizable , IGetDeletedResult{

    /**
     * Constructor
     */
    public GetDeletedResult() {}

    /**
     * element : deletedRecords of type {urn:partner.soap.sforce.com}DeletedRecord
     * java type: com.sforce.soap.partner.DeletedRecord[]
     */
    private static final com.sforce.ws.bind.TypeInfo deletedRecords__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","deletedRecords","urn:partner.soap.sforce.com","DeletedRecord",0,-1,true);

    private boolean deletedRecords__is_set = false;

    private com.sforce.soap.partner.DeletedRecord[] deletedRecords = new com.sforce.soap.partner.DeletedRecord[0];

    @Override
    public com.sforce.soap.partner.DeletedRecord[] getDeletedRecords() {
      return deletedRecords;
    }

    @Override
    public void setDeletedRecords(com.sforce.soap.partner.IDeletedRecord[] deletedRecords) {
      this.deletedRecords = castArray(com.sforce.soap.partner.DeletedRecord.class, deletedRecords);
      deletedRecords__is_set = true;
    }

    protected void setDeletedRecords(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, deletedRecords__typeInfo)) {
        setDeletedRecords((com.sforce.soap.partner.DeletedRecord[])__typeMapper.readObject(__in, deletedRecords__typeInfo, com.sforce.soap.partner.DeletedRecord[].class));
      }
    }

    /**
     * element : earliestDateAvailable of type {http://www.w3.org/2001/XMLSchema}dateTime
     * java type: java.util.Calendar
     */
    private static final com.sforce.ws.bind.TypeInfo earliestDateAvailable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","earliestDateAvailable","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

    private boolean earliestDateAvailable__is_set = false;

    private java.util.Calendar earliestDateAvailable;

    @Override
    public java.util.Calendar getEarliestDateAvailable() {
      return earliestDateAvailable;
    }

    @Override
    public void setEarliestDateAvailable(java.util.Calendar earliestDateAvailable) {
      this.earliestDateAvailable = earliestDateAvailable;
      earliestDateAvailable__is_set = true;
    }

    protected void setEarliestDateAvailable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, earliestDateAvailable__typeInfo)) {
        setEarliestDateAvailable((java.util.Calendar)__typeMapper.readObject(__in, earliestDateAvailable__typeInfo, java.util.Calendar.class));
      }
    }

    /**
     * element : latestDateCovered of type {http://www.w3.org/2001/XMLSchema}dateTime
     * java type: java.util.Calendar
     */
    private static final com.sforce.ws.bind.TypeInfo latestDateCovered__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","latestDateCovered","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

    private boolean latestDateCovered__is_set = false;

    private java.util.Calendar latestDateCovered;

    @Override
    public java.util.Calendar getLatestDateCovered() {
      return latestDateCovered;
    }

    @Override
    public void setLatestDateCovered(java.util.Calendar latestDateCovered) {
      this.latestDateCovered = latestDateCovered;
      latestDateCovered__is_set = true;
    }

    protected void setLatestDateCovered(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, latestDateCovered__typeInfo)) {
        setLatestDateCovered((java.util.Calendar)__typeMapper.readObject(__in, latestDateCovered__typeInfo, java.util.Calendar.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, deletedRecords__typeInfo, deletedRecords, deletedRecords__is_set);
       __typeMapper.writeObject(__out, earliestDateAvailable__typeInfo, earliestDateAvailable, earliestDateAvailable__is_set);
       __typeMapper.writeObject(__out, latestDateCovered__typeInfo, latestDateCovered, latestDateCovered__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setDeletedRecords(__in, __typeMapper);
        setEarliestDateAvailable(__in, __typeMapper);
        setLatestDateCovered(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[GetDeletedResult ");
      sb.append(" deletedRecords='").append(com.sforce.ws.util.Verbose.toString(deletedRecords)).append("'\n");
      sb.append(" earliestDateAvailable='").append(com.sforce.ws.util.Verbose.toString(earliestDateAvailable)).append("'\n");
      sb.append(" latestDateCovered='").append(com.sforce.ws.util.Verbose.toString(latestDateCovered)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
