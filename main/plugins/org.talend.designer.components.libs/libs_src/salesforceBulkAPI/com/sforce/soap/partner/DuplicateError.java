package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DuplicateError extends com.sforce.soap.partner.Error implements IDuplicateError{

    /**
     * Constructor
     */
    public DuplicateError() {}

    /**
     * element : duplicateResult of type {urn:partner.soap.sforce.com}DuplicateResult
     * java type: com.sforce.soap.partner.DuplicateResult
     */
    private static final com.sforce.ws.bind.TypeInfo duplicateResult__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","duplicateResult","urn:partner.soap.sforce.com","DuplicateResult",1,1,true);

    private boolean duplicateResult__is_set = false;

    private com.sforce.soap.partner.DuplicateResult duplicateResult;

    @Override
    public com.sforce.soap.partner.DuplicateResult getDuplicateResult() {
      return duplicateResult;
    }

    @Override
    public void setDuplicateResult(com.sforce.soap.partner.IDuplicateResult duplicateResult) {
      this.duplicateResult = (com.sforce.soap.partner.DuplicateResult)duplicateResult;
      duplicateResult__is_set = true;
    }

    protected void setDuplicateResult(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, duplicateResult__typeInfo)) {
        setDuplicateResult((com.sforce.soap.partner.DuplicateResult)__typeMapper.readObject(__in, duplicateResult__typeInfo, com.sforce.soap.partner.DuplicateResult.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:partner.soap.sforce.com", "DuplicateError");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, duplicateResult__typeInfo, duplicateResult, duplicateResult__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setDuplicateResult(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DuplicateError ");
      sb.append(super.toString());sb.append(" duplicateResult='").append(com.sforce.ws.util.Verbose.toString(duplicateResult)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
