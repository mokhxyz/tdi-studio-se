package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeSoqlListViewParams implements com.sforce.ws.bind.XMLizable , IDescribeSoqlListViewParams{

    /**
     * Constructor
     */
    public DescribeSoqlListViewParams() {}

    /**
     * element : developerNameOrId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo developerNameOrId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","developerNameOrId","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean developerNameOrId__is_set = false;

    private java.lang.String developerNameOrId;

    @Override
    public java.lang.String getDeveloperNameOrId() {
      return developerNameOrId;
    }

    @Override
    public void setDeveloperNameOrId(java.lang.String developerNameOrId) {
      this.developerNameOrId = developerNameOrId;
      developerNameOrId__is_set = true;
    }

    protected void setDeveloperNameOrId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, developerNameOrId__typeInfo)) {
        setDeveloperNameOrId(__typeMapper.readString(__in, developerNameOrId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : sobjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo sobjectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","sobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean sobjectType__is_set = false;

    private java.lang.String sobjectType;

    @Override
    public java.lang.String getSobjectType() {
      return sobjectType;
    }

    @Override
    public void setSobjectType(java.lang.String sobjectType) {
      this.sobjectType = sobjectType;
      sobjectType__is_set = true;
    }

    protected void setSobjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, sobjectType__typeInfo)) {
        setSobjectType(__typeMapper.readString(__in, sobjectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, developerNameOrId__typeInfo, developerNameOrId, developerNameOrId__is_set);
       __typeMapper.writeString(__out, sobjectType__typeInfo, sobjectType, sobjectType__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setDeveloperNameOrId(__in, __typeMapper);
        setSobjectType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeSoqlListViewParams ");
      sb.append(" developerNameOrId='").append(com.sforce.ws.util.Verbose.toString(developerNameOrId)).append("'\n");
      sb.append(" sobjectType='").append(com.sforce.ws.util.Verbose.toString(sobjectType)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
