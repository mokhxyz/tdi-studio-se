package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class SearchSnippet implements com.sforce.ws.bind.XMLizable , ISearchSnippet{

    /**
     * Constructor
     */
    public SearchSnippet() {}

    /**
     * element : text of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo text__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","text","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean text__is_set = false;

    private java.lang.String text;

    @Override
    public java.lang.String getText() {
      return text;
    }

    @Override
    public void setText(java.lang.String text) {
      this.text = text;
      text__is_set = true;
    }

    protected void setText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, text__typeInfo)) {
        setText(__typeMapper.readString(__in, text__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : wholeFields of type {urn:partner.soap.sforce.com}NameValuePair
     * java type: com.sforce.soap.partner.NameValuePair[]
     */
    private static final com.sforce.ws.bind.TypeInfo wholeFields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","wholeFields","urn:partner.soap.sforce.com","NameValuePair",0,-1,true);

    private boolean wholeFields__is_set = false;

    private com.sforce.soap.partner.NameValuePair[] wholeFields = new com.sforce.soap.partner.NameValuePair[0];

    @Override
    public com.sforce.soap.partner.NameValuePair[] getWholeFields() {
      return wholeFields;
    }

    @Override
    public void setWholeFields(com.sforce.soap.partner.INameValuePair[] wholeFields) {
      this.wholeFields = castArray(com.sforce.soap.partner.NameValuePair.class, wholeFields);
      wholeFields__is_set = true;
    }

    protected void setWholeFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, wholeFields__typeInfo)) {
        setWholeFields((com.sforce.soap.partner.NameValuePair[])__typeMapper.readObject(__in, wholeFields__typeInfo, com.sforce.soap.partner.NameValuePair[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, text__typeInfo, text, text__is_set);
       __typeMapper.writeObject(__out, wholeFields__typeInfo, wholeFields, wholeFields__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setText(__in, __typeMapper);
        setWholeFields(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SearchSnippet ");
      sb.append(" text='").append(com.sforce.ws.util.Verbose.toString(text)).append("'\n");
      sb.append(" wholeFields='").append(com.sforce.ws.util.Verbose.toString(wholeFields)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
