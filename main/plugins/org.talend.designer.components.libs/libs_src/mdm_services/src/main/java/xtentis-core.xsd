<xsd:schema elementFormDefault='unqualified' targetNamespace='urn-com-amalto-xtentis-webservice' xmlns:tns='urn-com-amalto-xtentis-webservice' xmlns:xsd='http://www.w3.org/2001/XMLSchema'>
 <!-- *****************************************************
		              GENERIC ELEMENTS
		*******************************************************-->
 <xsd:element name='WSString'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element maxOccurs='1' minOccurs='1' name='value' type='xsd:string'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name='WSLong'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element maxOccurs='1' minOccurs='1' name='value' type='xsd:long'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>
 <xsd:complexType name='WSStringArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='strings' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSStringArray' type='tns:WSStringArray'/>
 <xsd:complexType name='WSByteArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='bytes' nillable='true' type='xsd:base64Binary'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSByteArray' type='tns:WSByteArray'/>
 <xsd:complexType name='WSInt'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='value' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSInt' type='tns:WSInt'/>
 <xsd:complexType name='WSI18nString'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='language' type='tns:WSLanguage'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='label' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:complexType name='WSBoolean'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBoolean' type='tns:WSBoolean'/>
 <xsd:simpleType name='WSLanguage'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='FR'/>
   <xsd:enumeration value='EN'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:simpleType name='WSBaseType'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='string'/>
   <xsd:enumeration value='int'/>
   <xsd:enumeration value='token'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSKey'>
  <xsd:annotation>
   <xsd:documentation>
				In simple terms: each key field is found using the path selectorpath/fieldpath within the element
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='selectorpath' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='fieldpath' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:complexType name='WSLinkedHashMap'>
  <xsd:annotation>
   <xsd:documentation>
				A generic implementation of a linked hash map
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='typedContentEntry' nillable='true'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='key' nillable='true' type='xsd:string'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='value' nillable='true' type='tns:WSStringArray'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSLinkedHashMap' type='tns:WSLinkedHashMap'/>
 <xsd:complexType name='WSHashMap'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='entry' nillable='true'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='key' nillable='true' type='xsd:string'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='value' nillable='true' type='xsd:string'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSHashMap' type='tns:WSHashMap'/>
 <xsd:complexType name='WSTypedContent'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='0' name='url' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='wsBytes' nillable='true' type='tns:WSByteArray'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='contentType' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSTypedContent' type='tns:WSTypedContent'/>
 <xsd:complexType name='WSTypedContentMap'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='mapEntry'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='key' nillable='false' type='xsd:string'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='typedContent' nillable='false' type='tns:WSTypedContent'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSTypedContentMap' type='tns:WSTypedContentMap'/>
 <xsd:complexType name='WSConceptRevisionMap'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='mapEntry'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='concept' nillable='false' type='xsd:string'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='revision' nillable='false' type='xsd:string'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSConceptRevisionMap' type='tns:WSConceptRevisionMap'/>
 <xsd:complexType name='WSDigestKey'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='type' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='objectName' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDigestKey' type='tns:WSDigestKey'/>
 <xsd:complexType name='WSDigest'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDigestKey' nillable='false' type='tns:WSDigestKey'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='digestValue' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='timeStamp' nillable='true' type='xsd:long'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDigest' type='tns:WSDigest'/>
 <xsd:complexType name='WSPutMatchRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='rule' nillable='false' type='tns:WSMatchRule'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutMatchRule' type='tns:WSPutMatchRule'/>
 <xsd:complexType name='WSDeleteMatchRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='PK' nillable='false' type='tns:WSMatchRulePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteMatchRule' type='tns:WSDeleteMatchRule'/>
 <xsd:complexType name='WSMatchRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='PK' nillable='false' type='tns:WSMatchRulePK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='configurationXmlContent' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMatchRule' type='tns:WSMatchRule'/>
 <xsd:complexType name='WSMatchRulePK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMatchRulePK' type='tns:WSMatchRulePK'/>
 <!-- *****************************************************
		MANAGEMENT
		*******************************************************-->
 <xsd:simpleType name='WSComponent'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='DataManager'/>
   <xsd:enumeration value='Service'/>
   <xsd:enumeration value='Connector'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSGetComponentVersion'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='component' nillable='false' type='tns:WSComponent'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='id' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetComponentVersion' type='tns:WSGetComponentVersion'/>
 <xsd:complexType name='WSVersion'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='major' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='minor' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='revision' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='build' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='date' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSVersion' type='tns:WSVersion'/>
 <xsd:complexType name='WSPing'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='echo' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPing' type='tns:WSPing'/>
 <xsd:complexType name='WSRefreshCache'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='type' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRefreshCache' type='tns:WSRefreshCache'/>
 <xsd:complexType name='WSLogout'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='0' name='dummy' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSLogout' type='tns:WSLogout'/>
 <!-- *****************************************************
		             INITIALIZATION
		*******************************************************-->
 <xsd:complexType name='WSInitData'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='zap' nillable='false' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xmlSchema' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSInitData' type='tns:WSInitData'/>
 <xsd:complexType name='WSDocumentPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDocumentPK' type='tns:WSDocumentPK'/>
 <!-- *****************************************************
		              D A T A   M O D E L
		*******************************************************-->
 <xsd:complexType name='WSDataModel'>
  <xsd:annotation>
   <xsd:documentation>
				A Data Model.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xsdSchema' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataModel' type='tns:WSDataModel'/>
 <xsd:complexType name='WSDataModelPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataModelPK' type='tns:WSDataModelPK'/>
 <xsd:complexType name='WSDataModelArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsDataModels' nillable='false' type='tns:WSDataModel'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataModelArray' type='tns:WSDataModelArray'/>
 <xsd:complexType name='WSDataModelPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsDataModelPKs' nillable='false' type='tns:WSDataModelPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataModelPKArray' type='tns:WSDataModelPKArray'/>
 <xsd:complexType name='WSBusinessConcept'>
  <xsd:annotation>
   <xsd:documentation>
				Can be used as a simple alternative to avoid loading a schema xsd:element
				@see putBusinessConceptSchema
				xsd types can be used as business template
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='businessTemplate' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsUniqueKey' nillable='false' type='tns:WSKey'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsLabel' nillable='false' type='tns:WSI18nString'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsDescription' nillable='false' type='tns:WSI18nString'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessConcept' type='tns:WSBusinessConcept'/>
 <xsd:simpleType name='WSTemplateType'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='SIMPLE'/>
   <xsd:enumeration value='COMPLEX'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSBusinessTemplate'>
  <xsd:annotation>
   <xsd:documentation>
				Can be used as a simple alternative to avoid loading a schema xsd:simpleType or xsd:complexType Element
				@see putBusinessTemplateSchema
				one of simpletemplate or complextemplate must be filled in accordance with type
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='type' nillable='false' type='tns:WSTemplateType'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='simpleTemplate' nillable='false' type='tns:WSBusinessSimpleTemplate'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='complexTemplate' nillable='false' type='tns:WSBusinessComplexTemplate'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessTemplate' type='tns:WSBusinessTemplate'/>
 <xsd:complexType name='WSBusinessSimpleTemplate'>
  <xsd:annotation>
   <xsd:documentation>
				Can be used as a simple alternative to avoid loading a schema xsd:simpleType Element
				@see putBusinessTemplateSchema
				xsd types MUST be used as xsdbasetype
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xsdBaseType' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='pattern' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessSimpleTemplate' type='tns:WSBusinessSimpleTemplate'/>
 <xsd:complexType name='WSBusinessComplexTemplate'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsBusinessElements' nillable='false' type='tns:WSBusinessElement'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessComplexTemplate' type='tns:WSBusinessComplexTemplate'/>
 <xsd:complexType name='WSBusinessElement'>
  <xsd:annotation>
   <xsd:documentation>
				A &quot;sub-element&quot; in a Complex Template 
				xsd types can be used as business template
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='minOccurs' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxOccurs' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='businessTemplate' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='wsForeignKey' nillable='false' type='tns:WSKey'/>
   <!-- ignored in this release -->
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsLabel' nillable='false' type='tns:WSI18nString'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsDescription' nillable='false' type='tns:WSI18nString'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessElement' type='tns:WSBusinessElement'/>
 <!-- Operations -->
 <xsd:complexType name='WSPutDataModel'>
  <xsd:annotation>
   <xsd:documentation>
				Creates - updates a data model
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModel' nillable='false' type='tns:WSDataModel'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutDataModel' type='tns:WSPutDataModel'/>
 <xsd:complexType name='WSGetDataModel'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetDataModel' type='tns:WSGetDataModel'/>
 <xsd:complexType name='WSExistsDataModel'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsDataModel' type='tns:WSExistsDataModel'/>
 <xsd:complexType name='WSDeleteDataModel'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteDataModel' type='tns:WSDeleteDataModel'/>
 <!--
	<xsd:complexType name="WSRegexDataModels">
		<xsd:annotation>
			<xsd:documentation>
				Get a list of data models using a regular expression
			</xsd:documentation>
		</xsd:annotation>				
		<xsd:sequence>
			<xsd:element minOccurs="1" maxOccurs="1"  nillable="false" name="regex" type="xsd:string"/>
		</xsd:sequence>		
	</xsd:complexType>
	<xsd:element name="WSRegexDataModels" type="tns:WSRegexDataModels"/>
	-->
 <xsd:complexType name='WSRegexDataModelPKs'>
  <xsd:annotation>
   <xsd:documentation>
				Get a list of data model PKs using a regular expression
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRegexDataModelPKs' type='tns:WSRegexDataModelPKs'/>
 <xsd:complexType name='WSCheckSchema'>
  <xsd:annotation>
   <xsd:documentation>
				Check is a schema is valid
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='schema' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCheckSchema' type='tns:WSCheckSchema'/>
 <xsd:complexType name='WSPutBusinessConcept'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='businessConcept' nillable='false' type='tns:WSBusinessConcept'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutBusinessConcept' type='tns:WSPutBusinessConcept'/>
 <xsd:complexType name='WSPutBusinessConceptSchema'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='businessConceptSchema' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutBusinessConceptSchema' type='tns:WSPutBusinessConceptSchema'/>
 <xsd:complexType name='WSDeleteBusinessConcept'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='businessConceptName' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteBusinessConcept' type='tns:WSDeleteBusinessConcept'/>
 <xsd:complexType name='WSGetBusinessConcepts'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetBusinessConcepts' type='tns:WSGetBusinessConcepts'/>
 <xsd:complexType name='WSGetBusinessConceptKey'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='concept' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetBusinessConceptKey' type='tns:WSGetBusinessConceptKey'/>
 <xsd:complexType name='WSConceptKey'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='selector' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='fields' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSConceptKey' type='tns:WSConceptKey'/>
 <!-- *****************************************************
		              D A T A   C L U S T E R
	*******************************************************-->
 <xsd:simpleType name='WSDataClusterType'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='CACHE'/>
   <xsd:enumeration value='ITEMS'/>
   <xsd:enumeration value='UNKNOWN'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSDataCluster'>
  <xsd:annotation>
   <xsd:documentation>
				A data cluster.
				Stemming is only supported with the Xyleme server and is not recommended. Use the value 100 to disable stemming.
				The speller refresh period is ignored at this stage. A value of -1 disables spell checking entirely in the cluster.
				Vocabulary holds the stemmer vocabulary. It should have an empty value on creation.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='vocabulary' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataCluster' type='tns:WSDataCluster'/>
 <xsd:complexType name='WSDataClusterPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataClusterPK' type='tns:WSDataClusterPK'/>
 <xsd:complexType name='WSDataClusterArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsDataClusters' nillable='false' type='tns:WSDataCluster'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataClusterArray' type='tns:WSDataClusterArray'/>
 <xsd:complexType name='WSDataClusterPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsDataClusterPKs' nillable='false' type='tns:WSDataClusterPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDataClusterPKArray' type='tns:WSDataClusterPKArray'/>
 <!-- Operations -->
 <xsd:complexType name='WSPutDBDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutDBDataCluster' type='tns:WSPutDBDataCluster'/>
 <xsd:complexType name='WSPutDataCluster'>
  <xsd:annotation>
   <xsd:documentation>
				Creates a data-cluster. Characteristics (stemming, etc...) of a data cluster cannot be changed
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataCluster' nillable='false' type='tns:WSDataCluster'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutDataCluster' type='tns:WSPutDataCluster'/>
 <xsd:complexType name='WSGetDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetDataCluster' type='tns:WSGetDataCluster'/>
 <xsd:complexType name='WSExistsDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsDataCluster' type='tns:WSExistsDataCluster'/>
 <xsd:complexType name='WSExistsDBDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsDBDataCluster' type='tns:WSExistsDBDataCluster'/>
 <xsd:complexType name='WSDeleteDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteDataCluster' type='tns:WSDeleteDataCluster'/>
 <xsd:complexType name='WSRegexDataClusterPKs'>
  <xsd:annotation>
   <xsd:documentation>
				A list of Data Custer PKs obtained using  a regex. Pass * to retrieve all of them.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRegexDataClusterPKs' type='tns:WSRegexDataClusterPKs'/>
 <xsd:complexType name='WSGetConceptsInDataCluster'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetConceptsInDataCluster' type='tns:WSGetConceptsInDataCluster'/>
 <!-- *****************************************************
		              W H E R E    E L E M E N T S
					  used by Views and Searches 
		*******************************************************-->
 <xsd:complexType name='WSWhereCondition'>
  <xsd:annotation>
   <xsd:documentation>
				Use this object to write where conditions.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='0' name='leftPath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='operator' nillable='true' type='tns:WSWhereOperator'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='rightValueOrPath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='stringPredicate' nillable='true' type='tns:WSStringPredicate'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellCheck' nillable='false' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:simpleType name='WSWhereOperator'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='JOIN'/>
   <xsd:enumeration value='CONTAINS_TEXT_OF'/>
   <xsd:enumeration value='CONTAINS'/>
   <xsd:enumeration value='STARTSWITH'/>
   <xsd:enumeration value='STRICTCONTAINS'/>
   <xsd:enumeration value='EQUALS'/>
   <xsd:enumeration value='NOT_EQUALS'/>
   <xsd:enumeration value='GREATER_THAN'/>
   <xsd:enumeration value='GREATER_THAN_OR_EQUAL'/>
   <xsd:enumeration value='LOWER_THAN'/>
   <xsd:enumeration value='LOWER_THAN_OR_EQUAL'/>
   <xsd:enumeration value='NO_OPERATOR'/>
   <xsd:enumeration value='FULLTEXTSEARCH'/>
   <xsd:enumeration value='EMPTY_NULL'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:simpleType name='WSStringPredicate'>
  <!-- for CONTAINS and STRICTCONTAINS ONLY -->
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='NONE'/>
   <xsd:enumeration value='OR'/>
   <!--between words -->
   <xsd:enumeration value='AND'/>
   <!--between words -->
   <xsd:enumeration value='STRICTAND'/>
   <!--between words - same PCDATA -->
   <xsd:enumeration value='EXACTLY'/>
   <!-- this sentence -->
   <xsd:enumeration value='NOT'/>
   <!-- does not contains these cords -->
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSWhereAnd'>
  <xsd:annotation>
   <xsd:documentation>
				The And operator between WhereConditions
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='whereItems' nillable='false' type='tns:WSWhereItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:complexType name='WSWhereOr'>
  <xsd:annotation>
   <xsd:documentation>
				The Or operator between WhereConditions
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='whereItems' nillable='false' type='tns:WSWhereItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:complexType name='WSWhereItem'>
  <xsd:annotation>
   <xsd:documentation>
				An And or Or or WhereCondition
			</xsd:documentation>
  </xsd:annotation>
  <!--
		It should be only one of them due to lack of support for choice
		<xsd:choice>
		-->
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereCondition' nillable='false' type='tns:WSWhereCondition'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereAnd' nillable='false' type='tns:WSWhereAnd'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereOr' nillable='false' type='tns:WSWhereOr'/>
  </xsd:sequence>
  <!--
		</xsd:choice>
		-->
 </xsd:complexType>
 <!-- *****************************************************
		              V I E W 
		*******************************************************-->
 <xsd:complexType name='WSView'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='viewableBusinessElements' nillable='false' type='xsd:string'/>
   <!-- projected business elements -->
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='whereConditions' nillable='true' type='tns:WSWhereCondition'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='searchableBusinessElements' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='transformerPK' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='isTransformerActive' nillable='true' type='tns:WSBoolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSView' type='tns:WSView'/>
 <xsd:complexType name='WSViewPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSViewPK' type='tns:WSViewPK'/>
 <xsd:complexType name='WSViewPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSViewPKArray' type='tns:WSViewPKArray'/>
 <xsd:complexType name='WSViewArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsViews' nillable='false' type='tns:WSView'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSViewArray' type='tns:WSViewArray'/>
 <!-- Operations -->
 <xsd:complexType name='WSPutView'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsView' nillable='false' type='tns:WSView'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutView' type='tns:WSPutView'/>
 <xsd:complexType name='WSGetView'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetView' type='tns:WSGetView'/>
 <xsd:complexType name='WSExistsView'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsView' type='tns:WSExistsView'/>
 <xsd:complexType name='WSDeleteView'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteView' type='tns:WSDeleteView'/>
 <xsd:complexType name='WSRegexViews'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRegexViews' type='tns:WSRegexViews'/>
 <xsd:complexType name='WSGetViewPKs'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetViewPKs' type='tns:WSGetViewPKs'/>
 <!-- *****************************************************
		             S E A R C H     I T E M S
		*******************************************************-->
 <xsd:complexType name='WSItem'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='dataModelName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='dataModelRevision' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='ids' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='insertionTime' nillable='false' type='xsd:long'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='taskId' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='content' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSItem' type='tns:WSItem'/>
 <xsd:complexType name='WSItemPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='ids' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSItemPK' type='tns:WSItemPK'/>
 <xsd:complexType name='WSItemPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSItemPKArray' type='tns:WSItemPKArray'/>
 <xsd:complexType name='WSBusinessConceptPK'>
  <xsd:annotation>
   <xsd:documentation>
				The unique key of a business concept
				Used with WSGetBusinessConceptValue
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='ids' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSBusinessConceptPK' type='tns:WSBusinessConceptPK'/>
 <!-- Operations -->
 <xsd:complexType name='WSGetItem'>
  <xsd:annotation>
   <xsd:documentation>
				Returns an item based on its cluster pk and its key(s)
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItem' type='tns:WSGetItem'/>
 <xsd:complexType name='WSExistsItem'>
  <xsd:annotation>
   <xsd:documentation>
				Returns whether an item exists
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsItem' type='tns:WSExistsItem'/>
 <xsd:complexType name='WSGetItems'>
  <xsd:annotation>
   <xsd:documentation>
				Returns items based on the cluster pk and a search
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='totalCountOnFirstResult' nillable='false' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItems' type='tns:WSGetItems'/>
 <xsd:complexType name='WSGetItemsSort'>
  <xsd:annotation>
   <xsd:documentation>
				Returns items based on the cluster pk and a search
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='totalCountOnFirstResult' nillable='false' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='sort' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='dir' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItemsSort' type='tns:WSGetItemsSort'/>
 <xsd:complexType name='WSGetItemPKsByCriteria'>
  <xsd:annotation>
   <xsd:documentation>
				Returns items based on criteria
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='contentKeywords' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='keysKeywords' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='fromDate' nillable='true' type='xsd:long'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='toDate' nillable='true' type='xsd:long'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItemPKsByCriteria' type='tns:WSGetItemPKsByCriteria'/>
 <xsd:complexType name='WSGetItemPKsByFullCriteria'>
  <xsd:annotation>
   <xsd:documentation>
                Returns items based on criteria
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsGetItemPKsByCriteria' nillable='false' type='tns:WSGetItemPKsByCriteria'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='useFTSearch' nillable='false' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItemPKsByFullCriteria' type='tns:WSGetItemPKsByFullCriteria'/>
 <xsd:complexType name='WSItemPKsByCriteriaResponse'>
  <xsd:annotation>
   <xsd:documentation>
				items returned based on criteria
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='results' nillable='false'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='date' nillable='false' type='xsd:long'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
      <xsd:element maxOccurs='1' minOccurs='0' name='taskId' nillable='true' type='xsd:string'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSItemPKsByCriteriaResponse' type='tns:WSItemPKsByCriteriaResponse'/>
 <xsd:complexType name='WSCountItemsByCustomFKFilters'>
  <xsd:annotation>
   <xsd:documentation>
                Count items based on customized FK filters
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='injectedXpath' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCountItemsByCustomFKFilters' type='tns:WSCountItemsByCustomFKFilters'/>
 <xsd:complexType name='WSGetItemsByCustomFKFilters'>
  <xsd:annotation>
   <xsd:documentation>
                Return items based on customized FK filters
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='viewablePaths' nillable='false' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='injectedXpath' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='orderBy' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='direction' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='returnCount' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItemsByCustomFKFilters' type='tns:WSGetItemsByCustomFKFilters'/>
 <xsd:complexType name='WSGetBusinessConceptValue'>
  <xsd:annotation>
   <xsd:documentation>
				Returns the value for a business concept based on its key
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsBusinessConceptPK' nillable='false' type='tns:WSBusinessConceptPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetBusinessConceptValue' type='tns:WSGetBusinessConceptValue'/>
 <xsd:complexType name='WSGetFullPathValues'>
  <xsd:annotation>
   <xsd:documentation>
				Return all the possible values for a full path starting with the concept name
				optionally filtered with a condition
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='fullPath' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellThreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='orderBy' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='direction' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetFullPathValues' type='tns:WSGetFullPathValues'/>
 <xsd:complexType name='WSViewSearch'>
  <xsd:annotation>
   <xsd:documentation>
				Performs a search on the searchable elements of a view
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='orderBy' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='direction' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSViewSearch' type='tns:WSViewSearch'/>
 <xsd:complexType name='WSXPathsSearch'>
  <xsd:annotation>
   <xsd:documentation>
				Performs a search and returns the values for the viewable paths
				If the pivot is null, the first element of the viewable paths is used
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='pivotPath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='viewablePaths' nillable='false' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='orderBy' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='direction' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='returnCount' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSXPathsSearch' type='tns:WSXPathsSearch'/>
 <xsd:complexType name='WSGetItemsPivotIndex'>
  <xsd:annotation>
   <xsd:documentation>
				Get items hierarchical tree according to pivots
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='clusterName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='mainPivotName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='pivotWithKeys' nillable='false' type='tns:WSLinkedHashMap'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='indexPaths' nillable='false' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='pivotDirections' nillable='true' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='indexDirections' nillable='true' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='start' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='limit' nillable='false' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetItemsPivotIndex' type='tns:WSGetItemsPivotIndex'/>
 <xsd:complexType name='WSGetChildrenItems'>
  <xsd:annotation>
   <xsd:documentation>
                Get children items
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='clusterName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='PKXpaths' nillable='false' type='tns:WSStringArray'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='FKXpath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='labelXpath' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='fatherPK' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='start' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='limit' nillable='false' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetChildrenItems' type='tns:WSGetChildrenItems'/>
 <xsd:complexType name='WSCount'>
  <xsd:annotation>
   <xsd:documentation>
				Counts the number of occurrences of the count path matching the whereItem
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='countPath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='whereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCount' type='tns:WSCount'/>
 <xsd:complexType name='WSQuickSearch'>
  <xsd:annotation>
   <xsd:documentation>
				Quick searches on the searchable elements of the view
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsViewPK' nillable='false' type='tns:WSViewPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='searchedValue' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='maxItems' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='skip' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='matchAllWords' nillable='false' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='orderBy' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='direction' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSQuickSearch' type='tns:WSQuickSearch'/>
 <!-- *****************************************************
		P U T    I T E M		
		*******************************************************-->
 <xsd:complexType name='WSPutItem'>
  <xsd:annotation>
   <xsd:documentation>
				Puts an item in the xml storage.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xmlString' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element default='false' maxOccurs='1' minOccurs='0' name='isUpdate' nillable='false' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItem' type='tns:WSPutItem'/>
 <xsd:complexType name='WSUpdateMetadataItem'>
  <xsd:annotation>
   <xsd:documentation>
                Update an item&apos;s metadata in the xml storage.
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='taskId' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSUpdateMetadataItem' type='tns:WSUpdateMetadataItem'/>
 <xsd:complexType name='WSPartialPutItem'>
  <xsd:annotation>
   <xsd:documentation>
				Partial Puts an item in the xml storage.
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='xml' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='datacluster' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='pivot' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='datamodel' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='keyXPath' nillable='false' type='xsd:string'/>
   <xsd:element default='-1' maxOccurs='1' minOccurs='0' name='startingPosition' nillable='false' type='xsd:int'/>
   <xsd:element default='false' maxOccurs='1' minOccurs='0' name='overwrite' nillable='false' type='xsd:boolean'/>
   <xsd:element default='false' maxOccurs='1' minOccurs='1' name='report' nillable='false' type='xsd:boolean'/>
   <xsd:element default='false' maxOccurs='1' minOccurs='0' name='source' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPartialPutItem' type='tns:WSPartialPutItem'/>
 <xsd:complexType name='WSPutItemByOperatorType'>
  <xsd:annotation>
   <xsd:documentation>
                Puts an item in the xml storage.
            </xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xmlString' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataModelPK' nillable='false' type='tns:WSDataModelPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='operatortype' nillable='false' type='tns:WSOperatorType'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItemByOperatorType' type='tns:WSPutItemByOperatorType'/>
 <xsd:simpleType name='WSOperatorType'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='UPDATE'/>
   <xsd:enumeration value='INSERT'/>
   <xsd:enumeration value='DELETE'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:element name='WSOperatorType' type='tns:WSOperatorType'/>
 <xsd:complexType name='WSPutItemArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsPutItem' nillable='true' type='tns:WSPutItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItemArray' type='tns:WSPutItemArray'/>
 <xsd:complexType name='WSUpdateItemArrayMetadata'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsUpdateMetadataItem' nillable='true' type='tns:WSUpdateMetadataItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSUpdateItemArrayMetadata' type='tns:WSUpdateItemArrayMetadata'/>
 <xsd:complexType name='WSUpdateReportItemPOJO'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='path' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='newValue' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='oldValue' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSUpdateReportItemPOJO' type='tns:WSUpdateReportItemPOJO'/>
 <xsd:complexType name='WSUpdateReportItemArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsUpdateReportItemPOJO' nillable='true' type='tns:WSUpdateReportItemPOJO'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSUpdateReportItemArray' type='tns:WSUpdateReportItemArray'/>
 <xsd:complexType name='WSPutItemWithReport'>
  <xsd:annotation>
   <xsd:documentation>
				Puts an item in the xml storage with update report
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsPutItem' nillable='false' type='tns:WSPutItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='source' nillable='false' type='xsd:string'/>
   <xsd:element default='true' maxOccurs='1' minOccurs='0' name='invokeBeforeSaving' nillable='false' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItemWithReport' type='tns:WSPutItemWithReport'/>
 <xsd:complexType name='WSPutItemWithCustomReport'>
  <xsd:annotation>
   <xsd:documentation>
				Puts an item in the xml storage with custom update report
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsPutItemWithReport' nillable='false' type='tns:WSPutItemWithReport'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='user' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItemWithCustomReport' type='tns:WSPutItemWithCustomReport'/>
 <xsd:complexType name='WSPutItemWithReportArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsPutItem' nillable='true' type='tns:WSPutItemWithReport'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutItemWithReportArray' type='tns:WSPutItemWithReportArray'/>
 <xsd:complexType name='WSIsItemModifiedByOther'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItem' nillable='true' type='tns:WSItem'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSIsItemModifiedByOther' type='tns:WSIsItemModifiedByOther'/>
 <!-- *****************************************************
		             D E L E T E     I T E M S
		*******************************************************-->
 <xsd:complexType name='WSDeleteItem'>
  <xsd:annotation>
   <xsd:documentation>
				Deletes an item based on its cluster pk and its key(s)
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='override' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='withReport' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='source' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='invokeBeforeDeleting' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteItem' type='tns:WSDeleteItem'/>
 <xsd:complexType name='WSDeleteItemWithReport'>
  <xsd:annotation>
   <xsd:documentation>
				Deletes an item based on its cluster pk and its key(s) with report
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='source' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='operateType' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='updatePath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='user' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='invokeBeforeSaving' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='pushToUpdateReport' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='override' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteItemWithReport' type='tns:WSDeleteItemWithReport'/>
 <xsd:complexType name='WSDeleteItems'>
  <xsd:annotation>
   <xsd:documentation>
				Deletes items of a concept based on a query
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsWhereItem' nillable='true' type='tns:WSWhereItem'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='spellTreshold' nillable='false' type='xsd:int'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='override' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteItems' type='tns:WSDeleteItems'/>
 <xsd:complexType name='WSDropItem'>
  <xsd:annotation>
   <xsd:documentation>
				Drop an item to items trash
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='partPath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='override' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='withReport' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='source' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='invokeBeforeDeleting' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDropItem' type='tns:WSDropItem'/>
 <!-- *****************************************************
		D I R E C T   Q U E R Y
		** !!! Use of this is fast but dangerous and makes !!!
		** !!! code non portable accross xml servers         !!!
		*******************************************************-->
 <xsd:complexType name='WSRunQuery'>
  <xsd:annotation>
   <xsd:documentation>
				Runs an xQuery on the XML DB in the revision ID, the Query is run from the DataCluster at the head
				The Data Cluster can be null to run cross-cluster queries
				** !!! Use of this is fast but dangerous and makes !!!
				** !!! code non portable accross xml servers         !!!
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='true' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='query' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='parameters' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRunQuery' type='tns:WSRunQuery'/>
 <!-- *****************************************************
		C O N N E C T O R
		*******************************************************-->
 <xsd:complexType name='WSBase64KeyValue'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='key' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='base64StringValue' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:simpleType name='WSConnectorFunction'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='GET_STATUS'/>
   <xsd:enumeration value='START'/>
   <xsd:enumeration value='STOP'/>
   <xsd:enumeration value='PULL'/>
   <xsd:enumeration value='PUSH'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSConnectorInteraction'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='JNDIName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='function' nillable='true' type='tns:WSConnectorFunction'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='parameters' nillable='true' type='tns:WSBase64KeyValue'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSConnectorInteraction' type='tns:WSConnectorInteraction'/>
 <xsd:simpleType name='WSConnectorResponseCode'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='OK'/>
   <xsd:enumeration value='STOPPED'/>
   <xsd:enumeration value='ERROR'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSConnectorInteractionResponse'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='code' nillable='true' type='tns:WSConnectorResponseCode'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='parameters' nillable='true' type='tns:WSBase64KeyValue'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSConnectorInteractionResponse' type='tns:WSConnectorInteractionResponse'/>
 <!-- *****************************************************
		ROUTING RULE 
		*******************************************************-->
 <xsd:simpleType name='WSRoutingRuleOperator'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='CONTAINS'/>
   <xsd:enumeration value='MATCHES'/>
   <xsd:enumeration value='STARTSWITH'/>
   <xsd:enumeration value='EQUALS'/>
   <xsd:enumeration value='NOT_EQUALS'/>
   <xsd:enumeration value='GREATER_THAN'/>
   <xsd:enumeration value='GREATER_THAN_OR_EQUAL'/>
   <xsd:enumeration value='LOWER_THAN'/>
   <xsd:enumeration value='LOWER_THAN_OR_EQUAL'/>
   <xsd:enumeration value='IS_NULL'/>
   <xsd:enumeration value='IS_NOT_NULL'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSRoutingRuleExpression'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='0' name='name' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='xpath' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='wsOperator' nillable='true' type='tns:WSRoutingRuleOperator'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='value' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:complexType name='WSRoutingRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='synchronous' nillable='false' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='concept' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='serviceJNDI' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='parameters' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsRoutingRuleExpressions' nillable='true' type='tns:WSRoutingRuleExpression'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='condition' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='deactive' nillable='true' type='xsd:boolean'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='executeOrder' nillable='true' type='xsd:int'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRoutingRule' type='tns:WSRoutingRule'/>
 <xsd:complexType name='WSRoutingRulePK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRoutingRulePK' type='tns:WSRoutingRulePK'/>
 <xsd:complexType name='WSRoutingRuleArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsRoutingRules' nillable='true' type='tns:WSRoutingRule'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRoutingRuleArray' type='tns:WSRoutingRuleArray'/>
 <xsd:complexType name='WSRoutingRulePKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsRoutingRulePKs' nillable='true' type='tns:WSRoutingRulePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRoutingRulePKArray' type='tns:WSRoutingRulePKArray'/>
 <!-- Operations -->
 <xsd:complexType name='WSPutRoutingRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsRoutingRule' nillable='false' type='tns:WSRoutingRule'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutRoutingRule' type='tns:WSPutRoutingRule'/>
 <xsd:complexType name='WSGetRoutingRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsRoutingRulePK' nillable='false' type='tns:WSRoutingRulePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetRoutingRule' type='tns:WSGetRoutingRule'/>
 <xsd:complexType name='WSExistsRoutingRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsRoutingRulePK' nillable='false' type='tns:WSRoutingRulePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsRoutingRule' type='tns:WSExistsRoutingRule'/>
 <xsd:complexType name='WSDeleteRoutingRule'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsRoutingRulePK' nillable='false' type='tns:WSRoutingRulePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteRoutingRule' type='tns:WSDeleteRoutingRule'/>
 <xsd:complexType name='WSGetRoutingRulePKs'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetRoutingRulePKs' type='tns:WSGetRoutingRulePKs'/>
 <!-- *****************************************************
		SERVICES
		*******************************************************-->
 <xsd:simpleType name='WSServiceActionCode'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='START'/>
   <xsd:enumeration value='STOP'/>
   <xsd:enumeration value='STATUS'/>
   <xsd:enumeration value='EXECUTE'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:element name='WSServiceActionCode' type='tns:WSServiceActionCode'/>
 <xsd:complexType name='WSServicesList'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='Item'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='jndiName' nillable='false' type='xsd:string'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSServicesList' type='tns:WSServicesList'/>
 <!-- ******************** A C T I O N S************************* -->
 <xsd:complexType name='WSGetServicesList'>
  <xsd:annotation>
   <xsd:documentation>
				Returns the list of available Services in a WSServicesList 
				that provides their JNDI Name 
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='language' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetServicesList' type='tns:WSGetServicesList'/>
 <xsd:complexType name='WSServiceAction'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jndiName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsAction' nillable='false' type='tns:WSServiceActionCode'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='methodName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='methodParameters' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSServiceAction' type='tns:WSServiceAction'/>
 <xsd:complexType name='WSServicePutConfiguration'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jndiName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='configuration' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSServicePutConfiguration' type='tns:WSServicePutConfiguration'/>
 <xsd:complexType name='WSServiceGetConfiguration'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jndiName' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='optionalParameter' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSServiceGetConfiguration' type='tns:WSServiceGetConfiguration'/>
 <xsd:complexType name='WSServiceGetDocument'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='configure' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='document' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='configureSchema' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='defaultConfig' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSServiceGetDocument' type='tns:WSServiceGetDocument'/>
 <!-- *****************************************************
		Stored Procedures
		*******************************************************-->
 <xsd:complexType name='WSStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='procedure' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='refreshCache' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSStoredProcedure' type='tns:WSStoredProcedure'/>
 <xsd:complexType name='WSStoredProcedurePK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSStoredProcedurePK' type='tns:WSStoredProcedurePK'/>
 <xsd:complexType name='WSRegexStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRegexStoredProcedure' type='tns:WSRegexStoredProcedure'/>
 <xsd:complexType name='WSStoredProcedurePKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsStoredProcedurePK' nillable='false' type='tns:WSStoredProcedurePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSStoredProcedurePKArray' type='tns:WSStoredProcedurePKArray'/>
 <xsd:complexType name='WSGetStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsStoredProcedurePK' nillable='false' type='tns:WSStoredProcedurePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetStoredProcedure' type='tns:WSGetStoredProcedure'/>
 <xsd:complexType name='WSExistsStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsStoredProcedurePK' nillable='false' type='tns:WSStoredProcedurePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsStoredProcedure' type='tns:WSExistsStoredProcedure'/>
 <xsd:complexType name='WSPutStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsStoredProcedure' nillable='false' type='tns:WSStoredProcedure'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutStoredProcedure' type='tns:WSPutStoredProcedure'/>
 <xsd:complexType name='WSDeleteStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsStoredProcedurePK' nillable='false' type='tns:WSStoredProcedurePK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteStoredProcedure' type='tns:WSDeleteStoredProcedure'/>
 <xsd:complexType name='WSExecuteStoredProcedure'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsStoredProcedurePK' nillable='false' type='tns:WSStoredProcedurePK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='true' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='parameters' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExecuteStoredProcedure' type='tns:WSExecuteStoredProcedure'/>
 <xsd:complexType name='WSGetStoredProcedurePKs'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetStoredProcedurePKs' type='tns:WSGetStoredProcedurePKs'/>
 <!-- *****************************************************
		Menus
		*******************************************************-->
 <xsd:complexType name='WSMenu'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='name' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='description' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='menuEntries' nillable='false' type='tns:WSMenuEntry'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMenu' type='tns:WSMenu'/>
 <xsd:complexType name='WSMenuEntry'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='id' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='descriptions' nillable='false'>
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element maxOccurs='1' minOccurs='1' name='language' nillable='false' type='xsd:string'/>
      <xsd:element maxOccurs='1' minOccurs='1' name='label' nillable='false' type='xsd:string'/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>
   <xsd:element maxOccurs='1' minOccurs='1' name='context' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='application' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='0' name='icon' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='subMenus' nillable='false' type='tns:WSMenuEntry'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMenuEntry' type='tns:WSMenuEntry'/>
 <xsd:complexType name='WSMenuPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='pk' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMenuPK' type='tns:WSMenuPK'/>
 <xsd:complexType name='WSMenuPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsMenuPK' nillable='false' type='tns:WSMenuPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMenuPKArray' type='tns:WSMenuPKArray'/>
 <xsd:complexType name='WSGetMenu'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsMenuPK' nillable='false' type='tns:WSMenuPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetMenu' type='tns:WSGetMenu'/>
 <xsd:complexType name='WSExistsMenu'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsMenuPK' nillable='false' type='tns:WSMenuPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSExistsMenu' type='tns:WSExistsMenu'/>
 <xsd:complexType name='WSPutMenu'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsMenu' nillable='false' type='tns:WSMenu'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPutMenu' type='tns:WSPutMenu'/>
 <xsd:complexType name='WSDeleteMenu'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsMenuPK' nillable='false' type='tns:WSMenuPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDeleteMenu' type='tns:WSDeleteMenu'/>
 <xsd:complexType name='WSGetMenuPKs'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetMenuPKs' type='tns:WSGetMenuPKs'/>
 <!-- *****************************************************
		Dropped Item
		*******************************************************-->
 <xsd:complexType name='WSDroppedItem'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDataClusterPK' nillable='false' type='tns:WSDataClusterPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='uniqueId' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conceptName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='ids' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='partPath' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='insertionUserName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='insertionTime' nillable='true' type='xsd:long'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='projection' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDroppedItem' type='tns:WSDroppedItem'/>
 <xsd:complexType name='WSDroppedItemPK'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsItemPK' nillable='false' type='tns:WSItemPK'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='partPath' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='revisionId' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDroppedItemPK' type='tns:WSDroppedItemPK'/>
 <xsd:complexType name='WSDroppedItemPKArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='1' name='wsDroppedItemPK' nillable='false' type='tns:WSDroppedItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDroppedItemPKArray' type='tns:WSDroppedItemPKArray'/>
 <xsd:complexType name='WSFindAllDroppedItemsPKs'>
  <xsd:annotation>
   <xsd:documentation>
				Find all dropped items in items trash
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='regex' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSFindAllDroppedItemsPKs' type='tns:WSFindAllDroppedItemsPKs'/>
 <xsd:complexType name='WSLoadDroppedItem'>
  <xsd:annotation>
   <xsd:documentation>
				Load a dropped item from items trash
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDroppedItemPK' nillable='false' type='tns:WSDroppedItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSLoadDroppedItem' type='tns:WSLoadDroppedItem'/>
 <xsd:complexType name='WSRecoverDroppedItem'>
  <xsd:annotation>
   <xsd:documentation>
				Recover a dropped item from items trash
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDroppedItemPK' nillable='false' type='tns:WSDroppedItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRecoverDroppedItem' type='tns:WSRecoverDroppedItem'/>
 <xsd:complexType name='WSRemoveDroppedItem'>
  <xsd:annotation>
   <xsd:documentation>
				Remove a dropped item from items trash
			</xsd:documentation>
  </xsd:annotation>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='wsDroppedItemPK' nillable='false' type='tns:WSDroppedItemPK'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSRemoveDroppedItem' type='tns:WSRemoveDroppedItem'/>
 <xsd:simpleType name='WSGetUniverseByRevisionType'>
  <xsd:restriction base='xsd:NMTOKEN'>
   <xsd:enumeration value='ITEM'/>
   <xsd:enumeration value='OBJECT'/>
  </xsd:restriction>
 </xsd:simpleType>
 <xsd:complexType name='WSGetUniverseByRevision'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='namepattern' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='revision' nillable='false' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='type' nillable='false' type='tns:WSGetUniverseByRevisionType'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSGetUniverseByRevision' type='tns:WSGetUniverseByRevision'/>
 <xsd:complexType name='WSMDMConfig'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='serverName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='serverPort' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='userName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='password' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xdbDriver' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xdbID' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='xdbUrl' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='isupurl' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMDMConfig' type='tns:WSMDMConfig'/>
 <xsd:complexType name='WSCheckServiceConfigRequest'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jndiName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='conf' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCheckServiceConfigRequest' type='tns:WSCheckServiceConfigRequest'/>
 <xsd:complexType name='WSCheckServiceConfigResponse'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='checkResult' nillable='true' type='xsd:boolean'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCheckServiceConfigResponse' type='tns:WSCheckServiceConfigResponse'/>
 <xsd:complexType name='WSMDMNULL'>
  <xsd:sequence>
   <xsd:element maxOccurs='0' minOccurs='0' name='mdmjob' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMDMNULL' type='tns:WSMDMNULL'/>
 <xsd:complexType name='WSPUTMDMJob'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobVersion' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSPUTMDMJob' type='tns:WSPUTMDMJob'/>
 <xsd:complexType name='WSDELMDMJob'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobVersion' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSDELMDMJob' type='tns:WSDELMDMJob'/>
 <xsd:complexType name='WSMDMJob'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobName' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='jobVersion' nillable='true' type='xsd:string'/>
   <xsd:element maxOccurs='1' minOccurs='1' name='suffix' nillable='true' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMDMJob' type='tns:WSMDMJob'/>
 <xsd:complexType name='WSMDMJobArray'>
  <xsd:sequence>
   <xsd:element maxOccurs='unbounded' minOccurs='0' name='wsMDMJob' nillable='false' type='tns:WSMDMJob'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSMDMJobArray' type='tns:WSMDMJobArray'/>
 <xsd:complexType name='WSCategoryData'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='categorySchema' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSCategoryData' type='tns:WSCategoryData'/>
 <xsd:complexType name='WSAutoIncrement'>
  <xsd:sequence>
   <xsd:element maxOccurs='1' minOccurs='1' name='autoincrement' nillable='false' type='xsd:string'/>
  </xsd:sequence>
 </xsd:complexType>
 <xsd:element name='WSAutoIncrement' type='tns:WSAutoIncrement'/>
</xsd:schema>