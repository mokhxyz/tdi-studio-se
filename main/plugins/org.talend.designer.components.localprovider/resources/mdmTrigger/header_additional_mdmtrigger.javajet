<%@ jet 
	package="org.talend.designer.codegen.translators.common"
	imports="
		java.util.List
		java.util.Vector
		
		org.talend.core.model.process.INode
		org.talend.core.model.process.IProcess
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"	
	class="Header_additional" 
%>
	
<%
boolean withMDMTrigger = false;

CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
Vector v = (Vector) codeGenArgument.getArgument();
IProcess process = (IProcess)v.get(0);

List<? extends INode> tMDMTriggerInputList = process.getNodesOfType("tMDMTriggerInput");
List<? extends INode> tMDMTriggerOutputList = process.getNodesOfType("tMDMTriggerOutput");

if((tMDMTriggerInputList != null && tMDMTriggerInputList.size() > 0) || (tMDMTriggerOutputList != null && tMDMTriggerOutputList.size() > 0)){
	withMDMTrigger = true;
}

if(withMDMTrigger){
%>	
	
	
	// These fields are defined for "MDM triggers"  
	private routines.system.Document MDMOutputMessage = null;

	public org.dom4j.Document getMDMOutputMessage() {
		if(this.MDMOutputMessage != null)
			return this.MDMOutputMessage.getDocument();
		else
			return null;
	}

	private routines.system.Document MDMInputMessage = null;

	public void setMDMInputMessage(org.dom4j.Document message) {
		if(message != null)
			this.MDMInputMessage.setDocument(message);
	}

	public void setMDMInputMessage(String message) throws org.dom4j.DocumentException {
		try {
			this.MDMInputMessage = ParserUtils.parseTo_Document(message);
		} catch (org.dom4j.DocumentException e) {
			throw new org.dom4j.DocumentException(e);
		}
	}

	// End of MDM trigger fields

<%
}
%>