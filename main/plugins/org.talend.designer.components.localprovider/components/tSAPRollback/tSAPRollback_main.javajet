<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();

    String cid = node.getUniqueName();

    String connection = ElementParameterParser.getValue(node, "__CONNECTION__");

    boolean close = ("true").equals(ElementParameterParser.getValue(node,"__CLOSE__"));
	
    String conn = "conn_" + connection;
    
    
    String VERSION_SAP3 = "sapjco3.jar";
    
    String version = VERSION_SAP3;
    List<? extends INode> nodes = node.getProcess().getGeneratingNodes();
    for(INode targetNode : nodes){
    	if (targetNode.getUniqueName().equals(connection)) {
	      version = ElementParameterParser.getValue(targetNode, "__DB_VERSION__");
	    }
    }
    
%>
<%if(VERSION_SAP3.equals(version)){%>
	com.sap.conn.jco.JCoDestination dest_<%=cid%> = (com.sap.conn.jco.JCoDestination)globalMap.get("<%=conn%>");
<%	
	INode connectionNode = null; 
	for (INode processNode : node.getProcess().getGeneratingNodes()) { 
		if(connection.equals(processNode.getUniqueName())) { 
			connectionNode = processNode; 
			break; 
		} 
	} 
	boolean specify_alias = "true".equals(ElementParameterParser.getValue(connectionNode, "__SPECIFY_DATASOURCE_ALIAS__"));
	if(specify_alias){
		String alias = ElementParameterParser.getValue(connectionNode, "__SAP_DATASOURCE_ALIAS__");
		if(null != alias && !("".equals(alias))){
%>
			if(dest_<%=cid%> == null){
				dest_<%=cid%> = com.sap.conn.jco.JCoDestinationManager.getDestination(<%=alias%>);
			}
<%
		}
	}
%>
	if(dest_<%=cid%> != null)
	{
		com.sap.conn.jco.JCoRepository repository_<%=cid %> = dest_<%=cid%>.getRepository();
		
		com.sap.conn.jco.JCoFunctionTemplate functionTemplate_<%=cid %> = repository_<%=cid %>.getFunctionTemplate("BAPI_TRANSACTION_ROLLBACK");
		
		com.sap.conn.jco.JCoFunction function_<%=cid %> = functionTemplate_<%=cid %>.getFunction();
		
		try{
			function_<%=cid %>.execute(dest_<%=cid%>);
		}catch (java.lang.Exception e_<%=cid%>) {
			com.sap.conn.jco.JCoContext.end(dest_<%=cid%>);
		    throw new RuntimeException(e_<%=cid%>.getMessage());
		}
		
		<%if(close){%>
		com.sap.conn.jco.JCoContext.end(dest_<%=cid%>);
		<%}%>
	}
<%} else {%>
	org.talend.sap.ISAPConnection connection_<%=cid%> = (org.talend.sap.ISAPConnection)globalMap.get("<%=conn%>");
<%
	INode connectionNode = null; 
	for (INode processNode : node.getProcess().getGeneratingNodes()) { 
		if(connection.equals(processNode.getUniqueName())) { 
			connectionNode = processNode; 
			break; 
		} 
	} 
	boolean specify_alias = "true".equals(ElementParameterParser.getValue(connectionNode, "__SPECIFY_DATASOURCE_ALIAS__"));
	if(specify_alias){
		String alias = ElementParameterParser.getValue(connectionNode, "__SAP_DATASOURCE_ALIAS__");
		if(null != alias && !("".equals(alias))){
%>
			if(connection_<%=cid%> == null){
				connection_<%=cid%> = ((org.talend.sap.impl.SAPConnectionFactory)(org.talend.sap.impl.SAPConnectionFactory.getInstance())).createConnection(<%=alias%>);
			}
<%
		}
	}
%>
	if(connection_<%=cid%>!=null && connection_<%=cid%>.isAlive()) {
		org.talend.sap.ISAPTransaction transaction_<%=cid%> = connection_<%=cid%>.getTransaction();
		if(transaction_<%=cid%>!=null && transaction_<%=cid%>.isAlive()) {
			try {
	     		transaction_<%=cid%>.rollback();
	    	} catch (org.talend.sap.exception.SAPException e_<%=cid%>) {
	    		connection_<%=cid%>.close();
	    		throw new RuntimeException(e_<%=cid%>.getMessage());
		    }
		}
		
		<%if(close){%>
		connection_<%=cid%>.close();
		<%} else {//begin a new transaction for next commit or rollback%>
		connection_<%=cid%>.beginTransaction();
		<%}%>
	}
<%}%>