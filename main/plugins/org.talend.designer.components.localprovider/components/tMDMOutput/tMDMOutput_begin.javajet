<%@ jet 
imports="
        org.talend.core.model.process.INode
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.codegen.config.CodeGeneratorArgument
        "
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/LogUtil.javajet"%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
LogUtil logUtil = new LogUtil(node);
String cid = node.getUniqueName();
String destination = ElementParameterParser.getValue(node, "__DESTINATION__");
if(destination!=null && !"".equals(destination)){
    cid = destination;
}

boolean useExistingConn = ("true").equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));
String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
String conn = "TMDMService_" + connection;
String trans = "mdmTrans_" + connection;
String mdmUrl = ElementParameterParser.getValue(node, "__MDMURL__");
String username = ElementParameterParser.getValue(node, "__USERNAME__");

String dataModel = ElementParameterParser.getValue(node, "__DATAMODEL__");
String dataCluster = ElementParameterParser.getValue(node, "__DATACLUSTER__");
boolean isStaging = "STAGING".equalsIgnoreCase(ElementParameterParser.getValue(node, "__CONTAINER_TYPE__"));
boolean isProvisioning = "\"PROVISIONING\"".equalsIgnoreCase(dataCluster);

boolean withReport = ("true").equals(ElementParameterParser.getValue(node,"__WITHREPORT__"));
boolean isMassInsert =("true").equals(ElementParameterParser.getValue(node,"__EXTENDINSERT__"));

boolean addTaskID = ("true").equals(ElementParameterParser.getValue(node,"__ADD_TASKID__"));
boolean usePartialUpdate = ("true").equals(ElementParameterParser.getValue(node,"__USE_PARTIAL_UPDATE__"));
boolean usePartialDelete = ("true").equals(ElementParameterParser.getValue(node,"__PARTIAL_DELETE__"));
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>
int nb_line_<%=cid %> = 0;
int nb_line_rejected_<%=cid %> = 0;
<%if(!usePartialUpdate){%>
    
    <%if(addTaskID){%>
        class Util_<%=cid %>{
            public org.talend.mdm.webservice.WSUpdateMetadataItem makeUpdateMeteItm(String taskID,org.talend.mdm.webservice.WSItemPK wspk){
                org.talend.mdm.webservice.WSUpdateMetadataItem wsUpdateMetadataItem = new org.talend.mdm.webservice.WSUpdateMetadataItem();
                wsUpdateMetadataItem.setTaskId(taskID);
                wsUpdateMetadataItem.setWsItemPK(wspk);
                return wsUpdateMetadataItem;
            }
            public org.talend.mdm.webservice.WSUpdateMetadataItem[] makeUpdateMeteItms(java.util.List<String> taskIDs,org.talend.mdm.webservice.WSItemPK[] wspks){
                java.util.List<org.talend.mdm.webservice.WSUpdateMetadataItem> wsUpdateMetadataItems = new java.util.ArrayList<org.talend.mdm.webservice.WSUpdateMetadataItem>();
                int i = 0;
                for(org.talend.mdm.webservice.WSItemPK wspk : wspks){
                    wsUpdateMetadataItems.add(makeUpdateMeteItm(taskIDs.get(i),wspk));
                    i++;
                }
                return wsUpdateMetadataItems.toArray(new org.talend.mdm.webservice.WSUpdateMetadataItem[wsUpdateMetadataItems.size()]);
            }
        }
        Util_<%=cid %> util_<%=cid %> = new Util_<%=cid %>();
    <%}%>
    <%if(isMassInsert){
        if(!isStaging && withReport){%>
            <% logUtil.debug("\"Put item with report to MDM server.\"");%>
            java.util.List <org.talend.mdm.webservice.WSPutItemWithReport> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItemWithReport>();
    <%    }else{%>
            <% logUtil.debug("\"Put item to staging data.\"");%>
            java.util.List <org.talend.mdm.webservice.WSPutItem> miList_<%=cid %> = new java.util.ArrayList<org.talend.mdm.webservice.WSPutItem>();
    <%
        }
        if(addTaskID){
    %>
            java.util.List<String> taskIDs_<%=cid %> = new java.util.ArrayList<String>();
    <%
        }
    }
}%>

<%if(!useExistingConn){%>
    String murl_<%=cid %> = <%=mdmUrl %>;
    if(murl_<%=cid %>.endsWith("?wsdl")) {
       murl_<%=cid %> = murl_<%=cid %>.substring(0, murl_<%=cid %>.length() - 5);
    }

    <% logUtil.debug("\"Initializing web service from URL: \" + murl_" + cid);%>
    org.talend.mdm.webservice.TMDMService_Service service_service_<%=cid %> = new org.talend.mdm.webservice.TMDMService_Service(null);
    org.talend.mdm.webservice.TMDMService service_<%=cid %> = service_service_<%=cid %>.getTMDMPort();
    javax.xml.ws.BindingProvider stub_<%=cid %> = (javax.xml.ws.BindingProvider) service_<%=cid %>;
    java.util.Map<String, Object> context_<%=cid %> = stub_<%=cid %>.getRequestContext();
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.SESSION_MAINTAIN_PROPERTY, false);
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, <%=username %>);
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, murl_<%=cid %>);
    <% String passwordFieldName = "__PASSWORD__"; %>
    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.PASSWORD_PROPERTY, decryptedPassword_<%=cid %>);
<%}else if(isProvisioning){%>
    String murl_<%=cid %> = (String)globalMap.get("mdmUrl_<%=connection %>");
    if(murl_<%=cid %>.endsWith("?wsdl")) {
        murl_<%=cid %> = murl_<%=cid %>.substring(0, murl_<%=cid %>.length() - 5);
    }
    String username_<%=cid%> = (String)globalMap.get("username_<%=connection %>");
    String password_<%=cid%> = (String)globalMap.get("password_<%=connection %>");

    <% logUtil.debug("\"Initializing web service from URL: \" + murl_" + cid);%>
    org.talend.mdm.webservice.TMDMService_Service service_service_<%=cid %> = new org.talend.mdm.webservice.TMDMService_Service(null);
    org.talend.mdm.webservice.TMDMService service_<%=cid %> = service_service_<%=cid %>.getTMDMPort();
    javax.xml.ws.BindingProvider stub_<%=cid %> = (javax.xml.ws.BindingProvider) service_<%=cid %>;
    java.util.Map<String, Object> context_<%=cid %> = stub_<%=cid %>.getRequestContext();
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.SESSION_MAINTAIN_PROPERTY, false);
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, murl_<%=cid %>);
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, username_<%=cid %>);
    context_<%=cid %>.put(javax.xml.ws.BindingProvider.PASSWORD_PROPERTY, password_<%=cid %>);
<%}else{%>
    String connKey_<%=cid %> = "<%=conn%>_" + Thread.currentThread().getThreadGroup().getName();
    String transKey_<%=cid %> = "<%=trans%>_" + Thread.currentThread().getThreadGroup().getName();
    org.talend.mdm.webservice.TMDMService service_<%=cid %> = (org.talend.mdm.webservice.TMDMService)globalMap.get(connKey_<%=cid %>);
    if(service_<%=cid %> == null){
        String murl_<%=cid %> = (String)globalMap.get("mdmUrl_<%=connection %>");
        if(murl_<%=cid %>.endsWith("?wsdl")) {
            murl_<%=cid %> = murl_<%=cid %>.substring(0, murl_<%=cid %>.length() - 5);
        }
        String username_<%=cid%> = (String)globalMap.get("username_<%=connection %>");
        String password_<%=cid%> = (String)globalMap.get("password_<%=connection %>");

        <% logUtil.debug("\"Initializing web service from URL: \" + murl_" + cid);%>
        org.talend.mdm.webservice.TMDMService_Service service_service_<%=cid %> = new org.talend.mdm.webservice.TMDMService_Service(null);
        service_<%=cid %> = service_service_<%=cid %>.getTMDMPort();
        javax.xml.ws.BindingProvider stub_<%=cid %> = (javax.xml.ws.BindingProvider) service_<%=cid %>;
        java.util.Map<String, Object> context_<%=cid %> = stub_<%=cid %>.getRequestContext();
        context_<%=cid %>.put(javax.xml.ws.BindingProvider.SESSION_MAINTAIN_PROPERTY, true);
        context_<%=cid %>.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, murl_<%=cid %>);
        context_<%=cid %>.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, username_<%=cid %>);
        context_<%=cid %>.put(javax.xml.ws.BindingProvider.PASSWORD_PROPERTY, password_<%=cid %>);
        <% logUtil.debug("\"Got service successfully with key=\" + connKey_" + cid);%>

        if((Boolean)globalMap.get("useTransaction_<%=connection %>")) {
            String turl_<%=cid %> = com.talend.mdm.transaction.client.MDMTransactionClient.getMDMTransactionURL(murl_<%=cid %>, true);
            com.talend.mdm.transaction.client.MDMTransaction mdmTransaction_<%=cid %> = (com.talend.mdm.transaction.client.MDMTransaction)globalMap.get(transKey_<%=cid %>);
            if(mdmTransaction_<%=cid %> == null){
                if((Boolean)globalMap.get("useClientTranId_<%=connection %>")){
                    String sessionID_<%=cid%> = com.talend.mdm.transaction.client.MDMTransactionClient.getSessionID(turl_<%=cid%>,username_<%=cid%>,password_<%=cid%>);
                    mdmTransaction_<%=cid %> = new com.talend.mdm.transaction.client.MDMTransaction();
                    mdmTransaction_<%=cid %>.setUrl(turl_<%=cid %>);
                    mdmTransaction_<%=cid %>.setId("<%=cid %>_" + java.util.UUID.randomUUID());
                    mdmTransaction_<%=cid %>.setUsername(username_<%=cid %>);
                    mdmTransaction_<%=cid %>.setPassword(password_<%=cid %>);
                    mdmTransaction_<%=cid %>.setSessionId(sessionID_<%=cid%>);
                }else{
                    <% logUtil.debug("\"Attempt to get a remote transaction from url: \" + murl_" + cid);%>
                    mdmTransaction_<%=cid %> = com.talend.mdm.transaction.client.MDMTransactionClient.newTransaction(turl_<%=cid %>,username_<%=cid %>,password_<%=cid %>);
                }
                java.util.List<org.apache.cxf.headers.Header> soapHeaders_<%=cid %> = new java.util.ArrayList<org.apache.cxf.headers.Header>();
                javax.xml.namespace.QName qName_<%=cid %> = new javax.xml.namespace.QName("http://www.talend.com/mdm", "transaction-id");
                org.apache.cxf.databinding.DataBinding dataBinding_<%=cid %> = new org.apache.cxf.jaxb.JAXBDataBinding(String.class);
                soapHeaders_<%=cid %>.add(new org.apache.cxf.headers.Header(qName_<%=cid %>, mdmTransaction_<%=cid %>.getId(), dataBinding_<%=cid %>));
                context_<%=cid %>.put(org.apache.cxf.headers.Header.HEADER_LIST, soapHeaders_<%=cid %>);

                java.util.Map<String, java.util.List<String>> httpHeaders_<%=cid %> = new java.util.HashMap<String, java.util.List<String>>();
                String cookie_<%=cid %> = com.talend.mdm.transaction.client.MDMTransaction.getStickySession() + "=" + mdmTransaction_<%=cid%>.getSessionId();
                httpHeaders_<%=cid %>.put("Cookie", java.util.Arrays.asList(cookie_<%=cid %>));
                context_<%=cid %>.put(org.apache.cxf.message.Message.PROTOCOL_HEADERS, httpHeaders_<%=cid %>);

                globalMap.put(transKey_<%=cid %>, mdmTransaction_<%=cid %>);
                <% logUtil.debug("\"Got transaction successfully with key=\" + transKey_" + cid);%>
            }
        }
        service_<%=cid %>.ping(new org.talend.mdm.webservice.WSPing());<%//For TDI-26109%>
        globalMap.put(connKey_<%=cid %>, service_<%=cid %>);
    }
<%}%>

org.talend.mdm.webservice.WSDataClusterPK dataCluster_<%=cid %> = new org.talend.mdm.webservice.WSDataClusterPK(<%=dataCluster %> + "<%=isStaging?"#STAGING":""%>");
org.talend.mdm.webservice.WSDataModelPK dataModel_<%=cid %> = new org.talend.mdm.webservice.WSDataModelPK(<%=dataModel %>);

String input_<%=cid %>;

java.util.List<org.talend.mdm.webservice.WSItemPK> wspks_<%=cid %>;
org.talend.mdm.webservice.WSItemPK wspk_<%=cid %>;
