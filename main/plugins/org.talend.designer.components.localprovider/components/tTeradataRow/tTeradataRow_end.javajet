<%@ jet
imports="
			org.talend.core.model.process.INode
			org.talend.designer.codegen.config.CodeGeneratorArgument
			org.talend.core.model.process.ElementParameterParser
		"
%>
<%@ include file="../templates/Log4j/Log4jDBConnUtil.javajet"%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/DBLogUtil.javajet"%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	      dbLog = new DBLogUtil(node);
	String cid = node.getUniqueName();

	String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");

	boolean useTransaction = !("false").equals(ElementParameterParser.getValue(node,"__USE_TRANSACTION__"));
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");

	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	boolean identityInsert = "true".equals(ElementParameterParser.getValue(node, "__IDENTITY_INSERT__"));
	boolean useQueryBanding = "true".equals(ElementParameterParser.getValue(node, "__QUERY_BAND__"));
    if(identityInsert) {
	%>
        stmt_<%=cid %>.execute("SET IDENTITY_INSERT "+ tableName_<%=cid%> +" OFF");
	<%
    }
	%>

<%
	if (usePrepareStatement) {
%>
	pstmt_<%=cid %>.close();
<%
	} else {
%>
	stmt_<%=cid %>.close();
<%
	}
	if(!("true").equals(useExistingConn)) {
		if(useTransaction && !("").equals(commitEvery)&&!("0").equals(commitEvery)){
%>
		if(commitEvery_<%=cid%>>commitCounter_<%=cid%>){

			<%log4jCodeGenerateUtil.commit(node);%>

			commitCounter_<%=cid%>=0;

		}
<%
		}  %>
	<%@ include file="../tTeradataInput/TeradataQueryBandEnd.javajet"%>	
	<%
	   log4jCodeGenerateUtil.close(node);
	}

%>
