<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
	" 
%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
%>
<%@ include file="../templates/Log4j/Log4jFileUtil.javajet"%>
<%
	List<IMetadataTable> metadatas = node.getMetadataList();
	if (metadatas==null || metadatas.isEmpty()) {
		return stringBuffer.toString();
	}

	IMetadataTable metadata = metadatas.get(0);
	if (metadata==null) {
		return stringBuffer.toString();
	}
	
	String filename = ElementParameterParser.getValue(node,"__FILENAME__");
	String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
	String header = ElementParameterParser.getValue(node, "__HEADER__");
	if(("").equals(header)){
		header="0";
	}
	String limit = ElementParameterParser.getValue(node, "__LIMIT__");
	if(("").equals(limit)){
		limit = "-1";
	}
	String footer = ElementParameterParser.getValue(node, "__FOOTER__");
	if(("").equals(footer)){
		footer="0";
	}
	String random = "-1";
	String ran = ElementParameterParser.getValue(node, "__RANDOM__");
	if(("true").equals(ran)){
		random = ElementParameterParser.getValue(node, "__NB_RANDOM__");
		if(("").equals(random)){
			random="0";
		}
	}
	
	String rowSeparator = ElementParameterParser.getValue(node, "__ROWSEPARATOR__");
	String removeEmptyRowFlag =  ElementParameterParser.getValue(node, "__REMOVE_EMPTY_ROW__");
		
	final boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	log4jFileUtil.componentStartInfo(node);
%>
	org.talend.fileprocess.FileInputDelimited fid_<%=cid %> = null;

	<%log4jFileUtil.startRetriveDataInfo();%>

	try{//}
		fid_<%=cid %> =new org.talend.fileprocess.FileInputDelimited(<%=filename %>,<%=encoding %>,"",<%=rowSeparator %>,<%=removeEmptyRowFlag %>,<%=header %>,<%=footer %>,<%=limit %>,<%=random %>,false);
		while (fid_<%=cid %>.nextRecord()) {//}
<%
	List<? extends IConnection> conns = node.getOutgoingSortedConnections();
	
	if (conns==null || conns.isEmpty()) {
		return stringBuffer.toString();
	}
	
	for (int i=0;i<conns.size();i++) {
		IConnection connTemp = conns.get(i);
		if (connTemp.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
			<%=connTemp.getName() %> = null;			
<%
		}
	}
	
	IConnection conn = conns.get(0);
	String firstConnName = conn.getName();
	if (!conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
		return stringBuffer.toString();
	}
%>			
	boolean whetherReject_<%=cid %> = false;
	<%=firstConnName %> = new <%=conn.getName() %>Struct();
<%
	List<IMetadataColumn> listColumns = metadata.getListColumns();
	for (int valueN=0; valueN<listColumns.size(); valueN++) {
		IMetadataColumn column = listColumns.get(valueN);
%>
		<%=firstConnName %>.<%=column.getLabel()%> = fid_<%=cid %>.get(<%=valueN%>);
<%
	}
%>
