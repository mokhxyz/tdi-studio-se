<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		
		java.util.List
		java.util.Map
	" 
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
    String accessKey = ElementParameterParser.getValue(node, "__ACCESS_KEY__");

	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	String bucketName=ElementParameterParser.getValue(node,"__BUCKET__");
	
	String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
	boolean isUseFilesList=("true").equals(ElementParameterParser.getValue(node, "__USE_FILES_LIST__"));
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	List<Map<String, String>> files = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILES__");	
	%>

	int nb_line_<%=cid%> = 0;
	org.jets3t.service.impl.rest.httpclient.GoogleStorageService service_<%=cid%> = null;
	try {
		<%
		if(("true").equals(useExistingConn)) {
			String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
			%>
			service_<%=cid%> = (org.jets3t.service.impl.rest.httpclient.GoogleStorageService)globalMap.get("service_<%=connection%>");
			<%
			if(isLog4jEnabled){
			%>	
				log.info("<%=cid%> - Get an free connection from " + "<%=connection%>" + ".");
			<%
			}
		}else{
		%>
	
	       <%
	       String passwordFieldName = "__SECRET_KEY__";
	       %>
	
		   <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
	
			org.jets3t.service.security.GSCredentials credentials_<%=cid%> = new org.jets3t.service.security.GSCredentials(<%=accessKey%>,decryptedPassword_<%=cid%>);
		
			service_<%=cid%> = new org.jets3t.service.impl.rest.httpclient.GoogleStorageService(credentials_<%=cid%>,jobName+"/"+jobVersion+" (GPN:Talend)",null);
			service_<%=cid%>.getAccountOwner();
		<%		
		}
		%>
		org.talend.gs.util.GSObjectUtil gsUtil_<%=cid%>=new  org.talend.gs.util.GSObjectUtil();
		gsUtil_<%=cid%>.initMimeTypes();
		java.io.File dataDir_<%=cid%>=new java.io.File(<%=localdir%>);
		java.util.List<org.jets3t.service.model.GSObject>objects_<%=cid%> =new java.util.ArrayList<org.jets3t.service.model.GSObject>();
		java.util.List<java.util.Map<String,String>> list_<%=cid %> = new java.util.ArrayList<java.util.Map<String,String>>();	
			
		<%
		if(isUseFilesList && files!=null && files.size()>0){
			for (int i=0; i<files.size(); i++) {
				Map<String, String> line = files.get(i);
				%>    
				java.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();
				map_<%=cid %>_<%=i %>.put(<%= line.get("FILEMASK") %>,<%= line.get("NEWNAME") %>);		
			 	list_<%=cid %>.add(map_<%=cid %>_<%=i %>);       
			<%
			}
			%>
			java.util.Map<String,String> fileMap_<%=cid%>=gsUtil_<%=cid%>.genFileFilterList(list_<%=cid %>, <%=localdir%>, <%=remotedir%>);
			objects_<%=cid%> = gsUtil_<%=cid%>.genObjectByFileMap(fileMap_<%=cid%>);	
		<%
		}else{
		%>
			objects_<%=cid%>=gsUtil_<%=cid%>.genGSObjectList(objects_<%=cid%>, dataDir_<%=cid%>, <%=remotedir%>,true,false);
		<%
		}
		%>
		for(org.jets3t.service.model.GSObject obj_<%=cid%>:objects_<%=cid%>){
			nb_line_<%=cid%> ++;
			service_<%=cid%>.putObject(<%=bucketName%>, obj_<%=cid%>);
		}
	
	}catch(java.lang.Exception e_<%=cid%>) {
		<%
		if (("true").equals(dieOnError)) {
		%>
			throw(e_<%=cid%>);
		<%
		} else {
		%>
			if(e_<%=cid%> instanceof org.jets3t.service.ServiceException){
				org.jets3t.service.ServiceException servError_<%=cid%> = (org.jets3t.service.ServiceException)e_<%=cid%>;
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - Exception in component <%=cid%>:" + servError_<%=cid%>.getMessage());
				<%
				}
				%>
				System.err.println("Exception in component <%=cid%>:");
				System.err.println(servError_<%=cid%>.getMessage());
				if(servError_<%=cid%>.getErrorCode()!=null){
					<%
					if(isLog4jEnabled){
					%>
						log.error("<%=cid%> - " + servError_<%=cid%>.getErrorCode());
					<%
					}
					%>
					System.err.println(servError_<%=cid%>.getErrorCode());
				}
				if(servError_<%=cid%>.getErrorMessage()!=null){
					<%
					if(isLog4jEnabled){
					%>
						log.error("<%=cid%> - " + servError_<%=cid%>.getErrorMessage());
					<%
					}
					%>
					System.err.println(servError_<%=cid%>.getErrorMessage());
				}
	
			}else{
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
				<%
				}
				%>
				System.err.println(e_<%=cid%>.getMessage());
			}
		<%
		}
		if(!("true").equals(useExistingConn)) {
		%>
			}finally{
				if(service_<%=cid%> !=null){
					service_<%=cid%>.shutdown();
				}
		
		<%
		}
		%>
	}
	globalMap.put("<%=cid%>_NB_LINE", nb_line_<%=cid%>);
	