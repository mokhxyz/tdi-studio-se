<%@ jet 
imports="
        java.util.List
        java.util.Map
        java.util.HashMap
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {//1
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {//2

    	List< ? extends IConnection> conns = node.getIncomingConnections();
    	for (IConnection conn : conns) {//3
    		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//4
			
				String action = ElementParameterParser.getValue(node,"__ACTION__");
			    String publicName = ElementParameterParser.getValue(node,"__PUBLICATION_NAME__");
			    
			    List<Map<String, String>> mappingList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MAPPING_OUTPUT__");
    			Map<String,Map<String,String>> paramMapping = new HashMap<String,Map<String,String>>();
    			Map<String,String> fldMapping;
    			for(Map<String,String> outputMapping:mappingList){	
    				fldMapping = new HashMap<String,String>();
    				fldMapping.put("key",outputMapping.get("KEY"));
    				fldMapping.put("gID",outputMapping.get("GROUP_TABLE_ID"));
    				fldMapping.put("fID",outputMapping.get("PARAMETER_NAME"));
    				paramMapping.put(outputMapping.get("SCHEMA_COLUMN"),fldMapping);
    			}
%>
				org.talend.sage.Parameter sageParam_<%=cid%> = client_<%=cid %>.addParameter(<%=publicName%>);			
<%
    			if("update".equals(action) || "delete".equals(action)){
%>
    			java.util.Map<String,String> keyValues_<%=cid%> = new java.util.HashMap<String,String>();
<%
    			}
    			List<IMetadataColumn> columns = metadata.getListColumns();
    			int sizeColumns = columns.size();
    			for (int i = 0; i < sizeColumns; i++) {//5  	
    					
    				IMetadataColumn column = columns.get(i);
					String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
    				JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
    				String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
    				
    				Map<String,String> fieldMapping = paramMapping.get(column.getLabel());

    				if (javaType == JavaTypesManager.DATE && pattern != null && pattern.trim().length() != 0) {//Date
%>
							Object value_<%=column.getLabel()%>_<%=cid%> = FormatterUtils.format_Date(<%=conn.getName() %>.<%=column.getLabel() %>, <%= pattern %>);
<%					
					}else if(javaType == JavaTypesManager.LIST){
%>
							Object value_<%=column.getLabel()%>_<%=cid%> = <%=conn.getName() %>.<%=column.getLabel() %>;
<%					
					}else if(javaType == JavaTypesManager.OBJECT){
%>
							Object value_<%=column.getLabel()%>_<%=cid%> = <%=conn.getName() %>.<%=column.getLabel() %>;
<%
					} else {//others
%>
							Object value_<%=column.getLabel()%>_<%=cid%> = String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>);
<%				
					}

    				if("update".equals(action) || "delete".equals(action)){
    					if("true".equals(fieldMapping.get("key"))){
    					%>
							keyValues_<%=cid%>.put(<%=fieldMapping.get("fID")%>,String.valueOf(value_<%=column.getLabel()%>_<%=cid%>));			
    					<%
    					}
    				}
    				if(!"delete".equals(action)){
%>
    				sageParam_<%=cid%>.setValue(<%=fieldMapping.get("gID")%>,<%=fieldMapping.get("fID")%>,value_<%=column.getLabel()%>_<%=cid%>);
<%
					}
				}
%>

					//System.out.println(sageParam_<%=cid%>.toString());
<%			
				if("insert".equals(action)){
%>
					client_<%=cid %>.insert(<%=publicName%>,sageParam_<%=cid%>.toString());
<%					
				}else if("update".equals(action)){
%>
					client_<%=cid %>.update(<%=publicName%>,client_<%=cid%>.createCAdxKeyValues(keyValues_<%=cid%>),sageParam_<%=cid%>.toString());
<%
				}else if("delete".equals(action)){
%>
					client_<%=cid %>.delete(<%=publicName%>,client_<%=cid%>.createCAdxKeyValues(keyValues_<%=cid%>));
<%					
				}
%>	

<%
			}
		}
	}
}	
%>