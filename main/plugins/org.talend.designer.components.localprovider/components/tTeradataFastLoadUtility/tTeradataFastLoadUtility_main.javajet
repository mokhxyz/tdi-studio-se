<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.lang.StringBuilder
"
%>
<%@ include file="../templates/Log4j/Log4jDBConnUtil.javajet"%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
String dbuser= ElementParameterParser.getValue(node, "__USER__");

String table= ElementParameterParser.getValue(node, "__TABLE__");

String dbhost= ElementParameterParser.getValue(node, "__HOST__");
String scriptPath= ElementParameterParser.getValue(node, "__SCRIPT_PATH__");
String execution= ElementParameterParser.getValue(node, "__EXECUTION__");
String loadFile= ElementParameterParser.getValue(node, "__LOAD_FILE__");
String separator= ElementParameterParser.getValue(node, "__FIELD_SEPARATOR__");
String errorFile= ElementParameterParser.getValue(node, "__ERROR_FILE__");

boolean returnCodeDie= ElementParameterParser.getValue(node, "__RETURN_CODE_DIE__").equals("true");
String returnCode= ElementParameterParser.getValue(node, "__RETURN_CODE__");

String checkPoint= ElementParameterParser.getValue(node, "__CHECK_POINT__");

String errorFiles= ElementParameterParser.getValue(node, "__ERRORFILES__");

String defineCharset = ElementParameterParser.getValue(node, "__DEFINE_CHARSET__");
String charset = ElementParameterParser.getValue(node, "__CHARSET__");

String errLimit = ElementParameterParser.getValue(node, "__ERRLIMIT__");

String tableAction = ElementParameterParser.getValue(node,"__TABLE_ACTION__");

if(!scriptPath.endsWith("/\"")){
    scriptPath = scriptPath+    "+\"/\"";
}
//windows line separator as default
String lineSeparator = "\\r\\n";
if(loadFile.indexOf("/") !=0 && ("Windows").equals(execution)){
    loadFile = loadFile.replaceAll("/", "\\\\\\\\");
}else {
    //Unix line separator
    lineSeparator = "\\n";
}
String dbmsId = "teradata_id";

List<IMetadataColumn> columnList = null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
        columnList = metadata.getListColumns();
    }
}
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>
String tableFullName_<%=cid%> = <%=dbname%> + "." + <%=table%>;
java.io.File file_<%=cid%> = new java.io.File(<%=scriptPath%>+<%=table%>+".script");
java.io.FileWriter fw_<%=cid %> = new java.io.FileWriter(file_<%=cid%>);

<%//build script---------------------------------------------------------%>
try{
StringBuilder script_<%=cid%> = new StringBuilder();
fw_<%=cid %>.write("SESSIONS 8;"+ "<%=lineSeparator%>");
fw_<%=cid %>.write("SET RECORD VARTEXT \""+<%=separator%>+"\";"+ "<%=lineSeparator%>");

<%
String passwordFieldName = "__PASS__";
%>

<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

fw_<%=cid %>.write("LOGON "+<%if(dbhost!=null && !"\"\"".equals(dbhost)){%><%=dbhost%>+"/"+<%}%><%=dbuser%>+","+decryptedPassword_<%=cid%>+";"+ "<%=lineSeparator%>");
<%
if(("CLEAR").equals(tableAction)){
%>
fw_<%=cid %>.write("DELETE FROM "+ <%=dbname%> + "." + <%=table%> + " ALL;"+ "<%=lineSeparator%>");
<%
}
%>
fw_<%=cid %>.write("DEFINE "+ "<%=lineSeparator%>");
<%//Layout---------------------------------------------------------------%>
<%
if(columnList!=null){
    int index = 0;
    for(IMetadataColumn column:columnList){
        if(index != 0){
            %>
               fw_<%=cid %>.write(",");
            <%
        }
            %>
               fw_<%=cid %>.write("<%=column.getOriginalDbColumnName()%>"+" (VARCHAR(<%=column.getLength() == null ? 36 : column.getLength()%>))"+ "<%=lineSeparator%>");
            <%
        index ++;
    }
}
%>
fw_<%=cid %>.write("FILE="+<%=loadFile%>+";"+ "<%=lineSeparator%>");
fw_<%=cid %>.write("BEGIN LOADING "+ <%=dbname%> + "." + <%=table%>+" "+<%=errorFiles%>+" CHECKPOINT <%=checkPoint%>;"+ "<%=lineSeparator%>");
fw_<%=cid %>.write("ERRLIMIT <%=errLimit%>;"+ "<%=lineSeparator%>");
<%//SQL statements-------------------------------------------------------%>
<%
StringBuilder insertColSQL = new StringBuilder();
StringBuilder insertValueSQL = new StringBuilder();
if(columnList!=null){
    String columnName = "";
    for(IMetadataColumn column:columnList){
        columnName= column.getOriginalDbColumnName();
        String talendType = column.getTalendType();
        if(insertColSQL.length()>0){
            insertColSQL.append(",");
        }
        insertColSQL.append(columnName);

        if(insertValueSQL.length()>0){
            insertValueSQL.append(",");
        }
            insertValueSQL.append(":").append(columnName);
        if("id_Date".equals(talendType)){
            insertValueSQL.append(" (Date, Format '").append(column.getPattern().replace("\"","")).append("')");
        }
    }
}
%>
fw_<%=cid %>.write("INSERT INTO "+ <%=dbname%> + "." + <%=table%>+" (<%=insertColSQL.toString()%>) VALUES (<%=insertValueSQL.toString()%>);"+ "<%=lineSeparator%>");
<%//Import file----------------------------------------------------------%>
fw_<%=cid %>.write("END LOADING;"+ "<%=lineSeparator%>");
fw_<%=cid %>.write("LOGOFF;"+ "<%=lineSeparator%>");

<%//write script to file-------------------------------------------------%>
fw_<%=cid %>.close();

<%//run fastload command----------------------------------------------------%>
<%if("true".equals(defineCharset)) {
    if(!("".equals(charset))) {%>
String sb_<%=cid%>= new String("fastload -c "+<%=charset%>+" < \""+<%=scriptPath%>+<%=table%>+".script\" > \""+<%=errorFile%>+"\" 2>&1");
<%}} else {%>
String sb_<%=cid%>= new String("fastload < \""+<%=scriptPath%>+<%=table%>+".script\" > \""+<%=errorFile%>+"\" 2>&1");
<%}%>
<%if(isLog4jEnabled){%>
    log.info("<%=cid%> - Executing '" + sb_<%=cid%> + "'.");
<%}%>
<%if(("Windows").equals(execution)){%>
final Process process_<%=cid %> = Runtime.getRuntime().exec(new String[]{"cmd","/c",sb_<%=cid%>});
<%}else{%>
final Process process_<%=cid %> = Runtime.getRuntime().exec(new String[]{"sh","-c",sb_<%=cid%>});
<%}%>
Thread normal_<%=cid %> = new Thread() {
    public void run() {
        try {
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(process_<%=cid %>.getInputStream()));
            String line = "";
            try {
                while((line = reader.readLine()) != null) {
                   System.out.println(line);
                }
            } finally {
                 reader.close();
            }
        }catch(java.io.IOException ioe) {
            <%log4jCodeGenerateUtil.logError(node,"error","ioe");%>
            ioe.printStackTrace();
        }
    }
};
normal_<%=cid %>.start();

Thread error_<%=cid %> = new Thread() {
    public void run() {
        try {
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(process_<%=cid %>.getErrorStream()));
            String line = "";
            try {
                while((line = reader.readLine()) != null) {
                    System.err.println(line);
                }
            } finally {
                reader.close();
            }
        } catch(java.io.IOException ioe) {
            <%log4jCodeGenerateUtil.logError(node,"error","ioe");%>
           ioe.printStackTrace();
        }
    }
};
error_<%=cid %>.start();

process_<%=cid %>.waitFor();

normal_<%=cid %>.interrupt();

error_<%=cid %>.interrupt();

globalMap.put("<%=cid %>_EXIT_VALUE", process_<%=cid %>.exitValue());

<%
if(returnCodeDie) {
%>
    if(process_<%=cid %>.exitValue()>=<%=returnCode%>) {
        throw new RuntimeException("Fastload returned exit code "+process_<%=cid %>.exitValue());
    }
<%
}
%>

<%if(isLog4jEnabled){%>
    log.info("<%=cid%> - Excute '" + sb_<%=cid%> + "' has finished.");
<%}%>
}finally{
    try{
        file_<%=cid %>.delete();
    }catch(Exception e_<%=cid%>){
        <%log4jCodeGenerateUtil.logError(node,"warn","e_"+cid);%>
    }
}
