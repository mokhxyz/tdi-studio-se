<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	

String operation = ElementParameterParser.getValue(node, "__OPERATION__");
boolean mutipleOperation = ("true").equals(ElementParameterParser.getValue(node,"__MUTIPLE_OPERATION__"));
boolean isMutiple = false;
if(mutipleOperation&&!operation.equals("ISMEMBEROFLIST")){
	isMutiple = true;
}
boolean strict = ("true").equals(ElementParameterParser.getValue(node,"__STRICT__"));

List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {//1
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {//2

    	List< ? extends IConnection> conns = node.getIncomingConnections();
    	for (IConnection conn : conns) {//3
    		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//4
    			boolean useSoapAPI = ("true").equals(ElementParameterParser.getValue(node,"__USE_SOAP_API__"));
				boolean useRestAPI = ("true").equals(ElementParameterParser.getValue(node,"__USE_REST_API__"));
    			if(isMutiple){
    				if(useSoapAPI){
					%>
						if(!leadKeyList_<%=cid%>.isEmpty() && !"".equals(listTypeFlag_<%=cid%>) && !"".equals(listValueFlag_<%=cid%>)){
							try{
								client_<%=cid%>.listOperation("<%=operation%>",listTypeFlag_<%=cid%>,listValueFlag_<%=cid%>,leadKeyList_<%=cid%>.toArray(new com.marketo.www.mktows.LeadKey[leadKeyList_<%=cid%>.size()]),<%=strict%>);
								globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>);	
							}catch(java.lang.Exception ex_<%=cid%>){
								if(ex_<%=cid%> instanceof org.apache.axis.AxisFault){
					    			if(!client_<%=cid%>.isSystemError((org.apache.axis.AxisFault)ex_<%=cid%>)){
										globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>);		
									}
					    		}
								<%
						        if (strict) {
						        %>
						            throw(ex_<%=cid%>);
						        <%
						        } else {
						        %>
						        	System.err.println(ex_<%=cid%>.getMessage());
						        <%
						        }
						        %>
							}
							leadKeyList_<%=cid%>.clear();
						}
					<%
					}
					if(useRestAPI){
					%>
						if(!leadKeyList_<%=cid%>.isEmpty()){
							try{
								client_<%=cid%>.listOperation("<%=operation%>",listIdFlag_<%=cid%>,leadKeyList_<%=cid%>);
								globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>);		
							}catch(java.lang.Exception ex_<%=cid%>){
								/**
									fixed exception
								*/ 
								<%
						        if (strict) {
						        %>
						            throw(ex_<%=cid%>);
						        <%
						        } else {
						        %>
						        	System.err.println(ex_<%=cid%>.getMessage());
						        <%
						        }
						        %>
							}
							leadKeyList_<%=cid%>.clear();
							listIdFlag_<%=cid%> = <%=conn.getName()%>.ListId;
						}
					<%
					}
				}
			}	
		}
	}	
}
%>
	globalMap.put("<%=cid %>_NB_CALL",nb_call_<%=cid%>);     