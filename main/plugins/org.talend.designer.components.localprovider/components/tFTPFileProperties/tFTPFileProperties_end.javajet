<%@ jet 
  imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    org.talend.core.model.process.IConnectionCategory
  "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String ignoreFailureAtQuit= ElementParameterParser.getValue(node,"__IGNORE_FAILURE_AT_QUIT__");
String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
boolean bUseExistingConn = "true".equals(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
boolean sftp = false;
String outputConnName = null;
List< ? extends IConnection> conns = node.getOutgoingSortedConnections();

if (conns != null) {
  if (conns.size() > 0) {
    for (int i = 0; i < conns.size(); i++) {
      IConnection connTemp = conns.get(i);
      if (connTemp.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
        outputConnName = connTemp.getName();
        break;
      }
    }
  }
}

if (outputConnName == null) {
  return "";
}

if (bUseExistingConn) {
  List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();

  for (INode n : nodeList) {
    if (n.getUniqueName().equals(connection)) {
      sftp = ("true").equals(ElementParameterParser.getValue(n, "__SFTP__"));
    }
  }
} else {
  sftp = ("true").equals(ElementParameterParser.getValue(node, "__SFTP__"));
}

if (sftp && !bUseExistingConn) { // *** sftp *** //
%>
	<%if(isLog4jEnabled){%>
		log.info("<%=cid%> - Closing the connection to the server.");
	<%}%>
	session_<%=cid%>.disconnect(); 
	<%if(isLog4jEnabled){%>
		log.info("<%=cid%> - Connection to the server closed.");
	<%}%>  
<%
} else {// *** ftp *** //
	if (!bUseExistingConn) {
    	if (("true").equals(ignoreFailureAtQuit)) {
    %>
			try {
				<%if(isLog4jEnabled){%>
					log.info("<%=cid%> - Closing the connection to the server.");
				<%}%>
    		    ftp_<%=cid %>.quit();
				<%if(isLog4jEnabled){%>
					log.info("<%=cid%> - Connection to the server closed.");
				<%}%>  
			} catch (java.net.SocketException se_<%=cid%>) {
				<%if(isLog4jEnabled){%>
					log.warn("<%=cid%> - " + se_<%=cid%>.getMessage());
				<%}%> 
        	//ignore failure
			}
		<%} else {%>
			<%if(isLog4jEnabled){%>
				log.info("<%=cid%> - Closing the connection to the server.");
			<%}%>
			ftp_<%=cid %>.quit();
			<%if(isLog4jEnabled){%>
				log.info("<%=cid%> - Connection to the server closed.");
			<%}%>  
    <%
		}
  	}
}
%>

