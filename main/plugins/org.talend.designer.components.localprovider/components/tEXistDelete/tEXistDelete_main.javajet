<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
        java.util.Map
	"
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/DBLogUtil.javajet"%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String uri = ElementParameterParser.getValue(node, "__URI__");
	String driver = ElementParameterParser.getValue(node, "__DRIVER__");
	String user = ElementParameterParser.getValue(node, "__USERNAME__");
	String pass = ElementParameterParser.getValue(node, "__PASSWORD__");
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
	String targetType = ElementParameterParser.getValue(node, "__TARGETTYPE__");
	List<Map<String, String>> files = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILES__");
	dbLog = new DBLogUtil(node);
%>
   	java.util.Set<String> keySet_<%=cid%> = map_<%=cid%>.keySet();
  	for(String key_<%=cid%> : keySet_<%=cid%>){
		String filemask_<%=cid%> = key_<%=cid%>; 
		String dir_<%=cid%> = null;	
		String mask_<%=cid%> = filemask_<%=cid%>.replaceAll("\\\\", "/") ;	
		int i_<%=cid%> = mask_<%=cid%>.lastIndexOf('/');
  		if (i_<%=cid%>!=-1){
			dir_<%=cid%> = mask_<%=cid%>.substring(0, i_<%=cid%>); 
			mask_<%=cid%> = mask_<%=cid%>.substring(i_<%=cid%>+1);
		}
		
		mask_<%=cid%> = mask_<%=cid%>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
		final String finalMask_<%=cid%> = mask_<%=cid%>;
<%
		if("RESOURCE".equals(targetType)){
%>
			for(String resourceName_<%=cid%> : col_<%=cid%>.listResources()){
				if(resourceName_<%=cid%>.matches(finalMask_<%=cid%>)){
			        org.xmldb.api.base.Resource resource_<%=cid%> = col_<%=cid%>.getResource(resourceName_<%=cid%>);
			        <% dbLog.info(dbLog.str("Try to remove resource '"),dbLog.var("resourceName"),dbLog.str("'.")); %>
			        col_<%=cid%>.removeResource(resource_<%=cid%>);
			        <% dbLog.info(dbLog.str("The resource removed successed.")); %>
				}
			}
<%
		}else if("COLLECTION".equals(targetType)){
%>
			for(String subCol_<%=cid%> : col_<%=cid%>.listChildCollections()){
				if(subCol_<%=cid%>.matches(finalMask_<%=cid%>)){
					<% dbLog.info(dbLog.str("Try to remove collection '"),dbLog.var("subCol"),dbLog.str("'.")); %>
					mgtService_<%=cid%>.removeCollection(subCol_<%=cid%>);
					<% dbLog.info(dbLog.str("The collection removed successed.")); %>
				}
			}
<%
		}else{
%>
			for(String resourceName_<%=cid%> : col_<%=cid%>.listResources()){
				if(resourceName_<%=cid%>.matches(finalMask_<%=cid%>)){
			        org.xmldb.api.base.Resource resource_<%=cid%> = col_<%=cid%>.getResource(resourceName_<%=cid%>);
			        <% dbLog.info(dbLog.str("Try to remove resource '"),dbLog.var("resourceName"),dbLog.str("'.")); %>
			        col_<%=cid%>.removeResource(resource_<%=cid%>);
			        <% dbLog.info(dbLog.str("The resource removed successed.")); %>
				}
			}
			for(String subCol_<%=cid%> : col_<%=cid%>.listChildCollections()){
				if(subCol_<%=cid%>.matches(finalMask_<%=cid%>)){
					<% dbLog.info(dbLog.str("Try to remove collection '"),dbLog.var("subCol"),dbLog.str("'.")); %>
					mgtService_<%=cid%>.removeCollection(subCol_<%=cid%>);
					<% dbLog.info(dbLog.str("The collection removed successed.")); %>
				}
			}
<%
		}
%>
		nb_file_<%=cid%>++;
 
    }
