<%@ jet
	imports="
	java.util.List
	org.talend.core.model.metadata.IMetadataTable
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>
<%@ include file="../templates/Log4j/Log4jFileUtil.javajet"%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));

	boolean useExistingConnection = "true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"));


	String sServer = ElementParameterParser.getValue(node, "__SERVER__");
	String sServerport = ElementParameterParser.getValue(node, "__SERVERPORT__");
	String sUsername = ElementParameterParser.getValue(node, "__USERNAME__");


	String sDatabaseName = ElementParameterParser.getValue(node,"__DATABASE__");
	String sCubeName = ElementParameterParser.getValue(node,"__CUBE__");

	 //String sMeasureColumn= ElementParameterParser.getValue(node,"__MEASURE_COLUMN__");

    String sDeploypalolibs = ElementParameterParser.getValue(node, "__DEPLOY_PALO_LIBS__");
    boolean bDeploypalolibs=false;
    if(sDeploypalolibs.equals("true"))bDeploypalolibs=true;

%>

	org.talend.jpalo.palo p_<%=cid %> = null;
	org.talend.jpalo.paloconnection pConn_<%=cid %> = null;

<%
	if(useExistingConnection){
		String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
		String p = "p_" + connection;
		String pConn = "pConn_" + connection;

%>
		// Use Existing
		p_<%=cid %> = (org.talend.jpalo.palo)globalMap.get("<%=p%>");
		pConn_<%=cid %> =  (org.talend.jpalo.paloconnection)globalMap.get("<%=pConn%>");
		<%if(isLog4jEnabled){%>
			if(pConn_<%=cid %>!=null) {
				log.info("<%=cid%> - Uses an existing connection.");  
			}
		<%}%>
<%
	}else{
%>
		// Initialize jpalo
		p_<%=cid %> = new org.talend.jpalo.palo(<%=bDeploypalolibs%>);
		// Open the connection
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection attempt to '" + <%=sServer%> + "' with the username '" + <%=sUsername%> + "'.");
		<%}%>
	        
		<%
		String passwordFieldName = "__PASS__";
		%>
		
		<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>
	   	
		pConn_<%=cid %> = p_<%=cid %>.connect(<%=sUsername%>, decryptedPassword_<%=cid%>, <%=sServer%>, <%=sServerport%>);
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection to '" + <%=sServer%> + "' has succeeded.");
		<%}%>
<%
	}
%>

	org.talend.jpalo.palodatabases pDBs_<%=cid %> = pConn_<%=cid %>.getDatabases();
	org.talend.jpalo.palodatabase pDB_<%=cid %>= pDBs_<%=cid %>.getDatabase(<%=sDatabaseName%>);
	org.talend.jpalo.palocube pCB_<%=cid %> = pDB_<%=cid %>.getCubes(org.talend.jpalo.palocubes.CUBE_NORMAL).getCube(<%=sCubeName%>);

<%
	String strInputConnectionName="";
	List< ? extends IConnection> conns = node.getIncomingConnections();
 	if(conns!=null){
		if (conns.size()>0){
                IConnection conn =conns.get(0);
		    strInputConnectionName=conn.getName();
		}
	}

	if(strInputConnectionName.length()>0){
		List<IMetadataTable> metadatas = node.getMetadataList();
		if ((metadatas!=null)&&(metadatas.size()>0)) {
			IMetadataTable metadata = metadatas.get(0);
			if (metadata!=null) {

%>
				List<String>[] lsElements_<%=cid %>;
				List<String>[] lsElementsReplace_<%=cid %>;
				org.talend.jpalo.palodimensions pDIMs_<%=cid %> = pCB_<%=cid %>.getDimensions();
				lsElements_<%=cid %> = new List[pCB_<%=cid %>.getDimensions().getNumberOfDimensions()];
				for(int i=0;i<pDIMs_<%=cid %>.getNumberOfDimensions();i++){
					org.talend.jpalo.palodimension pDIM_<%=cid %> = pDIMs_<%=cid %>.getDimension(i);
					lsElements_<%=cid %>[i] = new java.util.ArrayList<String>();
					for(org.talend.jpalo.paloelement pELM_<%=cid %> : pDIM_<%=cid %>.getElements().getElements()){
						lsElements_<%=cid %>[i].add(pELM_<%=cid %>.getName());
					}
				}
<%
			}
		}
	}	
%>
	int iNbOfCheckedRows_<%=cid %> = 0;
	boolean bRejectRow_<%=cid %> = false;
	StringBuilder sbErrorText_<%=cid %> = new StringBuilder();
	int iErrorCounter_<%=cid %> = 0;
