<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
%>

<%
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
	IMetadataTable metadata = metadatas.get(0);
	if (metadata!=null) {   	
    	String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
        String delim1 = ElementParameterParser.getValue(node, "__FIELDSEPARATOR__");
        String delim = delim1.substring(1,delim1.length()-1);
        String port = ElementParameterParser.getValue(node,"__PORT__");
        String host = ElementParameterParser.getValue(node,"__HOST__");
        String retry = ElementParameterParser.getValue(node,"__RETRY__");
        String timeout = ElementParameterParser.getValue(node,"__TIMEOUT__");
        boolean compress = ("true").equals(ElementParameterParser.getValue(node,"__COMPRESS__"));
        boolean dieOnError = ("true").equals(ElementParameterParser.getValue(node,"__DIE_ON_ERROR__"));
%>    
<% if(compress){%>
class Compress{
    public byte[] zip(byte[] data) throws java.io.IOException {
        java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
        java.util.zip.ZipEntry ze = new java.util.zip.ZipEntry("servletservice");
        java.util.zip.ZipOutputStream zos = new java.util.zip.ZipOutputStream(baos);
        zos.putNextEntry(ze);
        zos.write(data, 0, data.length);
        zos.close();
        byte[] zipBytes = baos.toByteArray();
        return zipBytes;
    }
   
}
Compress com<%=cid%> = new Compress();
<%}%>

java.net.Socket socket<%=cid%> = null;
int nb_line_<%=cid%> = 0;
boolean retry<%=cid%> = true;

for(int i=0;i<<%=retry%>-1;i++){
    if(retry<%=cid%>){
        try{
            socket<%=cid%> = new java.net.Socket(<%=host%>,<%=port%>);
            retry<%=cid%> = false;
        }catch(java.net.ConnectException e<%=cid%>){
            Thread.sleep(<%=timeout%>);
        }
    }
}
    
com.talend.csv.CSVWriter CsvWriter<%=cid%> = 
   new com.talend.csv.CSVWriter(
      new java.io.BufferedWriter(new java.io.OutputStreamWriter(socket<%=cid%>.getOutputStream(),<%=encoding%>)));
CsvWriter<%=cid%>.setSeparator('<%=delim%>');  
<%    	
	}
}
%>
