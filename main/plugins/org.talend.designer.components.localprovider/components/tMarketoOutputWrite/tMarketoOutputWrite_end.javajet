<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.Map
	   	org.talend.core.model.process.IConnection    
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.process.EConnectionType
		org.talend.core.model.utils.NodeUtil
		" 
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName().replace("_Out","");
	String operation = ElementParameterParser.getValue(node, "__OPERATION__");
	boolean deDupenabled = ("true").equals(ElementParameterParser.getValue(node,"__DE_DUPENABLED__"));
	boolean dieOnError = ("true").equals(ElementParameterParser.getValue(node,"__DIE_ON_ERROR__"));
	boolean useSoapAPI = ("true").equals(ElementParameterParser.getValue(node,"__USE_SOAP_API__"));
	boolean useRestAPI = ("true").equals(ElementParameterParser.getValue(node,"__USE_REST_API__"));
	if(useSoapAPI){
		if("syncMultipleLeads".equals(operation)){
		%>
			if(leadRecordList_<%=cid%>.size()>0){
				com.marketo.www.mktows.LeadRecord[] leadRecords_<%=cid%> = leadRecordList_<%=cid%>.toArray(new com.marketo.www.mktows.LeadRecord[leadRecordList_<%=cid%>.size()]);
				try{
					com.marketo.www.mktows.ResultSyncMultipleLeads syncLeads_<%=cid%> = client_<%=cid%>.syncMultipleLeads(<%=deDupenabled%>,leadRecords_<%=cid%>);
					statusList_<%=cid%>.add(syncLeads_<%=cid%>.getSyncStatusList());
					globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>); 	
				}catch(java.lang.Exception ex_<%=cid%>){
					if(ex_<%=cid%> instanceof org.apache.axis.AxisFault){
		    			if(!client_<%=cid%>.isSystemError((org.apache.axis.AxisFault)ex_<%=cid%>)){
							globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>);		
						}
		    		}
					<%
			        if (dieOnError) {
			        %>
			            throw(ex_<%=cid%>);
			        <%
			        } else {
			        %>
			        	System.err.println(ex_<%=cid%>.getMessage());
			        <%
			        }
			        %>
				}
				leadRecordList_<%=cid%>.clear();
			}
		<%
		}
	}
	if(useRestAPI){
		String operationType = ElementParameterParser.getValue(node,"__OPERATION_TYPE__");
		String lookupField = ElementParameterParser.getValue(node,"__LOOKUP_FIELD__");
		if(deDupenabled){
			operationType = null;
			lookupField = null;
		}else{
			operationType = "\""+operationType+"\"";
			lookupField = "\""+lookupField+"\"";
		}
		if("syncMultipleLeads".equals(operation)){
		%>
			if(leadRecordList_<%=cid%>.size()>0){
				while(true){
					try{
						org.talend.marketo.response.ResultSync syncLeads_<%=cid%> = client_<%=cid%>.syncMultipleLeads(<%=operationType%>,<%=lookupField%>,leadRecordList_<%=cid%>,false,null);
						if(client_<%=cid%>.isAccessTokenExpired(syncLeads_<%=cid%>.getErrors())){
		            		client_<%=cid%>.refreshToken();
		            		globalMap.put("<%=cid %>_NB_CALL",++nb_call_<%=cid%>);
		            		continue;
		            	}
						if(syncLeads_<%=cid%>.getErrors() == null){
		            		statusList_<%=cid%>.add(syncLeads_<%=cid%>.getResult());
		            	}else{
		            		throw(new java.lang.Exception(syncLeads_<%=cid%>.getErrors().toString()));
		            	}
					 }catch(java.lang.Exception ex_<%=cid%>){
						<%
				        if (dieOnError) {
				        %>
				            throw(ex_<%=cid%>);
				        <%
				        } else {
				        %>
				        	System.err.println(ex_<%=cid%>.getMessage());
				        <%
				        }
				        %>
					}
					leadRecordList_<%=cid%>.clear();
					break;
				}
			}
		<%
		}
	}
	%> 
	
	globalMap.put("<%=cid %>_NB_CALL",nb_call_<%=cid%>);
	globalMap.put("<%=cid %>_STATUS_LIST",statusList_<%=cid%>);

