<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		java.util.Map
		java.util.List
" 
%>
	<%@ include file="../templates/DB/Input/HelpClass.javajet"%>
<%

	class DBInputBeginUtil extends DefaultDBInputUtil{
	    
		public void setURL(INode node) {
			
%>
			String url_<%=cid %> = "jdbc:netezza://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;
<%
		}
		
		public String getDirverClassName(INode node){
			return "org.netezza.Driver";
		}
		
		public void createConnection(INode node) {
			super.createConnection(node);
			String useCursor= ElementParameterParser.getValue(node, "__USE_CURSOR__");
			if(("true").equals(useCursor)) { 
				log4jCodeGenerateUtil.autoCommit(node,false);
			}
		}
		
		public void createStatement(INode node) {
			super.createStatement(node);
			String useCursor= ElementParameterParser.getValue(node, "__USE_CURSOR__");
			String cursorSize= ElementParameterParser.getValue(node, "__CURSOR_SIZE__");
            if(("true").equals(useCursor)) {
%>
                stmt_<%=cid %>.setFetchSize(<%=cursorSize %>);
<%
            }
		}
		
		public void generateTimestampResultSet(String firstConnName, IMetadataColumn column, int currentColNo) {
			String dbType = "Timestamp";
			if("TIME".equalsIgnoreCase(column.getType())){
				dbType = "Time";
			}
%>
			if(rs_<%=cid %>.get<%=dbType%>(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>) != null) {
				<%=firstConnName%>.<%=column.getLabel()%> = new java.util.Date(rs_<%=cid %>.get<%=dbType%>(<%if(isDynamic){%>column_index_<%=cid%><%}else{%><%=currentColNo%><%}%>).getTime());
			} else {
				<%=firstConnName%>.<%=column.getLabel()%> =  null;
			}			 
<%
		}
		//-----------according schema type to generate ResultSet
	    
	    //---------end according schema type to generate ResultSet
	}//end class
	
	dbInputBeginUtil = new DBInputBeginUtil();
%>
    
	<%@ include file="../templates/DB/Input/AbstractDBInputBegin.javajet"%>
