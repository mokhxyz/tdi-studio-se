<%@ jet 
	imports="
	    org.talend.core.model.process.INode 
	    org.talend.core.model.process.ElementParameterParser 
	    org.talend.designer.codegen.config.CodeGeneratorArgument
	    java.util.Map
	    java.util.List
	" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();

	String cid = node.getUniqueName();
	boolean useExistingConnection = "true".equals(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
	String accountName = ElementParameterParser.getValue(node, "__ACCESS_KEY__");
	String accountSecret = ElementParameterParser.getValue(node, "__SECRET_KEY__");
	String protocol = ElementParameterParser.getValue(node, "__PROTOCOL__");
	
	String container = ElementParameterParser.getValue(node, "__CONTAINER__");
	String blobName = ElementParameterParser.getValue(node, "__BLOB_NAME__");
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
	List<Map<String, String>> remoteBlobs = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__REMOTE_BLOBS__");
	
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>
	try {
<%
		if(useExistingConnection) {
			String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
%>
			com.microsoft.windowsazure.services.core.storage.CloudStorageAccount myAzureStorageAccount_<%=cid%> = (com.microsoft.windowsazure.services.core.storage.CloudStorageAccount)globalMap.get("connection_" + "<%=connection%>");
<%
			if(isLog4jEnabled) {
%>
			log.info("<%=cid%> - Get the existed cloud storage account object from <%=connection%>.");
<%
			}
		} else {
%>
			String myAzureStorageConn_<%=cid%> = "DefaultEndpointsProtocol=<%=protocol.toLowerCase()%>;" + "AccountName=" + <%=accountName%> + ";" + "AccountKey=" + <%=accountSecret%>;
			// Retrieve storage account from connection-string
			com.microsoft.windowsazure.services.core.storage.CloudStorageAccount myAzureStorageAccount_<%=cid%> = com.microsoft.windowsazure.services.core.storage.CloudStorageAccount.parse(myAzureStorageConn_<%=cid%>);
<%
			if(isLog4jEnabled) {
%>
			log.info("<%=cid%> - Create the cloud storage account object successfully.");
<%
			}
%>
			globalMap.put("<%=cid%>_ACCOUNT_NAME", <%=accountName%>);
			globalMap.put("<%=cid%>_ACCOUNT_KEY", <%=accountSecret%>);
<%
		}
%>
		java.util.List<java.util.Map<String,Object>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,Object>>();
<%	
		for(int i=0;i<remoteBlobs.size();i++){
			Map<String, String> map=remoteBlobs.get(i);
			String prefix =map.get("PREFIX");
			boolean include ="true".equals(map.get("INCLUDE"));
%>
			java.util.Map<String,Object> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,Object>();
			map_<%=cid %>_<%=i %>.put("PREFIX",<%=prefix%>);
			map_<%=cid %>_<%=i %>.put("INCLUDE",<%=include%>);	
			list_<%=cid%>.add(map_<%=cid %>_<%=i %>);
<%
		}
%>
		// Create the blob client
		com.microsoft.windowsazure.services.blob.client.CloudBlobClient blobClient_<%=cid%> = myAzureStorageAccount_<%=cid%>.createCloudBlobClient();
	
		// Retrieve reference to a previously created container
		com.microsoft.windowsazure.services.blob.client.CloudBlobContainer container_<%=cid%> = blobClient_<%=cid%>.getContainerReference(<%=container%>);
		globalMap.put("<%=cid%>_CONTAINER", <%=container%>);
		for (java.util.Map<String, Object> map_<%=cid %>: list_<%=cid%>) {
			String currentPrefix_<%=cid%> = (String)map_<%=cid%>.get("PREFIX");
			boolean currentDoesInclude_<%=cid%> = (Boolean) map_<%=cid%>.get("INCLUDE");
			java.lang.Iterable<com.microsoft.windowsazure.services.blob.client.ListBlobItem> blobList_<%=cid%> = container_<%=cid%>.listBlobs(currentPrefix_<%=cid%>, currentDoesInclude_<%=cid%>, null, null, null);
			for (com.microsoft.windowsazure.services.blob.client.ListBlobItem blobItem_<%=cid%> : blobList_<%=cid%>) {
				if(blobItem_<%=cid%> instanceof com.microsoft.windowsazure.services.blob.client.CloudBlob) {
					com.microsoft.windowsazure.services.blob.client.CloudBlob blob_<%=cid%> = (com.microsoft.windowsazure.services.blob.client.CloudBlob) blobItem_<%=cid%>;
					globalMap.put("<%=cid%>_CURRENT_BLOB", blob_<%=cid%>.getName());
					<%if(isLog4jEnabled) {%>
					log.info("<%=cid%> - The current blob : " + blob_<%=cid%>.getName());
	  				<%}%>
				} else {
					break;
				}
