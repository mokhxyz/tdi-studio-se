<%@ jet 
	imports="
	    org.talend.core.model.process.INode 
	    org.talend.core.model.process.ElementParameterParser 
	    org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();

	String cid = node.getUniqueName();
	boolean useExistingConnection = "true".equals(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
	String accountName = ElementParameterParser.getValue(node, "__ACCESS_KEY__");
	String accountSecret = ElementParameterParser.getValue(node, "__SECRET_KEY__");
	String protocol = ElementParameterParser.getValue(node, "__PROTOCOL__");
	
	String container = ElementParameterParser.getValue(node, "__CONTAINER__");
	String blobName = ElementParameterParser.getValue(node, "__BLOB_NAME__");
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
	
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	
%>
			}
		}
	} catch (java.lang.Exception e_<%=cid%>) {
<%
		if (dieOnError) {
%>
			throw(e_<%=cid%>);
<%
		} else {
			if(isLog4jEnabled) {
%>
			log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
<%
			}
%>
			System.err.println(e_<%=cid%>.getMessage());
<%
		}
%>
	}