<%@ jet 
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();

    String cid = node.getUniqueName();
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	String accountName = ElementParameterParser.getValue(node, "__ACCESS_KEY__");
	String accountSecret = ElementParameterParser.getValue(node, "__SECRET_KEY__");
	String protocol = ElementParameterParser.getValue(node, "__PROTOCOL__");
	String containerName=ElementParameterParser.getValue(node,"__CONTAINER__");
	
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
%>
	boolean containerExist_<%=cid%> = false;
	try {
<%
	if(("true").equals(useExistingConn)) {
		String azure_connection = ElementParameterParser.getValue(node,"__CONNECTION__");
%>
		com.microsoft.windowsazure.services.core.storage.CloudStorageAccount azureStorageAccount_<%=cid%> = (com.microsoft.windowsazure.services.core.storage.CloudStorageAccount)globalMap.get("connection_" + "<%=azure_connection%>");
<%
		if(isLog4jEnabled) {
%>
		log.info("<%=cid%> - Get the existed cloud storage account object from <%=azure_connection%>.");
<%
		}
	}else{
%>
		String myAzureStorageConn_<%=cid%> = "DefaultEndpointsProtocol=<%=protocol.toLowerCase()%>;" + "AccountName=" + <%=accountName%> + ";" + "AccountKey=" + <%=accountSecret%>;
		com.microsoft.windowsazure.services.core.storage.CloudStorageAccount azureStorageAccount_<%=cid%> = com.microsoft.windowsazure.services.core.storage.CloudStorageAccount.parse(myAzureStorageConn_<%=cid%>);
<%
		if(isLog4jEnabled) {
%>
		log.info("<%=cid%> - Create the cloud storage account object successfully.");
<%
		}
	}
%>
	com.microsoft.windowsazure.services.blob.client.CloudBlobClient blobClient_<%=cid%> = azureStorageAccount_<%=cid%>.createCloudBlobClient();
	com.microsoft.windowsazure.services.blob.client.CloudBlobContainer blobContainer_<%=cid%> = blobClient_<%=cid%>.getContainerReference(<%=containerName%>);
	
	containerExist_<%=cid%> = blobContainer_<%=cid%>.exists();
<%
	if(isLog4jEnabled) {
%>
		if(containerExist_<%=cid%>) {
			log.info("<%=cid%> - The container already exists.");
		} else {
			log.info("<%=cid%> - The container doesn't exist.");
		}
<%
	}
%>

	}catch(com.microsoft.windowsazure.services.core.storage.StorageException e_<%=cid%>) {
<%
		if (("true").equals(dieOnError)) {
%>
		throw(e_<%=cid%>);
<%
		} else {
			if(isLog4jEnabled) {
%>
			log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
<%
			}
%>
		System.err.println("Exception in component <%=cid%>:");
		System.err.println(e_<%=cid%>.getMessage());
		if(e_<%=cid%>.getErrorCode()!=null){
			System.err.println(e_<%=cid%>.getErrorCode());
		}
		if(e_<%=cid%>.getMessage()!=null){
			System.err.println(e_<%=cid%>.getExtendedErrorInformation());
		}
<%
		}
		
%>
	}
	
	globalMap.put("<%=cid%>_CONTAINER", <%=containerName%>);
	globalMap.put("<%=cid%>_CONTAINER_EXIST", containerExist_<%=cid%>);