<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.EConnectionType
    java.util.List
    java.util.Set
    java.util.HashSet
" 
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
String incomingConnName = null;
Set<String> incomingColumns = new HashSet<String>();
List<? extends IConnection> incomingConns = node.getIncomingConnections();
if(incomingConns != null && incomingConns.size() > 0) {
    for(IConnection incomingConn : incomingConns) {
        if(incomingConn.getLineStyle().equals(EConnectionType.FLOW_MAIN)) {
            incomingConnName = incomingConn.getName();
            IMetadataTable inputMetadataTable = incomingConn.getMetadataTable();
            List<IMetadataColumn> inputSchema = inputMetadataTable.getListColumns();
            if(inputSchema != null && inputSchema.size() > 0) {
                for(IMetadataColumn column : inputSchema) {
                    incomingColumns.add(column.getLabel());
                }
            }
            break;
        }
    }
}

//feature9001 get the ouput cid
INode previousNode = null;
String previousCID = null;
String dataAction = null;
if(incomingConns != null && incomingConns.size() > 0 && incomingConns.get(0) != null) {
	IConnection connection = incomingConns.get(0);
	previousNode = connection.getSource();
	previousCID = previousNode.getUniqueName();
	dataAction = ElementParameterParser.getValue(previousNode,"__DATA_ACTION__");
}
//end feature9001 get the ouput cid
if ( previousNode != null && ("INSERT").equals(dataAction)) {
	List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
	if(outgoingConns != null && outgoingConns.size() > 0) {
	    for(IConnection outgoingConn : outgoingConns) {
	        if(outgoingConn.getLineStyle().equals(EConnectionType.FLOW_MAIN)) {
	            IMetadataTable outputMetadataTable = outgoingConn.getMetadataTable();
	            List<IMetadataColumn> outputSchema = outputMetadataTable.getListColumns();
	            if(outputSchema != null && outputSchema.size() > 0) {
	                for(IMetadataColumn column : outputSchema) {
	                    if(incomingColumns.contains(column.getLabel())) {
	                        %>
	                        <%=outgoingConn.getName()%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
	                        <%
	                    }
	                }
	                %>
	                java.sql.ResultSet rs_<%=cid %> = pstmt_<%=previousCID %>.getGeneratedKeys();
	                if(rs_<%=cid %>.next()) {
	                    <%=outgoingConn.getName() %>.last_insert_id = rs_<%=cid %>.getInt(1);
	                }
	                nb_line_<%=cid%>++;
	                <%
	            }
	        }
	    }
	}
} else {
%>
	// when tAS400Output Action on data is Insert this component is active.
<%
}
%>




