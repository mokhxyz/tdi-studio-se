<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
    	org.talend.core.model.process.ElementParameterParser		
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
	"
%>
<%@ include file="../templates/Log4j/Log4jFileUtil.javajet"%> 
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {
    
    	boolean flushOnRow = ("true").equals(ElementParameterParser.getValue(node, "__FLUSHONROW__"));
    	
    	String flushMod = ElementParameterParser.getValue(node, "__FLUSHONROW_NUM__");
    	
        String encoding = ElementParameterParser.getValue(node,"__ENCODING__");    	
        
    	boolean setDbmoney = ("true").equals(ElementParameterParser.getValue(node,"__SET_DBMONEY__"));
    	String decimalSeparator = ElementParameterParser.getValueWithJavaType(node, "__DECIMAL_SEPARATOR__", JavaTypesManager.CHARACTER);
        
        String datePattern = ElementParameterParser.getValue(node,"__DATE_FORMAT__");
        datePattern = datePattern.split(",")[0];
        String datePatternCustom = ElementParameterParser.getValue(node,"__DATE_FORMAT_CUSTOM__");                
        if ("CUSTOM".equals(datePattern))
        	datePattern = datePatternCustom.substring(1,datePatternCustom.length()-1);
        
    	List< ? extends IConnection> conns = node.getIncomingConnections();
        	if(conns!=null){
        		if (conns.size()>0){
        		    IConnection conn =conns.get(0);
            		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
            			List<IMetadataColumn> columns = metadata.getListColumns();
                		int sizeColumns = columns.size();
            			%>  	
                    	String[] row_<%=cid%>=new String[]{<%for(int j=0;j<sizeColumns;j++){%>null,<%}%>};
                    	<%
            			for (int i = 0; i < sizeColumns; i++) {
                			IMetadataColumn column = columns.get(i);
                			JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
                			//String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
                			if(JavaTypesManager.isJavaPrimitiveType( column.getTalendType(), column.isNullable())){
                			
                				if(javaType == JavaTypesManager.BOOLEAN ){
                				%>
                					row_<%=cid%>[<%=i%>] = String.valueOf(
                							true == <%=conn.getName() %>.<%=column.getLabel() %> ?"t":"f"
                							);
                				<%
                				} else {
                			    %>
                			    	row_<%=cid%>[<%=i%>] = String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>);
                			    <%
                			    }
                			}else {
                			    %>
                			    if(<%=conn.getName() %>.<%=column.getLabel() %> != null){
                			        <%					
                			        if(setDbmoney && javaType == JavaTypesManager.BIGDECIMAL ){
                			            %>
                			            row_<%=cid%>[<%=i%>] = FormatterUtils.format_Number(String.valueOf(<%=column.getPrecision() == null? conn.getName() + "." + column.getLabel() : conn.getName() + "." + column.getLabel() + ".setScale(" + column.getPrecision() + ", java.math.RoundingMode.HALF_UP)" %>), null, <%= decimalSeparator %>);
                			            <%
                			        }else if(setDbmoney && javaType == JavaTypesManager.FLOAT ){
                			            %>
                			            row_<%=cid%>[<%=i%>] = FormatterUtils.format_Number(String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>), null, <%= decimalSeparator %>);
                			            <%
                			        }else if(javaType == JavaTypesManager.DATE){
                			            %>
                			            row_<%=cid%>[<%=i%>] = FormatterUtils.format_Date(<%=conn.getName() %>.<%=column.getLabel() %>, "<%= datePattern %>");
                			            <%
                			        }else if(javaType == JavaTypesManager.BOOLEAN){
                			            %>
                			            row_<%=cid%>[<%=i%>] = (<%=conn.getName() %>.<%=column.getLabel() %>==true ? "t" : "f");
                			            <%
                			        }else{
                			            %>
                			            row_<%=cid%>[<%=i%>] = String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>);
                			            
                			            <%
                			        }
                			        %>                			    
                			    }
                		 <% 
                			}
            			} 

            			%>
            			    csvWriter_<%=cid%>.writeNext(row_<%=cid%>);	
            			    <% if(flushOnRow) { %>
        		                if(nb_line_<%=cid %>%<%=flushMod %> == 0) {            			    
            			    		csvWriter_<%=cid%>.flush();
            			    	}	 
            			    <%}%>
            				nb_line_<%=cid %>++;
                            <%if(isLog4jEnabled){%>
                                log.debug("<%=cid%> - Writing the record " + nb_line_<%=cid%> + ".");
                            <%}%>
            			<%   		
            		}
        		
        		}
        	}
    }
}
%>
