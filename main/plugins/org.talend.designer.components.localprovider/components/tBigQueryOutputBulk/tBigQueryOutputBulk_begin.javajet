<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
" 
%>
	<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	List<IMetadataTable> metadatas = node.getMetadataList();
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	if ((metadatas!=null)&&(metadatas.size()>0)) {
	    IMetadataTable metadata = metadatas.get(0);
	    if (metadata!=null) {
	        String filename = ElementParameterParser.getValue(node,"__FILENAME__");
	        
	        String rowSeparator = ElementParameterParser.getValue(node,"__ROWSEPARATOR__");
	        
	        String fieldSeparator = ElementParameterParser.getValue(node,"__FIELDSEPARATOR__");
	        
	        String escapeChar = ElementParameterParser.getValue(node, "__ESCAPE_CHAR__");
	        
	        String textEnclosure = ElementParameterParser.getValue(node, "__TEXT_ENCLOSURE__");
	        
	        String encoding = ElementParameterParser.getValue(node,"__ENCODING__");
	        
	        boolean checkDiskSpace = ("true").equals(ElementParameterParser.getValue(node,"__CHECK_DISK_SPACE__"));
	        
	        boolean isAppend = ("true").equals(ElementParameterParser.getValue(node,"__APPEND__"));
	        
	        boolean isCreateDir = ("true").equals(ElementParameterParser.getValue(node,"__CREATE__"));
	        
	        boolean containNULL = "true".equalsIgnoreCase(ElementParameterParser.getValue(node,"__RECORDS_CONTAIN_NULL_VALUE__"));
			%>
			int nb_line_<%=cid%> = 0;
			String rowSeparator_<%=cid %> = <%=rowSeparator.length()==0||("").equals(rowSeparator)?"\"\\n\"" : rowSeparator %>;
			String fieldSeparator_<%=cid %> = <%=fieldSeparator.length()==0||("").equals(fieldSeparator)?"\",\"" : fieldSeparator %>;
			char escapeChar_<%=cid %> = <%=escapeChar.length()==0||("").equals(escapeChar)?"'\\\\'" : escapeChar + ".charAt(0)"%>;
			char textEnclosure_<%=cid %> = <%=textEnclosure.length()==0||("").equals(textEnclosure)?"'\"'" : textEnclosure + ".charAt(0)"%>;
			
			<%
			if (containNULL) {//bug 7978 if input have a empty value,tMysqloutputbulk output "\N" instance of "" 
			%>
				escapeChar_<%=cid %> = textEnclosure_<%=cid %>;
			<%
			}
			%>
			if(escapeChar_<%=cid %>=='\\'){
			}else if(escapeChar_<%=cid %> == textEnclosure_<%=cid %>){
			}else {
				throw new RuntimeException("The escape mode only support the '\\' or double text enclosure.");
			}
					
			java.io.File file_<%=cid %> = new java.io.File(<%=filename %>);		
			<%
			if(isCreateDir) {
			%>
				<%
				if(isLog4jEnabled){
				%>
					log.info("<%=cid%> - Creating directory for file '" + file_<%=cid%>.getCanonicalPath() +"', if the directory not exist.");
				<%
				}
				%>
				file_<%=cid %>.getParentFile().mkdirs();
			<%
			}
			%>
					
			com.talend.csv.CSVWriter csvWriter_<%=cid%> = new com.talend.csv.CSVWriter(new java.io.BufferedWriter(new java.io.OutputStreamWriter(
			new java.io.FileOutputStream(file_<%=cid %>, <%=isAppend %>), <%=encoding %>)));
			resourceMap.put("csvWriter_<%=cid%>", csvWriter_<%=cid%>);
	        csvWriter_<%=cid%>.setSeparator(fieldSeparator_<%=cid %>.charAt(0));
	        
	        csvWriter_<%=cid %>.setLineEnd(rowSeparator_<%=cid %>);              	
	        csvWriter_<%=cid %>.setEscapeChar(escapeChar_<%=cid %>);      		
	      	csvWriter_<%=cid %>.setQuoteChar(textEnclosure_<%=cid %>); 
	      	csvWriter_<%=cid %>.setQuoteStatus(com.talend.csv.CSVWriter.QuoteStatus.AUTO);        
			<%
			if(checkDiskSpace){
			%>
	      		long diskSpace_<%=cid %> = 0;
			<%
			}
	    }
	}
	%>
