<%@ jet
	imports="
	java.util.List
	java.util.Map
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.process.INode
	org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

	String sDimensionName = ElementParameterParser.getValue(node,"__DIMENSION__");
	// Further usage
	//String sDimensionType = ElementParameterParser.getValue(node,"__DIMENSION_TYPE__")
	String sDimensionType="NORMAL";
	boolean bCreateElements = "true".equals(ElementParameterParser.getValue(node,"__CREATE_ELEMENTS_BASED_ON_INPUT__"));
	boolean bDeleteElements = "true".equals(ElementParameterParser.getValue(node,"__DELETE_ALL_ELEMENTS_BEFORE__"));

	String strSRDimensionElementType = ElementParameterParser.getValue(node,"__ELEMENT_TYPE__");
	String strSRDimensionUpdateMode = ElementParameterParser.getValue(node,"__CREATION_MODE__");

	boolean bHierachieNone = "true".equals(ElementParameterParser.getValue(node,"__HIERACHIE_NONE__"));
	boolean bHierachieNormal = "true".equals(ElementParameterParser.getValue(node,"__HIERACHIE_NORMAL__"));
	boolean bHierachieSelfReferenced = "true".equals(ElementParameterParser.getValue(node,"__SELF_REFERENCED__"));
     
     String sCommitSize = ElementParameterParser.getValue(node,"__COMMIT_SIZE__");

	String strInputConnectionName="";
	List< ? extends IConnection> conns = node.getIncomingConnections();
 	if(conns!=null){
		if (conns.size()>0){
                IConnection con =conns.get(0);
		    strInputConnectionName=con.getName();
		}
	}

	
	List<Map<String, String>> tDimensionElements = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ELEMENT_HIERACHIE__");
	List<Map<String, String>> tDimensionElementsSelfReferenced = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ELEMENT_HIERACHIE_SELFREFERENCED__");

	

	if(bCreateElements && (bHierachieNone || bHierachieNormal) ){
		int iNbOfDimensionElements = tDimensionElements.size();
		StringBuilder sbX=new StringBuilder();
		for(int i=0; i<iNbOfDimensionElements; i++){
			Map<String, String> DimensionElement = tDimensionElements.get(i);
			String strDimensionElement = DimensionElement.get("SOURCE_COLUMN");
			String strDimensionElementType = DimensionElement.get("ELEMENT_TYPE");
			String strDimensionUpdateMode = DimensionElement.get("CREATION_MODE");

			if(i>0) sbX.append(",");
			sbX.append("String.valueOf("+strInputConnectionName+"."+strDimensionElement+")");
		}
		
		for (IConnection conn : conns) {
    		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {    		
    		  
		
		%>
		thPDims_<%=cid %>.addMainInToTransformList(new String[]{<%=sbX.toString()%>});
		iCommitCounter_<%=cid %>++;

		if(iCommitCounter_<%=cid %> > <%=sCommitSize%>){
<%
		//for bug TDI-19242
%>
			thPDims_<%=cid %>.getAllExistPaloDimensionElements(pDIM_<%=cid%>.getElements());
			thPDims_<%=cid %>.buildParentChildRelationShipNormal();
			for(org.talend.jpalo.talendHelpers.tPaloDimensionElements thPElem_<%=cid %> : thPDims_<%=cid %>.getParentChildList()){

				if(thPElem_<%=cid %>.getElementName()!=null){

					switch (thPElem_<%=cid %>.getLevel()){
				<%
						iNbOfDimensionElements = tDimensionElements.size();
						for(int i=0; i<iNbOfDimensionElements; i++){
							Map<String, String> DimensionElement = tDimensionElements.get(i);
							String strDimensionElement = DimensionElement.get("SOURCE_COLUMN");
							String strDimensionElementType = DimensionElement.get("ELEMENT_TYPE");
							String strDimensionUpdateMode = DimensionElement.get("CREATION_MODE");
							if(strDimensionUpdateMode.equals("DELETE")){
				%>
							case <%=i%>:
								pELMs_<%=cid %>.deleteElement(thPElem_<%=cid %>.getElementName());			
							break;
				<%
				
							}else{
				%>
							case <%=i%>:
								//if(pELMs_<%=cid %>.getElement(thPElem_<%=cid %>.getElementName())==null){
								pELMs_<%=cid %>.createElement(thPElem_<%=cid %>.getElementName(),org.talend.jpalo.paloelements.<%=strDimensionElementType%>,org.talend.jpalo.paloelements.<%=strDimensionUpdateMode%>);
							//	}
							break;
				<%
							}
						}
				%>			
					}
				}
			}
		<%
			if(bHierachieNormal){
		%>	
				for(org.talend.jpalo.talendHelpers.tPaloDimensionElements thPElem_<%=cid %> : thPDims_<%=cid %>.getParentChildList()){
					thPDims_<%=cid %>.buildConsolidationNormal(pELMs_<%=cid %>, thPElem_<%=cid %>.getElementName(), thPElem_<%=cid %>.getPosition());
				}
		<%
			}
		%>
			thPDims_<%=cid %> = new org.talend.jpalo.talendHelpers.tPaloDimensions();
			iCommitCounter_<%=cid %>=0;
		}

		<%
				}
			}
			
	    }else if(bCreateElements && bHierachieSelfReferenced){
	    
	    	for (IConnection conn : conns) {
    		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {    		
    		  
		
		int iNbOfDimensionElements = tDimensionElementsSelfReferenced.size();
		
		String strParentColumn="\"\"";
		String strChildColumn="\"\"";
		String strFactorColumn="";
		
		for(int i=0; i<iNbOfDimensionElements; i++){
			Map<String, String> DimensionElement = tDimensionElementsSelfReferenced.get(i);
			String strDimensionElement = DimensionElement.get("SOURCE_COLUMN");
			String strDimensionHierachieType = DimensionElement.get("ELEMENT_HIERACHIE_TYPE");
	
			if(strDimensionHierachieType.equals("ELEMENT_PARENT")){
				strParentColumn="String.valueOf("+strInputConnectionName+"."+strDimensionElement+")";
			}else if(strDimensionHierachieType.equals("ELEMENT_CHILD")){
				strChildColumn="String.valueOf("+strInputConnectionName+"."+strDimensionElement+")";
			}else if(strDimensionHierachieType.equals("ELEMENT_CHILD_FACTOR")){
				strFactorColumn="String.valueOf("+strInputConnectionName+"."+strDimensionElement+")";
			}
		}
		if(strFactorColumn.equals("")) strFactorColumn="\"1\"";
		
		
		%>
		thPDims_<%=cid %>.addMainInToTransformList(new String[]{<%=strParentColumn%>,<%=strChildColumn%>,<%=strFactorColumn%>});
		iCommitCounter_<%=cid %>++;
		if(iCommitCounter_<%=cid %> > <%=sCommitSize%>){
			thPDims_<%=cid %>.buildParentChildRelationShipReferenced();
			for(org.talend.jpalo.talendHelpers.tPaloDimensionElements thPElem_<%=cid %> : thPDims_<%=cid %>.getParentChildListSorted()){
				pELMs_<%=cid %>.createElement(thPElem_<%=cid %>.getElementName(),org.talend.jpalo.paloelements.<%=strSRDimensionElementType%>,org.talend.jpalo.paloelements.<%=strSRDimensionUpdateMode%>);
			}

		<%
			if(bHierachieSelfReferenced){
		%>
				for(org.talend.jpalo.talendHelpers.tPaloDimensionElements thPElem_<%=cid %> : thPDims_<%=cid %>.getParentChildList()){
					thPDims_<%=cid %>.buildConsolidationNormal(pELMs_<%=cid %>, thPElem_<%=cid %>.getElementName(), thPElem_<%=cid %>.getPosition());
				}	
		<%
			}
		%>
			thPDims_<%=cid %> = new org.talend.jpalo.talendHelpers.tPaloDimensions();
			iCommitCounter_<%=cid %>++;
		}
		<%

	    }
	   }
	}
	
%>
