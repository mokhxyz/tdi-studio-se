<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
boolean stats = codeGenArgument.isStatistics();

List<IMetadataTable> metadatas = node.getMetadataList();
boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__")); 
String cid = node.getUniqueName();
if ((metadatas!=null)&&(metadatas.size()>0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata!=null) {

        String host = ElementParameterParser.getValue(
            node,
            "__HOST__"
        );

        String port = ElementParameterParser.getValue(
            node,
            "__PORT__"
        );

        String user = ElementParameterParser.getValue(
            node,
            "__USER__"
        );

        String authMethod = ElementParameterParser.getValue(
            node,
            "__AUTH_METHOD__"
        );

        String privatekey = ElementParameterParser.getValue(
            node,
            "__PRIVATEKEY__"
        );

        String password = ElementParameterParser.getValue(
            node,
            "__PASSWORD__"
        );
        
        String passphrase = ElementParameterParser.getValue(
            node,
            "__PASSPHRASE__"
        );
        
        String useTimeout = ElementParameterParser.getValue(
            node,
            "__USE_TIMEOUT__"
        );

        String timeout = ElementParameterParser.getValue(
            node,
            "__TIMEOUT__"
        );
        
        String standardOutput  = ElementParameterParser.getValue(node, "__STANDARDOUTPUT__");
		String errorOuput  = ElementParameterParser.getValue(node, "__ERROROUTPUT__");
		if (("NORMAL_OUTPUT").equals(standardOutput)||("NORMAL_OUTPUT").equals(errorOuput)) {
%>
			final java.util.Vector<String> output_<%=cid%> = new java.util.Vector<String>();
<%
		}
%>
    String hostname_<%=cid%> = <%=host%>;
    String username_<%=cid%> = <%=user%>;

	globalMap.remove("<%=cid %>_STDOUT");
	globalMap.remove("<%=cid %>_STDERR");

	/* Create a connection instance */
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection attempt to '" +hostname_<%=cid%> + "' on the port '<%=port%>' as '" + username_<%=cid%> + "'.");
		<%}%>
<%
        if(("").equals(port)){
%>
			  ch.ethz.ssh2.Connection conn_<%=cid%> = new ch.ethz.ssh2.Connection(hostname_<%=cid%>);
<%
        } else {
%>
			  ch.ethz.ssh2.Connection conn_<%=cid%> = new ch.ethz.ssh2.Connection(hostname_<%=cid%>,Integer.parseInt(<%=port %> + ""));
<%
        }
%>
		/* Create a session */
		ch.ethz.ssh2.Session sess_<%=cid%> = null;
              /* Now connect */
<%
        if(("true").equals(useTimeout)){
%>
			  conn_<%=cid%>.connect(null,0,<%=timeout%>*1000);
<%
        } else {
%>
			  conn_<%=cid%>.connect();
<%
        }
        
        if (("PUBLICKEY").equals(authMethod)) {
%>
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Authentication using a public key.");
		<%}%>
        java.io.File keyfile_<%=cid%> = new java.io.File(<%=privatekey%>); 
        
        <%
        String passwordFieldName = "__PASSPHRASE__";
        %>
        
        <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>        
        
		    boolean isAuthenticated_<%=cid%> = conn_<%=cid%>.authenticateWithPublicKey(username_<%=cid%>, keyfile_<%=cid%>, decryptedPassword_<%=cid%>);
			  if (isAuthenticated_<%=cid%> == false){
			      throw new RuntimeException("Authentication failed.");
			  }
<%
        }
        if (("PASSWORD").equals(authMethod)) {
%>
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Authentication using a password.");
		<%}%>
		
        <%
        String passwordFieldName = "__PASSWORD__";
        %>
        
        <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>		
		
        boolean isAuthenticated_<%=cid%> = conn_<%=cid%>.authenticateWithPassword(username_<%=cid%>, decryptedPassword_<%=cid%>);
			if (isAuthenticated_<%=cid%> == false){
				throw new RuntimeException("Authentication failed.");
			}
<%
        }
        
        if (("KEYBOARDINTERACTIVE").equals(authMethod)) {
%>
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Authentication using an interactive action.");
		<%}%>
        boolean isAuthenticated_<%=cid%> = conn_<%=cid%>.authenticateWithKeyboardInteractive(username_<%=cid%>, 
            new ch.ethz.ssh2.InteractiveCallback() {
        
        		public String[] replyToChallenge(String name,
        				String instruction, int numPrompts,
        				String[] prompt, boolean[] echo)
        				throws java.lang.Exception {
        			// TODO Auto-generated method stub
        			String[] reply = new String[numPrompts];
        			
                    <%
                    String passwordFieldName = "__PASSWORD__";
                    %>
                    
                    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>        			
        			
        			for (int i = 0; i < reply.length; i++) {
        				reply[i] = decryptedPassword_<%=cid%>;
        			}
        
        			return reply;
        		}
        	}	
        );
        	if (isAuthenticated_<%=cid%> == false){
            	throw new RuntimeException("Authentication failed.");
        	}
<%
        }
%>
        <%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection to '" +hostname_<%=cid%> + "' has succeeded.");
		<%}%>
<%
    }
}
%>
		StringBuilder stringStdout_<%=cid%> =new StringBuilder();
        StringBuilder stringStderr_<%=cid%> =new StringBuilder();