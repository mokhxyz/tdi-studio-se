<%@ jet 
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
" 
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/DBLogUtil.javajet"%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	dbLog = new DBLogUtil(node);
	String cid = node.getUniqueName();
	
	String frameworkType = ElementParameterParser.getValue(node,"__FRAMEWORK_TYPE__");
	
	String connectionFlag = ElementParameterParser.getValue(node, "__CONNECTION_FLAG__");	
	
	%>
	if(resourceMap.get("finish_<%=cid%>")==null){
		if(resourceMap.get("conn_<%=cid%>")!=null){
			try
	    	{
	    		<%dbLog.conn().closeTry(null);%>
				((java.sql.Connection)resourceMap.get("conn_<%=cid%>")).close();
				<%dbLog.conn().closeDone(null);%>
			<%
			if(("EMBEDED").equals(frameworkType)){
			%>
	    		java.sql.DriverManager.getConnection("jdbc:derby:;shutdown=true");
			<%
			}
			%>
	    	}
	    	catch(java.sql.SQLException sqlEx_<%=cid %>)
	    	{
	    		String errorMessage_<%=cid%> = "failed to close the connection in <%=cid %> :" + sqlEx_<%=cid %>.getMessage();
	            <%dbLog.logPrintedException(dbLog.var("errorMessage"));%>
	    	}
		}
	}
