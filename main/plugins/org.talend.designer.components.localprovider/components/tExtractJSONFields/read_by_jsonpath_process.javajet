<%@ jet%>

<%
if (outConn ==null ) {
	return stringBuffer.toString();
}
%>

String loopPath_<%=cid%> = <%=loopQuery%>;
java.util.List<Object> resultset_<%=cid%> = new java.util.ArrayList<Object>();

boolean isStructError_<%=cid %> = true;
try {
	com.jayway.jsonpath.ReadContext document_<%=cid%> = com.jayway.jsonpath.JsonPath.parse(jsonStr_<%=cid%>);
	com.jayway.jsonpath.JsonPath compiledLoopPath_<%=cid%> = jsonPathCache_<%=cid%>.getCompiledJsonPath(loopPath_<%=cid%>);
	Object result_<%=cid%> = document_<%=cid%>.read(compiledLoopPath_<%=cid%>,net.minidev.json.JSONObject.class);
	if (result_<%=cid%> instanceof net.minidev.json.JSONArray) {
		resultset_<%=cid%> = (net.minidev.json.JSONArray) result_<%=cid%>;
	} else {
		resultset_<%=cid%>.add(result_<%=cid%>);
	}
	
	isStructError_<%=cid %> = false;
} catch (java.lang.Exception ex_<%=cid%>) {
<%
if(dieOnError){
%>
	throw(ex_<%=cid %>);
<%
} else {
    if(!("").equals(rejectConnName) && rejectColumnList != null && rejectColumnList.size() > 0) {
%>
    	<%=rejectConnName %> = new <%=rejectConnName %>Struct();
	    <%=rejectConnName %>.errorJSONField = jsonStr_<%=cid%>;
    	<%=rejectConnName %>.errorMessage = ex_<%=cid %>.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
<%
        if(inConn!=null){
            for(IMetadataColumn column : outConn.getMetadataTable().getListColumns()) {
                if(!jsonField.equals(column.getLabel())){
                    for(IMetadataColumn inColumn : inConn.getMetadataTable().getListColumns()){
                        if(inColumn.getLabel().equals(column.getLabel())){
%>
		<%=rejectConnName%>.<%=column.getLabel()%> = <%=inConn.getName() %>.<%=column.getLabel()%>;
<%
                        }
                    }
                }
            }
        }
    } else if(("").equals(rejectConnName)){
    	if(isLog4jEnabled){
%>
		log.error("<%=cid%> - " + ex_<%=cid %>.getMessage());
<%
		}
%>
		System.err.println(ex_<%=cid %>.getMessage());
<%
	}
}
%>
}

String jsonPath_<%=cid%> = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_<%=cid%> = null;

Object value_<%=cid%> = null;

for(int i_<%=cid %>=0; isStructError_<%=cid %> || (i_<%=cid %> < resultset_<%=cid %>.size());i_<%=cid %>++){
	if(!isStructError_<%=cid %>){
		Object row_<%=cid%> = resultset_<%=cid %>.get(i_<%=cid %>);
<%
if(outConns!=null){
    for (IConnection conn : outConns) {
        if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
            <%=conn.getName() %> = null;
<%
        }
    }
}
%>
	<%=firstConnName %> = new <%=firstConnName %>Struct();
	nb_line_<%=cid%>++;
	try {
<%
for (int i=0;i<mapping.size();i++) {
	for(IMetadataColumn column : outConn.getMetadataTable().getListColumns()) {
		String schemaColumn = mapping.get(i).get("SCHEMA_COLUMN");
		if(schemaColumn == null || !column.getLabel().equals(schemaColumn)) {
			continue;
		}
		
		String jsonPath = mapping.get(i).get("QUERY");
	 	if(jsonPath==null || jsonPath.trim().isEmpty()) {//only propagate
	 		for(IMetadataColumn inColumn : inColumns) {
		 		if(inColumn.getLabel().equals(column.getLabel())) {
%>
        		<%=firstConnName%>.<%=inColumn.getLabel()%> = <%=inConn.getName() %>.<%=inColumn.getLabel()%>;
<%
				}
			}
			continue;
	 	}
	 	
		String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
        JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
        String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
        
        String defaultValue = column.getDefault();
        boolean isNotSetDefault = (defaultValue == null || defaultValue.trim().length()==0);
%>
		jsonPath_<%=cid%> = <%=jsonPath%>;
		compiledJsonPath_<%=cid%> = jsonPathCache_<%=cid%>.getCompiledJsonPath(jsonPath_<%=cid%>);
		
		try {
			value_<%=cid%> = compiledJsonPath_<%=cid%>.read(row_<%=cid%>);
<%
        	if(javaType == JavaTypesManager.STRING){
%>
				<%=firstConnName%>.<%=column.getLabel() %> = value_<%=cid%> == null ? <%@ include file="./set_default_value.javajet"%> : value_<%=cid%>.toString();
<%
			} else {
%>
				if(value_<%=cid%> != null && !value_<%=cid%>.toString().isEmpty()) {
<%
				if(javaType == JavaTypesManager.OBJECT) {
%>
					<%=firstConnName%>.<%=column.getLabel() %> = value_<%=cid%>.toString();
<%
				} else if(javaType == JavaTypesManager.DATE) {
%>
					<%=firstConnName%>.<%=column.getLabel() %> = ParserUtils.parseTo_Date(value_<%=cid%>.toString(), <%=pattern%>);
<%
        		} else {
%>
					<%=firstConnName%>.<%=column.getLabel() %> = ParserUtils.parseTo_<%=typeToGenerate %>(value_<%=cid%>.toString());
<%
        		}
%>
				} else {
					<%=firstConnName %>.<%=column.getLabel() %> = <%@ include file="./set_default_value.javajet"%>;
				}
<%
        	}
%>
		} catch (com.jayway.jsonpath.PathNotFoundException e_<%=cid%>) {
			<%=firstConnName %>.<%=column.getLabel() %> = <%@ include file="./set_default_value.javajet"%>;
		}
<%
	}
}

if(!("").equals(rejectConnName) && rejectConnName.equals(firstConnName)){
%>
	<%=outConn.getName() %> = null;
<%
}
%>	
	} catch (java.lang.Exception ex_<%=cid %>) {
<%
    if(dieOnError){
%>
    	throw(ex_<%=cid %>);
<%
    }else{
        if(!("").equals(rejectConnName)&&!rejectConnName.equals(firstConnName)&&rejectColumnList != null && rejectColumnList.size() > 0) {
%>
    		<%=rejectConnName %> = new <%=rejectConnName %>Struct();
<%
            for(IMetadataColumn column : outConn.getMetadataTable().getListColumns()) {
%>
 			<%=rejectConnName%>.<%=column.getLabel()%> = <%=firstConnName %>.<%=column.getLabel() %>;
<%
            }
%>
		    <%=rejectConnName %>.errorJSONField = jsonStr_<%=cid%>;
		    <%=rejectConnName %>.errorMessage = ex_<%=cid %>.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
		    <%=firstConnName %> = null;
<%
        } else if(("").equals(rejectConnName)){
        	if(isLog4jEnabled){
%>
			log.error("<%=cid%> - " + ex_<%=cid %>.getMessage());
<%
			}
%>
		    System.err.println(ex_<%=cid %>.getMessage());
		    <%=firstConnName %> = null;
<%
        } else if(rejectConnName.equals(firstConnName)){
%>
		    <%=rejectConnName %>.errorJSONField = jsonStr_<%=cid%>;
		    <%=rejectConnName %>.errorMessage = ex_<%=cid %>.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
<%
        }
    }
%>	
	}
	
	}
    
	isStructError_<%=cid %> = false;
	
<%if(isLog4jEnabled){%>
	log.debug("<%=cid%> - Extracting the record " + nb_line_<%=cid %> + ".");
<%}%>
//}