<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.utils.NodeUtil
    java.util.Map
    java.util.List
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    
"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	int schemaOptNum=100;
    String schemaOptNumStr=ElementParameterParser.getValue(node, "__SCHEMA_OPT_NUM__");
    if(schemaOptNumStr!=null && !"".equals(schemaOptNumStr) && !"\"\"".equals(schemaOptNumStr)){
        schemaOptNum  = Integer.parseInt(schemaOptNumStr);
    }
    String jsonField = ElementParameterParser.getValue(node, "__JSONFIELD__");

    String dieOnErrorStr = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
    boolean dieOnError = (dieOnErrorStr!=null&&!("").equals(dieOnErrorStr))?("true").equals(dieOnErrorStr):false;
    String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
    
    IConnection inConn = null;
    List< ? extends IConnection> inConns = node.getIncomingConnections();
    List<IMetadataColumn> inColumns = null;
    if (inConns!=null) {
        for (IConnection incomingConn : inConns) {
            if (incomingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
                inConn = incomingConn;
                inColumns = inConn.getMetadataTable().getListColumns();
                break;
            }
        }
    }
    
    String readBy = ElementParameterParser.getValue(node, "__READ_BY__");
%>

int nb_line_<%=cid%> = 0;
String jsonStr_<%=cid%> = "";

<%if(!"JSONPATH".equals(readBy)) {
	List<Map<String, String>> mapping = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MAPPING__");
	String loopQuery = ElementParameterParser.getValue(node, "__LOOP_QUERY__");
%>
	<%@ include file="./read_by_xpath_init.javajet"%> 
<%} else {
	List<Map<String, String>> mapping = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MAPPING_4_JSONPATH__");
	String loopQuery = ElementParameterParser.getValue(node, "__JSON_LOOP_QUERY__");
%>
	<%@ include file="./read_by_jsonpath_init.javajet"%>
<%}%>