<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();	
	String cid = node.getUniqueName();
	String ignoreFailureAtQuit= ElementParameterParser.getValue(node,"__IGNORE_FAILURE_AT_QUIT__");
	String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
	String useExistingConn = ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__");
	boolean moveToCurrentDir = ("true").equals(ElementParameterParser.getValue(node, "__MOVE_TO_THE_CURRENT_DIRECTORY__"));
	boolean sftp = false;
	boolean ftps = false; 
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	if(("true").equals(useExistingConn)){
		List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();
		for(INode n : nodeList){
			if(n.getUniqueName().equals(connection)){
				sftp = ("true").equals(ElementParameterParser.getValue(n, "__SFTP__"));
				ftps = ("true").equals(ElementParameterParser.getValue(n, "__FTPS__")); 
			}
		}
	}else{
		sftp = ("true").equals(ElementParameterParser.getValue(node, "__SFTP__"));
		ftps = ("true").equals(ElementParameterParser.getValue(node, "__FTPS__")); 
	}
if(sftp){ // *** sftp *** //
%>
 	}
<%
	if(!("true").equals(useExistingConn)){
%>
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Closing the connection to the server.");
		<%}%>
    	session_<%=cid%>.disconnect(); 
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection to the server closed.");
		<%}%>
<%
	}
%>
    msg_<%=cid%>.add(nb_file_<%=cid%> + " files have been uploaded.");  
    	
	StringBuffer sb_<%=cid %> = new StringBuffer();
    for (String item_<%=cid %> : msg_<%=cid %>) {
        sb_<%=cid %>.append(item_<%=cid %>).append("\n");
    }
	globalMap.put("<%=cid%>_TRANSFER_MESSAGES", sb_<%=cid %>.toString());
    
<%}else if(!ftps){%> // *** ftp *** //
	}
	
	msg_<%=cid%>.add(ftp_<%=cid %>.getUploadCount() + " files have been uploaded.");
	
	String[] msgAll_<%=cid %> = msg_<%=cid%>.getAll();
    StringBuffer sb_<%=cid %> = new StringBuffer();
    if (msgAll_<%=cid %> != null) {
        for (String item_<%=cid %> : msgAll_<%=cid %>) {
            sb_<%=cid %>.append(item_<%=cid %>).append("\n");
        }
    }
	globalMap.put("<%=cid%>_TRANSFER_MESSAGES", sb_<%=cid %>.toString());
	
<%
		if(!("true").equals(useExistingConn)){
 			if(("true").equals(ignoreFailureAtQuit)){
%>
				try{
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Closing the connection to the server.");
					<%}%>
					ftp_<%=cid %>.quit();
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Connection to the server closed.");
					<%}%>
				}catch(java.net.SocketException se_<%=cid%>){
					<%if(isLog4jEnabled){%>
						log.warn("<%=cid%> - " + se_<%=cid%>.getMessage());
					<%}%>
					//ignore failure
				}
<%
			}else{
%>
				<%if(isLog4jEnabled){%>
					log.info("<%=cid%> - Closing the connection to the server.");
				<%}%>
				ftp_<%=cid %>.quit();
				<%if(isLog4jEnabled){%>
					log.info("<%=cid%> - Connection to the server closed.");
				<%}%>
<%
			}
		}else{
		    if(!moveToCurrentDir){
%>
		  		ftp_<%=cid %>.chdir(rootDir_<%=cid %>);
<%	
			}
		}
}else{  // *** ftps *** // 
%>
	}
<%
    if(!("true").equals(useExistingConn)){ 
%> 
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Closing the connection to the server.");
		<%}%>
        ftp_<%=cid%>.disconnect(true); 
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Connection to the server closed.");
		<%}%>
<% 
  	}else{
	    if(!moveToCurrentDir){
%>
	  		ftp_<%=cid %>.changeDirectory(rootDir_<%=cid %>);
<%	
		}
	}
}
%>
	
	
globalMap.put("<%=cid %>_NB_FILE",nb_file_<%=cid%>);
<%if(isLog4jEnabled){%>
	log.info("<%=cid%> - Uploaded files count: " + nb_file_<%=cid%> +  ".");
<%}%>

