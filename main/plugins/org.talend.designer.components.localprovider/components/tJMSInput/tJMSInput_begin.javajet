<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.core.model.process.IConnection
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnectionCategory
    java.util.List
	java.util.Map
" 
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/LogUtil.javajet"%>
<%

CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
log = new LogUtil(node);
String contextProvider=ElementParameterParser.getValue(node, "__CONTEXT_PROVIDER__");
String connFacName=ElementParameterParser.getValue(node, "__CONN_FACTORY_NAME__");
String url=ElementParameterParser.getValue(node, "__SERVER_URL__");
String userIdentity=ElementParameterParser.getValue(node, "__USER_IDENTITY__");
String user=ElementParameterParser.getValue(node, "__USER__");

String from=ElementParameterParser.getValue(node, "__FROM__");
String timeout=ElementParameterParser.getValue(node, "__TIMEOUT__");
String messageSelector=ElementParameterParser.getValue(node, "__MSG_SELECTOR__");
String processingMode = ElementParameterParser.getValue(node, "__PROCESSING_MODE__");
String msgType = ElementParameterParser.getValue(node, "__MSGTYPE__");

List<Map<String, String>> advProps = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__ADVANCED_PROPERTIES__");

boolean enableSubscription = "Topic".equals(msgType) && "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__ENABLE_SUB__"));
String clientID = ElementParameterParser.getValue(node, "__CLIENT_ID__");
String subscriberName = ElementParameterParser.getValue(node, "__SUBSCRIBER_NAME__");

IMetadataTable metadata=null;
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas!=null)&&(metadatas.size()>0)) {
	metadata = metadatas.get(0);
}
%>

	java.util.Hashtable props_<%=cid%> = new java.util.Hashtable();
	props_<%=cid%>.put(javax.naming.Context.INITIAL_CONTEXT_FACTORY, <%=contextProvider%>);
	props_<%=cid%>.put(javax.naming.Context.PROVIDER_URL, <%=url%>);
	
<%
if(advProps.size() > 0){
	for(Map<String, String> item : advProps){
%>
	props_<%=cid%>.put(<%=item.get("PROPERTY") %>, <%=item.get("VALUE") %>);
<% 
	} 
}
%>
	
	javax.naming.Context context_<%=cid%> = new javax.naming.InitialContext(props_<%=cid%>);
	javax.jms.ConnectionFactory factory_<%=cid%> = (javax.jms.ConnectionFactory) context_<%=cid%>.lookup(<%=connFacName%>);
	
    <%
    String passwordFieldName = "__PASS__";
    %>
        
    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

	javax.jms.Connection connection_<%=cid%> = factory_<%=cid%>.createConnection(<%if("true".equals(userIdentity)){%><%=user %>, decryptedPassword_<%=cid%><%}%>);
	
	<%
	if(enableSubscription && clientID != null && clientID.length() > 0){
	%>
	connection_<%=cid%>.setClientID(<%=clientID%>);
	<%
	}
	%>
	
	javax.jms.Session session_<%=cid%> = connection_<%=cid%>.createSession(false, javax.jms.Session.CLIENT_ACKNOWLEDGE);
	javax.jms.Destination dest_<%=cid%> = session_<%=cid%>.create<%=msgType%>(<%=from %>);

	<%
	if(enableSubscription){
	%>
	javax.jms.MessageConsumer consumer_<%=cid%> = session_<%=cid%>.createDurableSubscriber((javax.jms.Topic)dest_<%=cid%>,<%=subscriberName%>,<%=messageSelector%>,false);
	<%
	} else {
	%>
	javax.jms.MessageConsumer consumer_<%=cid%>	= session_<%=cid%>.createConsumer(dest_<%=cid%>, <%=messageSelector%>);
	<%
	}
	%>
	
	connection_<%=cid%>.start();

	System.out.println("Ready to receive message");
	System.out.println("Waiting...");
	<%log.info(log.str("Ready to receive message."));%>
	<%log.info(log.str("Waiting..."));%>

	javax.jms.Message message_<%=cid%>;

	int nbline_<%=cid %> = 0;

	while ((message_<%=cid%> = consumer_<%=cid%>.receive(<%="-1".equals(timeout)?0:timeout%>*1000)) != null) {
		<%log.debug(log.str("Retrieving the message "), "(nbline_" + cid + "+1)", log.str("."));%>
<%
	List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
	List<IMetadataColumn> columnLists = metadata.getListColumns();
	for(IConnection conn:conns){
		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
			String firstConnName = conn.getName();
			if("RAW".equals(processingMode)){
%>
		<%=firstConnName%>.message=message_<%=cid %>;	
<%
			}else{
				if("id_Document".equals(metadata.getColumn("messageContent").getTalendType())){
%>
		<%=firstConnName%>.messageContent=ParserUtils.parseTo_Document(((javax.jms.ObjectMessage) message_<%=cid %>).getObject().toString());
<%
				}else{
%>
		<%=firstConnName%>.messageContent=((javax.jms.TextMessage) message_<%=cid %>).getText();
<%
				}
			}
		}
	}
	

%>


		
