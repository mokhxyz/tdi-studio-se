<%@ jet 
imports="
        org.talend.core.model.process.INode 
    	org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType		
		java.util.List
        "
%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
String version_selection = ElementParameterParser.getValue(node, "__VERSION_SELECTION__");
if(version_selection.equals("VTIGER_50")){

    String method = ElementParameterParser.getValue(node, "__METHODNAME__");
    String incomingConnName = null;
    List<? extends IConnection> conns = node.getIncomingConnections();
    if(conns != null && conns.size() > 0) {
        IConnection conn = conns.get(0);
        incomingConnName = conn.getName();
    }
    List<IMetadataColumn> metadataColumns = null;
    List<IMetadataTable> metadataTables = node.getMetadataList();
    if(metadataTables != null && metadataTables.size() > 0) {
        IMetadataTable metadataTable = metadataTables.get(0);
        if(metadataTable != null) {
            metadataColumns = metadataTable.getListColumns();
            StringBuilder paramString = null;
            if(("addClndr").equals(method) || ("updateClndr").equals(method)) {
                %>
                org.talend.vtiger.module.outlook.Clndrdetail clndrdetail_<%=cid%> = new org.talend.vtiger.module.outlook.Clndrdetail();
                <%
            } else if(("addContacts").equals(method) || ("updateContacts").equals(method)) {
                %>
                org.talend.vtiger.module.outlook.Contactdetail contactdetail_<%=cid%> = new org.talend.vtiger.module.outlook.Contactdetail();
                <%
            } else if(("addTasks").equals(method) || ("updateTasks").equals(method)) {
                %>
                org.talend.vtiger.module.outlook.Taskdetail taskdetail_<%=cid%> = new org.talend.vtiger.module.outlook.Taskdetail();
                <%
            } else if (("addMessageToContact").equals(method)) {
                %>
                String contactid_<%=cid%> = null;
                org.talend.vtiger.module.outlook.Emailmsgdetail emailmsgdetail_<%=cid%> = new org.talend.vtiger.module.outlook.Emailmsgdetail();
                <%
            } else {
                paramString = new StringBuilder();
            }
            for(IMetadataColumn metadataColumn : metadataColumns) {
                if(("addClndr").equals(method) || ("updateClndr").equals(method)) {
                    %>
                    clndrdetail_<%=cid%>.set<%=metadataColumn.getLabel().substring(0,1).toUpperCase()%><%=metadataColumn.getLabel().substring(1)%>(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);            
                    <%
                } else if(("addContacts").equals(method) || ("updateContacts").equals(method)) {
                    %>
                    contactdetail_<%=cid%>.set<%=metadataColumn.getLabel().substring(0,1).toUpperCase()%><%=metadataColumn.getLabel().substring(1)%>(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                    <%
                } else if(("addTasks").equals(method) || ("updateTasks").equals(method)) {
                    %>
                    taskdetail_<%=cid%>.set<%=metadataColumn.getLabel().substring(0,1).toUpperCase()%><%=metadataColumn.getLabel().substring(1)%>(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                    <%
                } else if(("addMessageToContact").equals(method)) {
                    if(("contactid").equals(metadataColumn.getLabel())) {
                        %>
                        contactid_<%=cid%> = <%=incomingConnName%>.<%=metadataColumn.getLabel()%>;
                        <%
                    } else {
                        %>
                        emailmsgdetail_<%=cid%>.set<%=metadataColumn.getLabel().substring(0,1).toUpperCase()%><%=metadataColumn.getLabel().substring(1)%>(<%=incomingConnName%>.<%=metadataColumn.getLabel()%>);
                        <%
                    }
                } else {
                    paramString.append(incomingConnName + "." + metadataColumn.getLabel() + ", ");
                }
            }
            if(("addClndr").equals(method) || ("updateClndr").equals(method)) {
                %>
                clndrDetais_<%=cid%>.add(clndrdetail_<%=cid%>);
                <%
            } else if(("addContacts").equals(method) || ("updateContacts").equals(method)) {
                %>
                contactdetails_<%=cid%>.add(contactdetail_<%=cid%>);
                <%
            } else if(("addTasks").equals(method) || ("updateTasks").equals(method)) {
                %>
                taskdetails_<%=cid%>.add(taskdetail_<%=cid%>);
                <%
            } else if(("addMessageToContact").equals(method)) {
                %>
                vtigerManager_<%=cid%>.<%=method%>(contactid_<%=cid%>,emailmsgdetail_<%=cid%>);
                <%
            } else {
                if(paramString.toString().length() > 0) {            
                    %>
                    vtigerManager_<%=cid%>.<%=method%>(<%=paramString.toString().substring(0,paramString.toString().lastIndexOf(","))%>);
                    <%
                } else {
                    %>
                    vtigerManager_<%=cid%>.<%=method%>();
                    <%
                }
            }  
        }
    }
//*****************************************************version 5.1 start**************************************
}else{
	String action  = ElementParameterParser.getValue(node, "__ACTION__");
	String moduleName  = ElementParameterParser.getValue(node, "__MODULENAME_510__");
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
    List<IMetadataTable> metadatas = node.getMetadataList();
    if ((metadatas!=null)&&(metadatas.size()>0)) {//1
        IMetadataTable metadata = metadatas.get(0);
        if (metadata!=null) {//2
        	List< ? extends IConnection> conns = node.getIncomingConnections();
        	for (IConnection conn : conns) {//3
        		if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {//4
        			List<IMetadataColumn> columns = metadata.getListColumns();
    				int sizeColumns = columns.size();
    				%>
    				java.util.Map valueMap_<%=cid%> = new java.util.HashMap();
    				<%
    				for (int i = 0; i < sizeColumns; i++) {//5  			
        				IMetadataColumn column = columns.get(i);
        				JavaType javaType = JavaTypesManager.getJavaTypeFromId(column.getTalendType());
    					boolean isPrimitive = JavaTypesManager.isJavaPrimitiveType( javaType, column.isNullable());
        				String pattern = column.getPattern() == null || column.getPattern().trim().length() == 0 ? null : column.getPattern();
        				if (javaType == JavaTypesManager.DATE && pattern != null && pattern.trim().length() != 0) {//Date
        				%>
        				if(<%=conn.getName() %>.<%=column.getLabel() %> != null){
							valueMap_<%=cid%>.put("<%=column.getLabel() %>",FormatterUtils.format_Date(<%=conn.getName() %>.<%=column.getLabel() %>, <%= pattern %>) );
						}
        				<%
        				} else if (javaType == JavaTypesManager.BYTE_ARRAY) {//byte[]
        				%>
        				if(<%=conn.getName() %>.<%=column.getLabel() %> != null){
							valueMap_<%=cid%>.put("<%=column.getLabel() %>",java.nio.charset.Charset.defaultCharset().decode(java.nio.ByteBuffer.wrap(<%=conn.getName() %>.<%=column.getLabel() %>)).toString() );
						}
        				<%
        				} else {//others
        				%>
        				<%if(!isPrimitive) {%>
		    			if(<%=conn.getName() %>.<%=column.getLabel() %> != null) { 
		    			<%}else{%>
		    			if(!"".equals(String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>))) { 
		    			<%}%>
							valueMap_<%=cid%>.put("<%=column.getLabel() %>",String.valueOf(<%=conn.getName() %>.<%=column.getLabel() %>) );
						}
        				<%
        				}
					}//5
					%>
					Object result_<%=cid%> = null;
					<%
					if ("insert".equals(action)){
					%>
					result_<%=cid%> = vtMgr_<%=cid%>.doCreate("<%=moduleName%>", valueMap_<%=cid%>);
					<%
					}else if("update".equals(action)){
					%>
					java.util.Map elementMap_<%=cid%> = new java.util.HashMap();
        			elementMap_<%=cid%>.put("element", vtMgr_<%=cid%>.toJSONString(valueMap_<%=cid%>));
        			result_<%=cid%> = vtMgr_<%=cid%>.doInvoke("update", elementMap_<%=cid%>, "POST");
					<%
					}else if("delete".equals(action)){
					%>
					result_<%=cid%> = vtMgr_<%=cid%>.doInvoke("delete", valueMap_<%=cid%>, "POST");
					<%						
					}
					%>
					if (vtMgr_<%=cid%>.hasError(result_<%=cid%>)) {
					<%
	                   if (("true").equals(dieOnError)) {
	                %>
	                	throw new RuntimeException(vtMgr_<%=cid%>.lastError()==null? "No response from vtigerCRM": vtMgr_<%=cid%>.lastError().toString());
	                <%
	                 	} else {
	                %>
                        System.err.println(vtMgr_<%=cid%>.lastError()==null? "No response from vtigerCRM": vtMgr_<%=cid%>.lastError().toString());
                    <%
                    	}
                    %>
                    } 
					<%
        		}//4
        	}//3
        }//2
    }//1

}
%>
