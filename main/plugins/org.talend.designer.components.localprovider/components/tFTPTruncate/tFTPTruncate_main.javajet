<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
	String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
	String useExistingConn = ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	boolean sftp = false;
	boolean useGlob = ("true").equals(ElementParameterParser.getValue(node, "__PERL5_REGEX__"));
	if(("true").equals(useExistingConn)){
		List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();
		for(INode n : nodeList){
			if(n.getUniqueName().equals(connection)){
				sftp = ("true").equals(ElementParameterParser.getValue(n, "__SFTP__"));
			}
		}
	}else{
		sftp = ("true").equals(ElementParameterParser.getValue(node, "__SFTP__"));
	}
	if(sftp){
%>


		globalMap.put("<%=cid %>_CURRENT_STATUS", "No file truncated.");
		java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet(); 
		for (String key<%=cid %> : keySet<%=cid %>) {     
    		String filemask<%=cid %> = key<%=cid %>; 
	    	String dir<%=cid %> = null;
    	    <%if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string%>
       			String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;
	        <%}else{%>
		        String mask<%=cid %> = filemask<%=cid %>;
        	<%}%>
	    	int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
			if (i<%=cid %>!=-1) {
				dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>); 
				mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1); 
    		}
<%
			//bug TDI-19189 make regex to match the file name with Regular Expressions  
%>    	
    	    <%if(!useGlob) {%>
        	    mask<%=cid %> = org.apache.oro.text.GlobCompiler.globToPerl5(mask<%=cid %>.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
	        <%}%>
			java.util.Vector listings<%=cid %> = c_<%=cid %>.ls(<%=remotedir %>);
			for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.size(); m<%=cid %>++) { 
				String filePath<%=cid%> =  ((com.jcraft.jsch.ChannelSftp.LsEntry) listings<%=cid %>.elementAt(m<%=cid %>)).getFilename() ;
				if ( filePath<%=cid%>.matches(mask<%=cid %>)) {
					try {
						c_<%=cid%>.put(new java.io.ByteArrayInputStream(new byte[]{}), <%=remotedir %>+"/"+filePath<%=cid%>);
						globalMap.put("<%=cid %>_CURRENT_STATUS", "File truncate OK.");
						<%if(isLog4jEnabled){%>
							log.debug("<%=cid%> - '" + filePath<%=cid%>  + "' truncate ok.");
						<%}%>
					} catch (com.jcraft.jsch.SftpException se) {
                		globalMap.put("<%=cid %>_CURRENT_STATUS", "File truncate fail.");
    	                throw se;
					}
					nb_file_<%=cid%>++;
				}
			}	     
   		}  
<%
	}else{
%>
		globalMap.put("<%=cid %>_CURRENT_STATUS", "No file truncated.");
    	java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet(); 
	    try {
			for (String key<%=cid %> : keySet<%=cid %>) {     
				String filemask<%=cid %> = key<%=cid %>; 
				String dir<%=cid %> = null;
				<%if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string%>
    	    		String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;
				<%}else{%>
					String mask<%=cid %> = filemask<%=cid %>;
				<%}%>
		    	int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
				if (i<%=cid %>!=-1) {
					dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>); 
					mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1); 
	    		}
				if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) ftp_<%=cid %>.chdir(dir<%=cid %>);
		        <%if(!useGlob) {%>
    				mask<%=cid %> = org.apache.oro.text.GlobCompiler.globToPerl5(mask<%=cid %>.toCharArray(), org.apache.oro.text.GlobCompiler.DEFAULT_MASK);
		       	<%}%>
				String[] listings<%=cid %> = ftp_<%=cid %>.dir(null, false);
				for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++) {
					if (listings<%=cid %>[m<%=cid %>].matches(mask<%=cid %>)) {
						ftp_<%=cid %>.put(new ByteArrayInputStream(new byte[]{}), listings<%=cid %>[m<%=cid %>]);
						globalMap.put("<%=cid %>_CURRENT_STATUS", "File truncate OK.");
						<%if(isLog4jEnabled){%>
							log.debug("<%=cid%> - '" + listings<%=cid %>[m<%=cid %>] + "' truncate ok.");
						<%}%>
						nb_file_<%=cid%>++;
					}
				}
	   		}
		}catch(com.enterprisedt.net.ftp.FTPException e){
   			globalMap.put("<%=cid %>_CURRENT_STATUS", "File truncate fail.");
	   		throw e;
   		}
		ftp_<%=cid %>.chdir(root<%=cid %>);
<%}%>
